bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  getAndMoveToFrontDecode_yy;	  final    String    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  final  String  retChar  =  this.currentState;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  this.currentState;	  final    String    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  getAndMoveToFrontDecode_yy();	  final    String    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  final  String  retChar  =  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  RAND_PART_A_STATE;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  RAND_PART_A_STATE;	  final    String    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  getAndMoveToFrontDecode_yy(currentState);	  final    String    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_y0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_y0();	  final    int    retChar    =    getAndMoveToFrontDecode_y0();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
7	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_y0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_y0();	  final    int    retChar    =    getAndMoveToFrontDecode_y0();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
8	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0()  +  1;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0()  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0()  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_y0();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
9	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y1();  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y1();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y1();	  final    int    retChar    =    getAndMoveToFrontDecode_y0();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
10	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_x0();  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_x0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_x0();	  final    int    retChar    =    getAndMoveToFrontDecode_y0();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
11	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
12	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
13	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  RAND_PART_A_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  RAND_PART_A_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  RAND_PART_A_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
14	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
15	[BUG]  [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar);	  final    char    retChar    =    getAndMoveToFrontDecode_yy(this.currentChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  1);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  1);	  final    char    retChar    =    getAndMoveToFrontDecode_yy(this.currentChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  currentState);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  currentState);	  final    char    retChar    =    getAndMoveToFrontDecode_yy(this.currentChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentState);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentState);	  final    char    retChar    =    getAndMoveToFrontDecode_yy(this.currentChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  this.blockSize100k);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  this.blockSize100k);	  final    char    retChar    =    getAndMoveToFrontDecode_yy(this.currentChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  true);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  true);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  true);	  final    char    retChar    =    getAndMoveToFrontDecode_yy(this.currentChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(su_z);	  final    char    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentChar);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(currentChar);	  final    char    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(su_z);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
24	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  0);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  0);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
25	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  1);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  1);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
26	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
27	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy1();  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy1();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy1();	  final    byte    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
28	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0()  +  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0()  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy0()  +  1;	  final    byte    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
29	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  RAND_PART_A_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  RAND_PART_A_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  RAND_PART_A_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
30	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
31	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
32	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar  ==  START_BLOCK_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentChar  ==  START_BLOCK_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar  ==  START_BLOCK_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    ==    START_BLOCK_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
33	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  ==  RAND_PART_C_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentChar  ==  RAND_PART_C_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  ==  RAND_PART_C_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    ==    START_BLOCK_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
34	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar!=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentChar!=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar!=  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    ==    START_BLOCK_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
35	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    ==    START_BLOCK_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
36	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentChar);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
37	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar,  1);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar,  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
38	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar,  true);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar,  true);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar,  true);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
39	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar,  currentState);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar,  currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar,  currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
40	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState,  1);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState,  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
41	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  2);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  2);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  2);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
42	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  4);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  4);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  4);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
43	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  3);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  3);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  3);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
44	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState,  1);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState,  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
45	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  0,  1);  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  0,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  0,  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
46	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState;  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentState;  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentState;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
48	[BUG]  [BUGGY]  final  int  retChar  =  this.currentState  |  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentState  |  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentState  |  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
49	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState  +  1;  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
50	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentState;  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentState;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
51	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState;  [CE]  illegal  start  of  type  [FE]                                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
52	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  RAND_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  RAND_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  RAND_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
53	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
54	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
55	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
56	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  &  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  &  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  &  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    this.currentChar    |    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
57	[BUG]  [BUGGY]  final  char  retChar  =  this.currentChar  |  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.currentChar  |  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentChar  |  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    this.currentChar    |    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
58	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  |  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  |  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  |  getAndMoveToFrontDecode_yy  +  1;	  final    int    retChar    =    this.currentChar    |    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy1();  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy1();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy1();	  final    int    retChar    =    getAndMoveToFrontDecode_yy0()    +    1;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
60	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(0);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read(0);	  int    currentState    =    getAndMoveToFrontDecode_yy.read1();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
61	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readUTF();  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readUTF();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.readUTF();	  int    currentState    =    getAndMoveToFrontDecode_yy.read1();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
62	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readBytes(1);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readBytes(1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.readBytes(1);	  int    currentState    =    getAndMoveToFrontDecode_yy.read1();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
63	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  1;	  final    byte    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
64	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy.length;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy.length;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy.length;	  final    byte    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  2;	  final    byte    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentChar);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(currentChar);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
67	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  RAND_PART_A_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  RAND_PART_A_STATE);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
68	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  true);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  true);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  true);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
69	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  false);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  false);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  false);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
70	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentChar  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >>    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
71	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar!=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentChar!=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar!=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >>    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
72	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
73	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
74	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
75	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
76	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
77	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  2);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  2);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  2);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
78	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
79	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  3);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  3);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  3);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
80	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState  +  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
81	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  4);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  4);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  4);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
82	[BUG]  [BUGGY]  final  char  retChar  =  this.read0  +  1;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.read0  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.read0  +  1;	  final    int    retChar    =    this.read0    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
83	[BUG]  [BUGGY]  final  byte  retChar  =  this.read0  +  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.read0  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.read0  +  1;	  final    int    retChar    =    this.read0    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
84	[BUG]  [BUGGY]  final  int  retChar  =  read0  +  1;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  read0  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  read0  +  1;	  final    int    retChar    =    this.read0    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
85	[BUG]  [BUGGY]  final  int  retChar  =  this.read1  +  1;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.read1  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.read1  +  1;	  final    int    retChar    =    this.read0    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
86	[BUG]  [BUGGY]  final  int  retChar  =  this.read0  +  2;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.read0  +  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.read0  +  2;	  final    int    retChar    =    this.read0    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
87	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(recvDecodingTables_pos);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(recvDecodingTables_pos);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read(recvDecodingTables_pos);	  int    currentState    =    getAndMoveToFrontDecode_yy.read();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
88	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(su_z);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read(su_z);	  int    currentState    =    getAndMoveToFrontDecode_yy.read();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
89	[BUG]  [BUGGY]  final  Char  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  Char  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  Char  retChar  =  getAndMoveToFrontDecode_yy;	  final    Char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
90	[BUG]  [BUGGY]  final  Char  retChar  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  Char  retChar  =  getAndMoveToFrontDecode_yy();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  Char  retChar  =  getAndMoveToFrontDecode_yy();	  final    Char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
91	[BUG]  [BUGGY]  final  Char  retChar  =(char)this.currentChar;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  Char  retChar  =(char)this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  Char  retChar  =(char)this.currentChar;	  final    Char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
92	[BUG]  [BUGGY]  final  Char  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  Char  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  Char  retChar  =  getAndMoveToFrontDecode_yy(currentState);	  final    Char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
93	[BUG]  [BUGGY]  final  Char  retChar  =  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  Char  retChar  =  RAND_PART_A_STATE;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  Char  retChar  =  RAND_PART_A_STATE;	  final    Char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
94	[BUG]  [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;	  final    char    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
95	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentChar;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentChar;	  final    char    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
96	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar  +  1;	  final    char    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
97	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;	  final    char    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
98	[BUG]  [BUGGY]  final  int  retChar  =  this.seqToUnseq  +  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.seqToUnseq  +  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.seqToUnseq  +  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
99	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
100	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  *  this.currentChar;  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  *  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  *  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
101	[BUG]  [BUGGY]  final  byte  retChar  =  this.read0B;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.read0B;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.read0B;	  final    byte    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
102	[BUG]  [BUGGY]  final  byte  retChar  =  this.read1;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.read1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.read1;	  final    byte    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
103	[BUG]  [BUGGY]  final  byte  retChar  =  this.read0L;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.read0L;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.read0L;	  final    byte    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
104	[BUG]  [BUGGY]  final  char  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    this.currentChar    +    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
105	[BUG]  [BUGGY]  final  int  retChar  =  this.currentState  +  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentState  +  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentState  +  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    this.currentChar    +    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
106	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy  +  1;	  final    int    retChar    =    this.currentChar    +    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
107	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  *  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  *  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  *  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    this.currentChar    +    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
108	[BUG]  [BUGGY]  final  char  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read0;	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
109	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.byteArray2d;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.byteArray2d;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.byteArray2d;	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
110	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read1  :  this.read0;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read1  :  this.read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read1  :  this.read0;	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
111	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.byteArray[this.read0];  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.byteArray[this.read0];  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.byteArray[this.read0];	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
112	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.charArray2d;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.charArray2d;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.charArray2d;	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
113	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read1;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read1;	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
114	[BUG]  [BUGGY]  final  char  retChar  =  this.currentState  +  1;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.currentState  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentState  +  1;	  final    char    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
115	[BUG]  [BUGGY]  final  char  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  1  :  0;	  final    char    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
116	[BUG]  [BUGGY]  final  char  retChar  =(this.currentState!=  START_BLOCK_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentState!=  START_BLOCK_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentState!=  START_BLOCK_STATE)?  1  :  0;	  final    char    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
117	[BUG]  [BUGGY]  final  char  retChar  =  this.currentChar  +  3;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.currentChar  +  3;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentChar  +  3;	  final    int    retChar    =    this.currentChar    +    3;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
118	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  *  3;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  *  3;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  *  3;	  final    int    retChar    =    this.currentChar    +    3;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
119	[BUG]  [BUGGY]  final  int  retChar  =  this.currentState  +  3;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentState  +  3;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentState  +  3;	  final    int    retChar    =    this.currentChar    +    3;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
120	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState,  true);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState,  true);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState,  true);	  final    char    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
121	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_char;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_char;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_char;	  final    int    retChar    =    getAndMoveToFrontDecode_char;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
122	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_char;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_char;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_char;	  final    int    retChar    =    getAndMoveToFrontDecode_char;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
123	[BUG]  [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_char;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_char;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  getAndMoveToFrontDecode_char;	  final    int    retChar    =    getAndMoveToFrontDecode_char;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
124	[BUG]  [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_char;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_char;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	char  retChar  =  getAndMoveToFrontDecode_char;	  final    int    retChar    =    getAndMoveToFrontDecode_char;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
125	[BUG]  [BUGGY]  final  int  retChar  =  this.getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_char;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
126	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
127	[BUG]  [BUGGY]  final  char  retChar  =(this.currentState  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentState  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentState  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
128	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  >=  START_BLOCK_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  >=  START_BLOCK_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  >=  START_BLOCK_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
129	[BUG]  [BUGGY]  final  char  retChar  =(this.currentState  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentState  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentState  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
130	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
131	[BUG]  [BUGGY]  int  currentState  =  read0(0);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  read0(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  read0(0);	  int    currentState    =    read0();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
132	[BUG]  [BUGGY]  int  currentState  =(int)read0();  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =(int)read0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =(int)read0();	  int    currentState    =    read0();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
133	[BUG]  [BUGGY]  int  currentState  =  read0()  -  1;  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  read0()  -  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  read0()  -  1;	  int    currentState    =    read0();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
134	[BUG]  [BUGGY]  int  currentState  =  read1();  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  read1();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  read1();	  int    currentState    =    read0();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
135	[BUG]  [BUGGY]  int  currentState  =  read0(data.length);  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  read0(data.length);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  read0(data.length);	  int    currentState    =    read0();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
136	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readInt(0);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readInt(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.readInt(0);	  int    currentState    =    getAndMoveToFrontDecode_yy.readInt();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
137	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readUnsignedInt();  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readUnsignedInt();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.readUnsignedInt();	  int    currentState    =    getAndMoveToFrontDecode_yy.readInt();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
138	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readUnseq();  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readUnseq();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.readUnseq();	  int    currentState    =    getAndMoveToFrontDecode_yy.readInt();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
139	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_y0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_y0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_y0;	  final    int    retChar    =    getAndMoveToFrontDecode_y0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
140	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_y0;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_y0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_y0;	  final    int    retChar    =    getAndMoveToFrontDecode_y0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
141	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0  +  1;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_y0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
142	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0(currentState);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_y0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
143	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0.length;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0.length;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0.length;	  final    int    retChar    =    getAndMoveToFrontDecode_y0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
144	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  0);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  0);	  int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
145	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  1);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  1);	  int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
146	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  RAND_PART_A_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  RAND_PART_A_STATE);	  int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
147	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  true);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  true);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  true);	  int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
148	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  false);  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  false);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  false);	  int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
149	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  read0);  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  read0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  read0);	  int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
150	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  +  2;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    2;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
151	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  *  2;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  *  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  *  2;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    2;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
152	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  /  2;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  /  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  /  2;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    2;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
153	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    2;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
154	[BUG]  [BUGGY]  final  char  currentChar  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentChar  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentChar  =  getAndMoveToFrontDecode_yy(currentState);	  final    int    currentChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
155	[BUG]  [BUGGY]  final  byte  currentChar  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  currentChar  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  currentChar  =  getAndMoveToFrontDecode_yy(currentState);	  final    int    currentChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
156	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);	  final    int    currentChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
157	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  0);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  0);	  final    int    currentChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
158	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  1);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  1);	  final    int    currentChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
159	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_C_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_C_STATE);	  final    int    currentChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
160	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
161	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  START_BLOCK_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  START_BLOCK_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
162	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  NO_RAND_PART_A_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  NO_RAND_PART_A_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
163	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
164	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  read0);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  read0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  read0);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
165	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  ROUTE_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  ROUTE_PART_A_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  ROUTE_PART_A_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
166	[BUG]  [BUGGY]  final  String  retChar  =(this.currentChar  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =(this.currentChar  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =(this.currentChar  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    char    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
167	[BUG]  [BUGGY]  final  String  retChar  =(this.currentChar  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =(this.currentChar  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =(this.currentChar  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    char    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
168	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentChar  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    char    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
169	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentChar  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    char    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
170	[BUG]  [BUGGY]  final  String  retChar  =(this.currentChar!=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =(this.currentChar!=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =(this.currentChar!=  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    char    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
171	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentChar  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    char    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
172	[BUG]  [BUGGY]  final  String  retChar  =  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  this.currentChar  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  this.currentChar  +  1;	  final    char    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
173	[BUG]  [BUGGY]  final  char  retChar  =  this.currentChar  +  2;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.currentChar  +  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentChar  +  2;	  final    char    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
174	[BUG]  [BUGGY]  final  char  retChar  =  this.currentChar  *  1;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.currentChar  *  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentChar  *  1;	  final    char    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
175	[BUG]  [BUGGY]  final  Char  retChar  =  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  Char  retChar  =  this.currentChar  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  Char  retChar  =  this.currentChar  +  1;	  final    char    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
176	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_PART_A_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_PART_A_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  ==  RAND_PART_A_STATE)?  1  :  0;	  final    int    retChar    =(this.currentState    ==    START_BLOCK_STATE)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
177	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  1  :  0;	  final    int    retChar    =(this.currentState    ==    START_BLOCK_STATE)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
178	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_PART_C_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_PART_C_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  ==  RAND_PART_C_STATE)?  1  :  0;	  final    int    retChar    =(this.currentState    ==    START_BLOCK_STATE)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
179	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_BLOCK_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_BLOCK_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  ==  RAND_BLOCK_STATE)?  1  :  0;	  final    int    retChar    =(this.currentState    ==    START_BLOCK_STATE)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
180	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState!=  RAND_PART_A_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState!=  RAND_PART_A_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState!=  RAND_PART_A_STATE)?  1  :  0;	  final    int    retChar    =(this.currentState    ==    START_BLOCK_STATE)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
181	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState!=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState!=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState!=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >>    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
182	[BUG]  [BUGGY]  final  char  retChar  =(this.currentState  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentState  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentState  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >>    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
183	[BUG]  [BUGGY]  final  char  retChar  =(this.currentState!=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentState!=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentState!=  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >>    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
184	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0(su_z);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy0(su_z);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(su_z);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
185	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(currentChar);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0(currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(su_z);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
186	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0(su_z);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy0(su_z);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(su_z);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
187	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_z,  currentChar);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_z,  currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_z,  currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(su_z);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
188	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
189	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  0,  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  0,  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  0,	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
190	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
191	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_char  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_char  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_char	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
192	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra  [CE]  illegal  start  of  type  [FE]                                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
193	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_  [CE]  illegal  start  of  type  [FE]                                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arraycopy(temp_	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
194	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra  [CE]  illegal  start  of  type  [FE]                                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
195	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
196	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  }	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
197	[BUG]  [BUGGY]  Integer[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
198	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy  +  1;	  int    currentState    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
199	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  -  1;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  -  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy  -  1;	  int    currentState    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
200	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  |  EOF;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  |  EOF;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy  |  EOF;	  int    currentState    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
201	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  |  1;  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  |  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy  |  1;	  int    currentState    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
202	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0;  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_y0;	  int    currentState    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
203	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(su_z);	  final    byte    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
204	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode();	  final    int    retChar    =    getAndMoveToFrontDecode();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
205	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode();	  final    int    retChar    =    getAndMoveToFrontDecode();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
206	[BUG]  [BUGGY]  final  int  retChar  =  getRecvDecodingTables_pos();  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getRecvDecodingTables_pos();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getRecvDecodingTables_pos();	  final    int    retChar    =    getAndMoveToFrontDecode();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
207	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_z,  currentChar);  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_z,  currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_z,  currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_z);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
208	[BUG]  [BUGGY]  final  String  retChar  =(this.currentChar  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =(this.currentChar  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =(this.currentChar  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    char    retChar    =(this.currentChar    >>    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
209	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0(currentState);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy0(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(currentState);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
210	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0(currentState);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy0(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(currentState);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
211	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy0(currentState);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy0(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy0(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(currentState);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
212	[BUG]  [BUGGY]  final  char  retChar  =  this.read1;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.read1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.read1;	  final    int    retChar    =    this.read1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
213	[BUG]  [BUGGY]  final  int  retChar  =  this.byteArray2d;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.byteArray2d;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.byteArray2d;	  final    int    retChar    =    this.read1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
214	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
215	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
216	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
217	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
218	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy();	  final    int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
219	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_y0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_y0();	  final    int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
220	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode();	  final    int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
221	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_0();  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_0();	  final    int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
222	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy()  -  1;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy()  -  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy()  -  1;	  final    int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
223	[BUG]  [BUGGY]  final  byte  currentState  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  currentState  =  getAndMoveToFrontDecode_yy();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  currentState  =  getAndMoveToFrontDecode_yy();	  final    int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
224	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    -    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
225	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  -  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  -  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  -  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    -    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
226	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  /  this.currentChar;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  /  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  /  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    -    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
227	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentState;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentState;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    -    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
228	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    -    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
229	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar;  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    -    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
230	[BUG]  [BUGGY]  final  String  retChar  =  this.read0;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  this.read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  this.read0;	  final    char    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
231	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.read0);  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.read0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(this.read0);	  final    char    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
232	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_char(currentState);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_char(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_char(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
233	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_char(currentState);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_char(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_char(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
234	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_char(currentState);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_char(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_char(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
235	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(0);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_char(0);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
236	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(currentState,  1);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(currentState,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_char(currentState,  1);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
237	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(this.currentState);  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(this.currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_char(this.currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
238	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  *  2;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  *  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  *  2;	  final    int    retChar    =    this.currentChar    +    2;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
239	[BUG]  [BUGGY]  final  int  retChar  =  this.currentState  +  2;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentState  +  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentState  +  2;	  final    int    retChar    =    this.currentChar    +    2;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
240	[BUG]  [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	char  retChar  =  getAndMoveToFrontDecode_yy  +  1;	  char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
241	[BUG]  [BUGGY]  String  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  String  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	String  retChar  =  getAndMoveToFrontDecode_yy;	  char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
242	[BUG]  [BUGGY]  Char  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Char  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Char  retChar  =  getAndMoveToFrontDecode_yy;	  char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
243	[BUG]  [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	char  retChar  =  getAndMoveToFrontDecode_yy();	  char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
244	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_ch2);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
245	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_ch2);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
246	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch2)+  1;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch2)+  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch2)+  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_ch2);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
247	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch1);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_ch2);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
248	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo);  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(su_rNToGo);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
249	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_rTPos);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_rTPos);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_rTPos);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(su_rNToGo);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
250	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(su_rNToGo);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
251	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo,  currentChar);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo,  currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo,  currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(su_rNToGo);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
252	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy.length;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy.length;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy.length;	  final    int    retChar    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
253	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length  -  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length  -  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy.length  -  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
254	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length  +  1;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy.length  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
255	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length  *  2;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length  *  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy.length  *  2;	  final    int    retChar    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
256	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode();	  int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
257	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_y0();	  int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
258	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(su_z);	  int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
259	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
260	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy()  -  1;  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy()  -  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy()  -  1;	  int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
261	[BUG]  [BUGGY]  final  String  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  currentState  =  getAndMoveToFrontDecode_yy(currentState);	  final    char    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
262	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(su_z);	  final    char    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
263	[BUG]  [BUGGY]  final  byte  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  currentState  =  getAndMoveToFrontDecode_yy(currentState);	  final    char    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
264	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(current);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(current);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(current);	  final    char    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
265	[BUG]  [BUGGY]  final  char  retChar  =  this.currentChar  +  1L;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.currentChar  +  1L;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentChar  +  1L;	  final    int    retChar    =    this.currentChar    +    1L;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
266	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  *  1L;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  *  1L;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  *  1L;	  final    int    retChar    =    this.currentChar    +    1L;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
267	[BUG]  [BUGGY]  final  byte  retChar  =  this.currentChar  +  1L;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.currentChar  +  1L;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.currentChar  +  1L;	  final    int    retChar    =    this.currentChar    +    1L;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
268	[BUG]  [BUGGY]  final  int  retChar  =  this.currentState  +  1L;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentState  +  1L;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentState  +  1L;	  final    int    retChar    =    this.currentChar    +    1L;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
269	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_rNToGo);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
270	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_rTPos);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_rTPos);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_rTPos);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_rNToGo);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
271	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_rNToGo);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
272	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo,  currentChar);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo,  currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo,  currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_rNToGo);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
273	[BUG]  [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy0();  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  retChar  =  getAndMoveToFrontDecode_yy0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  getAndMoveToFrontDecode_yy0();	  final    char    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
274	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy1();  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy1();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy1();	  final    char    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
275	[BUG]  [BUGGY]  final  char  retChar  =(this.currentState  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentState  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentState  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >=    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
276	[BUG]  [BUGGY]  final  char  retChar  =(this.currentState  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentState  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentState  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >=    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
277	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
278	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  1L;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  1L;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  +  1L;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
279	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  +  4;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
280	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  3;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  3;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  +  3;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
281	[BUG]  [BUGGY]  final  byte  retChar  =  this.currentState  +  1;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.currentState  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.currentState  +  1;	  final    byte    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
282	[BUG]  [BUGGY]  final  byte  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  this.seqToUnseq  :  this.currentState;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  this.seqToUnseq  :  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  this.seqToUnseq  :  this.currentState;	  final    byte    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
283	[BUG]  [BUGGY]  final  byte  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  1  :  0;	  final    byte    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
284	[BUG]  [BUGGY]  final  char  retChar  =  this.seqToUnseq;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.seqToUnseq;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.seqToUnseq;	  final    int    retChar    =    this.seqToUnseq;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
285	[BUG]  [BUGGY]  final  int  retChar  =  this.seqToUnseq  +  1;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.seqToUnseq  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.seqToUnseq  +  1;	  final    int    retChar    =    this.seqToUnseq;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
286	[BUG]  [BUGGY]  final  byte  retChar  =  this.seqToUnseq;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.seqToUnseq;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.seqToUnseq;	  final    int    retChar    =    this.seqToUnseq;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
287	[BUG]  [BUGGY]  final  int  retChar  =  this.seqToUnseq.length;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.seqToUnseq.length;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.seqToUnseq.length;	  final    int    retChar    =    this.seqToUnseq;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
288	[BUG]  [BUGGY]  final  int  retChar  =  this.seqToUnseq[currentChar];  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.seqToUnseq[currentChar];  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.seqToUnseq[currentChar];	  final    int    retChar    =    this.seqToUnseq;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
289	[BUG]  [BUGGY]  final  int  retChar  =  this.seqToUnseq  *  2;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.seqToUnseq  *  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.seqToUnseq  *  2;	  final    int    retChar    =    this.seqToUnseq;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
290	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_0();  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_0();	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
291	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_y0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_y0();	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
292	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode();	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
293	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_yy(su_z);	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
294	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy(recvDecodingTables_pos);  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy(recvDecodingTables_pos);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_yy(recvDecodingTables_pos);	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
295	[BUG]  [BUGGY]  final  char  retChar  =  this.in.read0;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.in.read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.in.read0;	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
296	[BUG]  [BUGGY]  final  int  retChar  =  this.in.read0();  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.in.read0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in.read0();	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
297	[BUG]  [BUGGY]  final  byte  retChar  =  this.in.read0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.in.read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.in.read0;	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
298	[BUG]  [BUGGY]  final  int  retChar  =  this.in.read0  +  1;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.in.read0  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in.read0  +  1;	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
299	[BUG]  [BUGGY]  final  int  retChar  =  this.in.read1;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.in.read1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in.read1;	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
300	[BUG]  [BUGGY]  final  int  retChar  =  this.in.read0  ||  this.in.read0;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.in.read0  ||  this.in.read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in.read0  ||  this.in.read0;	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
301	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  RAND_PART_A_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  RAND_PART_A_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  RAND_PART_A_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState!=    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
302	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState!=    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
303	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState!=    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
304	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_0();  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_0();	  final    int    retChar    =    getAndMoveToFrontDecode_0();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
305	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_0();  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_0();	  final    int    retChar    =    getAndMoveToFrontDecode_0();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
306	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_1();  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_1();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_1();	  final    int    retChar    =    getAndMoveToFrontDecode_0();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
307	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_0()  +  1;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_0()  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_0()  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_0();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
308	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_0(currentState);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_0(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_0(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_0();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
309	[BUG]  [BUGGY]  final  int  retChar  =  this.currentState  *  1;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentState  *  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentState  *  1;	  final    int    retChar    =    this.currentChar    *    1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
310	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  *  4;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  *  4;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  *  4;	  final    int    retChar    =    this.currentChar    *    1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
311	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  /  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  /  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  /  1;	  final    int    retChar    =    this.currentChar    *    1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
312	[BUG]  [BUGGY]  final  char  retChar  =  this.currentChar  +  4;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.currentChar  +  4;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentChar  +  4;	  final    int    retChar    =    this.currentChar    +    4;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
313	[BUG]  [BUGGY]  final  int  retChar  =  this.currentState  +  4;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentState  +  4;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentState  +  4;	  final    int    retChar    =    this.currentChar    +    4;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
314	[BUG]  [BUGGY]  final  char  retChar  =  read0;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  read0;	  final    int    retChar    =    read0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
315	[BUG]  [BUGGY]  final  int  retChar  =  read0.length;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  read0.length;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  read0.length;	  final    int    retChar    =    read0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
316	[BUG]  [BUGGY]  final  byte  retChar  =  read0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  read0;	  final    int    retChar    =    read0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
317	[BUG]  [BUGGY]  final  int  retChar  =  read0();  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  read0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  read0();	  final    int    retChar    =    read0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
318	[BUG]  [BUGGY]  final  int  retChar  =  data.length;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  data.length;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  data.length;	  final    int    retChar    =    read0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
319	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy;	  final    char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
320	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy();	  final    char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
321	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy0;	  final    char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
322	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  ==  EOF)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentChar  ==  EOF)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  ==  EOF)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    ==    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
323	[BUG]  [BUGGY]  final  String  currentState  =  this.currentState;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  String  currentState  =  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  currentState  =  this.currentState;	  final    char    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
324	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy;	  final    char    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
325	[BUG]  [BUGGY]  final  char  currentState  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  this.currentState  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  this.currentState  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  this.currentState  :  0;	  final    char    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
326	[BUG]  [BUGGY]  final  char  currentState  =  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  RAND_PART_A_STATE;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  RAND_PART_A_STATE;	  final    char    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
327	[BUG]  [BUGGY]  final  char  currentState  =  this.currentChar;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  this.currentChar;	  final    char    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
328	[BUG]  [BUGGY]  final  char  retChar  =  this.in;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.in;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.in;	  final    int    retChar    =    this.in;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
329	[BUG]  [BUGGY]  final  byte  retChar  =  this.in;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.in;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.in;	  final    int    retChar    =    this.in;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
330	[BUG]  [BUGGY]  final  int  retChar  =  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  RAND_PART_A_STATE;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  RAND_PART_A_STATE;	  final    int    retChar    =    this.in;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
331	[BUG]  [BUGGY]  final  int  retChar  =(int)this.in;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(int)this.in;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(int)this.in;	  final    int    retChar    =    this.in;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
332	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  1;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentChar  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  1;	  final    int    retChar    =(this.currentChar    ==    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
333	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(this.currentState);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(this.currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(this.currentState);	  final    byte    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
334	[BUG]  [BUGGY]  final  int  currentState  =  this.currentChar;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  this.currentChar;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
335	[BUG]  [BUGGY]  final  int  currentState  =  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  RAND_PART_A_STATE;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  RAND_PART_A_STATE;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
336	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
337	[BUG]  [BUGGY]  final  int  currentState  =  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  0;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
338	[BUG]  [BUGGY]  final  int  currentState  =  RAND_PART_C_STATE;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  RAND_PART_C_STATE;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  RAND_PART_C_STATE;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
339	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentChar  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentChar  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
340	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
341	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
342	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar  *  1  +  1;  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar  *  1  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar  *  1  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
343	[BUG]  [BUGGY]  final  char  retChar  =  this.read0L;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.read0L;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.read0L;	  final    char    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
344	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
345	[BUG]  [BUGGY]  final  int  retChar  =  this.getAndMoveToFrontDecode_yy  +  this.currentChar;  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.getAndMoveToFrontDecode_yy  +  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.getAndMoveToFrontDecode_yy  +  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
346	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  read0);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  read0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  read0);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
347	[BUG]  [BUGGY]  final  Char  retChar  =  this.currentState;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  Char  retChar  =  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  Char  retChar  =  this.currentState;	  final    Char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
348	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(0);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(0);	  final    int    retChar    =    getAndMoveToFrontDecode_yy()    +    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
349	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(1);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy()    +    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
350	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
351	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_int();  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_int();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_int();	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
352	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_peek();  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_peek();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_peek();	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
353	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode0();  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode0();	  int    currentState    =    read0();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
354	[BUG]  [BUGGY]  int  currentState  =  read0().intValue();  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  read0().intValue();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  read0().intValue();	  int    currentState    =    read0();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
355	[BUG]  [BUGGY]  int  currentState  =  this.read0();  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  this.read0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  this.read0();	  int    currentState    =    read0();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
356	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  +  2;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  +  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy  +  2;	  int    currentState    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
357	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  +  read0;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  +  read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy  +  read0;	  int    currentState    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
358	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_0;	  int    currentState    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
359	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  0);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  0);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
360	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
361	[BUG]  [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	char  retChar  =  getAndMoveToFrontDecode_yy0;	  char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
362	[BUG]  [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	char  retChar  =  getAndMoveToFrontDecode_yy  +  2;	  char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
363	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar  +  1);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar  +  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar  +  1);	  final    char    retChar    =    getAndMoveToFrontDecode_yy(this.currentChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
364	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
365	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
366	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  >>  START_BLOCK_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  >>  START_BLOCK_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  >>  START_BLOCK_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >>    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
367	[BUG]  [BUGGY]  if(currentState  ==  RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
368	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.seqToUnseq;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.seqToUnseq;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.seqToUnseq;	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
369	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.string;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.string;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.string;	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
370	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
371	[BUG]  [BUGGY]  if(currentState  ==  RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  System.arra	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
372	[BUG]  [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
373	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  System.arra  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  System.arra  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  System.arra	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    System.arraycopy(temp_charArray2,    0,    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
374	[BUG]  [BUGGY]  final  int  retChar  =  this.read0  +  4;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.read0  +  4;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.read0  +  4;	  final    int    retChar    =    this.read0    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
375	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy0(currentChar);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy0(currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy0(currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(currentState);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
376	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy0(currentState);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy0(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy0(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(currentState);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
377	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
378	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_size();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_size();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_size();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
379	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
380	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_y0();  if(currentState  ==  START_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
381	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char.length;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char.length;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_char.length;	  final    int    retChar    =    getAndMoveToFrontDecode_char;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
382	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_xy;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_xy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_xy;	  final    int    retChar    =    getAndMoveToFrontDecode_char;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
383	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_PART_A_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_PART_A_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_PART_A_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
384	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
385	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_size();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_size();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_size();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
386	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_PART_A_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_PART_A_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_PART_A_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
387	[BUG]  [BUGGY]  if(inUse)  {  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(inUse)  {  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
388	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
389	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read2();  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read2();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read2();	  int    currentState    =    getAndMoveToFrontDecode_yy.read1();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
390	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  final    char    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
391	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(0);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(0);	  final    char    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
392	[BUG]  [BUGGY]  final  byte  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read0;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read0;	  final    byte    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
393	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  *  this.currentState;  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  *  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  *  this.currentState;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
394	[BUG]  [BUGGY]  if(currentState  ==  RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
395	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_C_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_C_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
396	[BUG]  [BUGGY]  final  int  retChar  =(this.seqToUnseq  <  <  1)?  this.seqToUnseq  :  this.seqToUnseq;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.seqToUnseq  <  <  1)?  this.seqToUnseq  :  this.seqToUnseq;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.seqToUnseq  <  <  1)?  this.seqToUnseq  :  this.seqToUnseq;	  final    int    retChar    =    this.seqToUnseq;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
397	[BUG]  [BUGGY]  final  int  retChar  =(this.seqToUnseq  <  <  1)?  this.seqToUnseq  :  1;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.seqToUnseq  <  <  1)?  this.seqToUnseq  :  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.seqToUnseq  <  <  1)?  this.seqToUnseq  :  1;	  final    int    retChar    =    this.seqToUnseq;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
398	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(currentChar);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_char(currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
399	[BUG]  [BUGGY]  final  char  currentChar  =  getAndMoveToFrontDecode_yy(currentChar);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentChar  =  getAndMoveToFrontDecode_yy(currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentChar  =  getAndMoveToFrontDecode_yy(currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
400	[BUG]  [BUGGY]  if(inUse)  {  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(inUse)  {  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState!=    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
401	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_PART_A_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_PART_A_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_PART_A_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState!=    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
402	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_0();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState!=    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
403	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState!=  NO_RAND_PART_A_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState!=  NO_RAND_PART_A_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState!=  NO_RAND_PART_A_STATE)?  1  :  0;	  final    int    retChar    =(this.currentState    ==    START_BLOCK_STATE)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
404	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(currentState  +  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_char(currentState  +  1);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
405	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_char(currentState);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_char(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_char(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
406	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_0();	  int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
407	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(0);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(0);	  int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
408	[BUG]  [BUGGY]  final  int  retChar  =  this.getAndMoveToFrontDecode_yy.length;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.getAndMoveToFrontDecode_yy.length;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.getAndMoveToFrontDecode_yy.length;	  final    int    retChar    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
409	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);	  final    int    currentChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
410	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState  -  1);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState  -  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState  -  1);	  final    int    currentChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
411	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentChar);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentChar);	  final    int    currentChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
412	[BUG]  [BUGGY]  final  char  currentState  =  this.currentState  +  1;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  this.currentState  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  this.currentState  +  1;	  final    char    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
413	[BUG]  [BUGGY]  final  char  currentState  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =(this.currentState  ==  NO_RAND_PART_A_STATE)?  1  :  0;	  final    char    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
414	[BUG]  [BUGGY]  final  char  currentState  =(this.currentState!=  START_BLOCK_STATE)?  this.currentState  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =(this.currentState!=  START_BLOCK_STATE)?  this.currentState  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =(this.currentState!=  START_BLOCK_STATE)?  this.currentState  :  0;	  final    char    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
415	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0().length;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0().length;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0().length;	  final    int    retChar    =    getAndMoveToFrontDecode_yy0()    +    1;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
416	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_y0(currentState);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_y0(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_y0(currentState);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
417	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(0);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(0);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
418	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  currentState);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar,  currentState);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
419	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_xy(currentState);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_xy(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_xy(currentState);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
420	[BUG]  [BUGGY]  final  int  currentState  =  read0;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  read0;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
421	[BUG]  [BUGGY]  final  int  currentState  =  this.read0;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  this.read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  this.read0;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
422	[BUG]  [BUGGY]  final  int  currentState  =  this.inUse;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  this.inUse;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  this.inUse;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
423	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode0();  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode0();	  final    int    retChar    =    getAndMoveToFrontDecode();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
424	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(currentChar);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read(currentChar);	  int    currentState    =    getAndMoveToFrontDecode_yy.read();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
425	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(this);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read(this);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read(this);	  int    currentState    =    getAndMoveToFrontDecode_yy.read();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
426	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0  +  read0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0  +  read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0  +  read0;	  final    int    retChar    =    getAndMoveToFrontDecode_y0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
427	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y1;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y1;	  final    int    retChar    =    getAndMoveToFrontDecode_y0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
428	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0  +  2;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0  +  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0  +  2;	  final    int    retChar    =    getAndMoveToFrontDecode_y0;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
429	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch2,  currentChar);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch2,  currentChar);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch2,  currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_ch2);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
430	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  +  4;	  final    char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
431	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_xy;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_xy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_xy;	  final    char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
432	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  *  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  *  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  *  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
433	[BUG]  [BUGGY]  final  int  retChar  =(this.in!=  null)?  this.in.read0  :  this.in.read0;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.in!=  null)?  this.in.read0  :  this.in.read0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.in!=  null)?  this.in.read0  :  this.in.read0;	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
434	[BUG]  [BUGGY]  final  int  retChar  =  this.in.read0+(this.in!=  null?  0  :  this.in.read0);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.in.read0+(this.in!=  null?  0  :  this.in.read0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in.read0+(this.in!=  null?  0  :  this.in.read0);	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
435	[BUG]  [BUGGY]  final  byte  retChar  =  this.currentChar;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.currentChar;	  final    byte    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
436	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState)+  1;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState)+  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState)+  1;	  final    char    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
437	[BUG]  [BUGGY]  final  int  retChar  =  this.in  +  1;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.in  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in  +  1;	  final    int    retChar    =    this.in;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
438	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(0);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(0);	  final    byte    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
439	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0()  +  1;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0()  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy0()  +  1;	  final    char    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
440	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy  +  4;	  final    byte    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
441	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar.length);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar.length);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(currentChar.length);	  int    currentState    =    getAndMoveToFrontDecode_yy(currentChar);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
442	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readInt(2);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readInt(2);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.readInt(2);	  int    currentState    =    getAndMoveToFrontDecode_yy.readInt();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
443	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readInt(1);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readInt(1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.readInt(1);	  int    currentState    =    getAndMoveToFrontDecode_yy.readInt();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
444	[BUG]  [BUGGY]  final  int  retChar  =  read0.charAt(0);  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  read0.charAt(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  read0.charAt(0);	  final    int    retChar    =    read0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
445	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(0);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(0);	  final    char    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
446	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy()  +  1;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy()  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy()  +  1;	  final    char    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
447	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar  +  1);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar  +  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar  +  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
448	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  *  1);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  *  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  *  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
449	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy  +  2;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy  +  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy  +  2;	  final    int    retChar    =    this.currentChar    +    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
450	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  ==  RAND_PART_B_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentChar  ==  RAND_PART_B_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  ==  RAND_PART_B_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar!=    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
451	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0(su_rNToGo);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0(su_rNToGo);	  final    int    retChar    =    getAndMoveToFrontDecode_y0();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
452	[BUG]  [BUGGY]  final  char  retChar  =(this.currentState  >=  START_BLOCK_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentState  >=  START_BLOCK_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentState  >=  START_BLOCK_STATE)?  1  :  0;	  final    char    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
453	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_j2);  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_j2);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_j2);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(su_rNToGo);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
454	[BUG]  [BUGGY]  final  int  currentState  =  this.currentState  +  1;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  this.currentState  +  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  this.currentState  +  1;	  final    int    retChar    =    this.currentState    +    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
455	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_xy;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_xy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_xy;	  final    int    retChar    =    this.currentChar    +    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
456	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_ptr;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_ptr;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_ptr;	  final    int    retChar    =    this.currentChar    +    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
457	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  ++i)  {  }	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
458	[BUG]  [BUGGY]  final  int  currentState  =  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  START_BLOCK_STATE;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  START_BLOCK_STATE;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
459	[BUG]  [BUGGY]  final  int  currentState  =  RAND_PART_B_STATE;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  RAND_PART_B_STATE;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  RAND_PART_B_STATE;	  final    int    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
460	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_ch2);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_ch2);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_ch2);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(su_z);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
461	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState  +  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState    +    1);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
462	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy  |  this.currentState;  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy  |  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy  |  this.currentState;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
463	[BUG]  [BUGGY]  static  final  String  retChar  =  this.currentChar;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  static  final  String  retChar  =  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	static  final  String  retChar  =  this.currentChar;	  final    String    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
464	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
465	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
466	[BUG]  [BUGGY]  char  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	char  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
467	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
468	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
469	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_B_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_B_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
470	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy0(currentState);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy0(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy0(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0(currentState);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
471	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read1(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read1(START_BLOCK_STATE);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read1(START_BLOCK_STATE);	  int    currentState    =    getAndMoveToFrontDecode_yy.read1();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
472	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
473	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(1);  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(1);  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(1);  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
474	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(0);  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(0);  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(0);  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
475	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  >=  RAND_PART_B_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  >=  RAND_PART_B_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  >=  RAND_PART_B_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentState    >=    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
476	[BUG]  [BUGGY]  final  int  retChar  =  this.inUse;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.inUse;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.inUse;	  final    int    retChar    =    read0;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
477	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy.charAt(0);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy.charAt(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy.charAt(0);	  final    byte    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
478	[BUG]  [BUGGY]  static  final  byte  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  static  final  byte  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	static  final  byte  retChar  =  getAndMoveToFrontDecode_yy;	  final    byte    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
479	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
480	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(0);  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(0);  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(0);  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
481	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(1);  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(1);  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(1);  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState    ==    START_BLOCK_STATE)    {    return    1;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
482	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  -  2;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  -  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  -  2;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    2;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
483	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy(0);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_yy(0);	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
484	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy0();  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_yy0();	  Integer    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
485	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0(su_z);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0(su_z);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0(su_z);	  final    int    retChar    =    getAndMoveToFrontDecode_y0();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
486	[BUG]  [BUGGY]  final  int  retChar  =  this.read0  *  1;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.read0  *  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.read0  *  1;	  final    int    retChar    =    this.read0    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
487	[BUG]  [BUGGY]  final  int  retChar  =  this.read0  +  3;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.read0  +  3;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.read0  +  3;	  final    int    retChar    =    this.read0    +    1;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
488	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy0();  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy0();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy0();	  int    currentState    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
489	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.blockSize100k;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.blockSize100k;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.blockSize100k;	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
490	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.byteArray;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.byteArray;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.byteArray;	  final    int    retChar    =(this.read0    <    <    1)?    this.read0    :    this.read0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
491	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_char(currentState);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_char(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_char(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
492	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_char(0);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_char(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_char(0);	  final    int    retChar    =    getAndMoveToFrontDecode_char(currentState);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
493	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(su_ch2);  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(su_ch2);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(su_ch2);	  final    char    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
494	[BUG]  [BUGGY]  final  byte  retChar  =  this.readOnly;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  byte  retChar  =  this.readOnly;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.readOnly;	  final    byte    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
495	[BUG]  [BUGGY]  static  final  Char  retChar  =  this.currentChar;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  static  final  Char  retChar  =  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	static  final  Char  retChar  =  this.currentChar;	  final    Char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
496	[BUG]  [BUGGY]  final  Char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  Char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  Char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;	  final    Char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
497	[BUG]  [BUGGY]  final  int  retChar  =  this.in.read();  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.in.read();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in.read();	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
498	[BUG]  [BUGGY]  final  int  retChar  =  this.in.read(0);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.in.read(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in.read(0);	  final    int    retChar    =    this.in.read0;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
499	[BUG]  [BUGGY]  int  currentState  =  this.getAndMoveToFrontDecode_yy.read();  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  this.getAndMoveToFrontDecode_yy.read();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  this.getAndMoveToFrontDecode_yy.read();	  int    currentState    =    getAndMoveToFrontDecode_yy.read();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
500	[BUG]  [BUGGY]  final  char  currentState  =(this.currentState  >=  START_BLOCK_STATE)?  this.currentState  :  0;  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =(this.currentState  >=  START_BLOCK_STATE)?  this.currentState  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =(this.currentState  >=  START_BLOCK_STATE)?  this.currentState  :  0;	  final    char    currentState    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
501	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  /  2;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.currentChar  /  2;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  /  2;	  final    int    retChar    =    this.currentChar    +    2;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
502	[BUG]  [BUGGY]  final  char  retChar  =  this.readUnseq;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  this.readUnseq;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.readUnseq;	  final    char    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
503	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar)+  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar)+  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar)+  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
504	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  /  1;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  /  1;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  /  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
505	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar!=  RAND_PART_B_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentChar!=  RAND_PART_B_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar!=  RAND_PART_B_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar!=    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
506	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length();  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length();  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy.length();	  final    int    retChar    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
507	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  NO_RAND_PART_A_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i	  if(currentState    ==    START_BLOCK_STATE)    {    int[][]    temp_charArray2d    =    getAndMoveToFrontDecode_yy;    for(int    i    =    0,    len    =    temp_charArray2d.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
508	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar  >=  START_BLOCK_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentChar  >=  START_BLOCK_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar  >=  START_BLOCK_STATE)?  this.currentChar  :  0;	  final    char    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
509	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar!=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =(this.currentChar!=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar!=  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    char    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
510	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(su_rNToGo);  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState!=    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
511	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(su_z);  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState!=    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
512	[BUG]  [BUGGY]  char  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	char  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }	  int    currentState    =    getAndMoveToFrontDecode_yy();    if(currentState!=    START_BLOCK_STATE)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
513	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState,  1);  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState,  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
514	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState,  1);  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState,  1);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState,  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState,    1);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
515	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy.charAt(0);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy.charAt(0);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy.charAt(0);	  final    char    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
516	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  |  START_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy  |  START_PART_A_STATE;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy  |  START_PART_A_STATE;	  int    currentState    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
517	[BUG]  [BUGGY]  final  int  retChar  =(int)Math.floor(this.in);  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(int)Math.floor(this.in);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(int)Math.floor(this.in);	  final    int    retChar    =    this.in;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
518	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  >=  RAND_PART_B_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentChar  >=  RAND_PART_B_STATE)?  this.currentChar  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  >=  RAND_PART_B_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    NO_RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
519	[BUG]  [BUGGY]  static  final  byte  retChar  =  this.currentState;  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  static  final  byte  retChar  =  this.currentState;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	static  final  byte  retChar  =  this.currentState;	  final    byte    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
520	[BUG]  [BUGGY]  static  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  static  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	static  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState);	  final    int    currentState    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
521	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  this.seqToUnseq);  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  this.seqToUnseq);  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar,  this.seqToUnseq);	  final    char    retChar    =    getAndMoveToFrontDecode_yy(this.currentChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
522	[BUG]  [BUGGY]  final  int  retChar  =  this.seqToUnseq  -  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =  this.seqToUnseq  -  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.seqToUnseq  -  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    -    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
523	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_char;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
524	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_char;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_char;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  retChar  =  getAndMoveToFrontDecode_char;	  final    int    retChar    =    getAndMoveToFrontDecode_char;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
525	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_PART_B_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  final  int  retChar  =(this.currentState  ==  RAND_PART_B_STATE)?  1  :  0;  [BUGGY]      switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  ==  RAND_PART_B_STATE)?  1  :  0;	  final    int    retChar    =(this.currentState    ==    START_BLOCK_STATE)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
