bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  retChar  =  this.currentState;  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  int  retChar  =  this.currentState;  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentState;	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
2	[BUG]  [BUGGY]  final  char  retChar  =  this.currentChar;  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  char  retChar  =  this.currentChar;  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentChar;	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
3	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]        IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy;	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
4	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]          IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy();  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy();	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
5	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]            IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState);	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
6	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;  [CE]  illegal  start  of  type  [FE]              IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]    [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	  	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
8	[BUG]  [BUGGY]  final  int  retChar  =  this.read0;  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  int  retChar  =  this.read0;  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.read0;	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
9	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0();  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0();  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0();	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
10	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  int  retChar  =  this.currentChar  +  1;  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  1;	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
11	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  [BUGGY]  final  int  retChar  =(this.currentChar  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;	final  int  retChar  =  this.currentChar;  	non-compiled	[CE]  illegal  start  of  type	55	None	replace
