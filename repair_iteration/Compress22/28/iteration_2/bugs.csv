bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  retChar  =  this.currentChar;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  String  retChar  =  this.currentChar;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  String  retChar  =  this.currentChar;	  final    char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy;	  final    char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy();	  final    char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  final  char  retChar  =  this.currentState;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =  this.currentState;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentState;	  final    char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(currentState);	  final    char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy(this.currentChar);	  final    char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0;	  final    int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_char;	  final    int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentChar;  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentChar;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  &  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  |  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.currentChar  |  getAndMoveToFrontDecode_yy;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  |  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar  +  1;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentChar  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState;  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  |  this.currentState;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;  [CE]  illegal  start  of  type  [FE]                            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  +  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  final  byte  retChar  =  this.currentState;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  byte  retChar  =  this.currentState;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.currentState;	  final    int    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  final  int  retChar  =  this.currentState  +  1;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.currentState  +  1;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentState  +  1;	  final    int    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  1  :  0;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  1  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  ==  START_BLOCK_STATE)?  1  :  0;	  final    int    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy();	  final    int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_y0();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_y0();	  final    int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode();	  final    int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentChar  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  ==  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =(this.currentChar  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentChar  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar!=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentChar!=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar!=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  ==  START_BLOCK_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentChar  ==  START_BLOCK_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  ==  START_BLOCK_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  final  char  retChar  =(this.currentChar  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =(this.currentChar  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =(this.currentChar  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentChar  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  ==  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  final  char  retChar  =  this.currentChar  +  1;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =  this.currentChar  +  1;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.currentChar  +  1;	  final    int    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  *  1;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.currentChar  *  1;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  *  1;	  final    int    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  2;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.currentChar  +  2;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  2;	  final    int    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  1L;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.currentChar  +  1L;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  1L;	  final    int    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  3;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.currentChar  +  3;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  3;	  final    int    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  getAndMoveToFrontDecode_yy(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  RAND_PART_A_STATE);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  1);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  1);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState,  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Integer  currentState  =  getAndMoveToFrontDecode_yy();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	Integer  currentState  =  getAndMoveToFrontDecode_yy();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  0,  [CE]  illegal  start  of  type  [FE]                            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  0,  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  System.arraycopy(temp_charArray2,  0,	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  int[][]  temp_charArray2d  =  getAndMoveToFrontDecode_yy;  for(int  i  =  0,  len  =  temp_charArray2d.length;  i  <  len;  ++i)  {  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  final  char  retChar  =  this.read0;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =  this.read0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  this.read0;	  final    int    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  final  byte  retChar  =  this.read0;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  byte  retChar  =  this.read0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  this.read0;	  final    int    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  final  int  retChar  =  this.read0  +  1;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.read0  +  1;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.read0  +  1;	  final    int    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read0;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.read0  <  <  1)?  this.read0  :  this.read0;	  final    int    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0();  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  retChar  =  getAndMoveToFrontDecode_yy0();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  retChar  =  getAndMoveToFrontDecode_yy0();	  final    int    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0();  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  byte  retChar  =  getAndMoveToFrontDecode_yy0();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  byte  retChar  =  getAndMoveToFrontDecode_yy0();	  final    int    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0()  +  1;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0()  +  1;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0()  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo);  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_rNToGo);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(currentState);  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(currentState);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
56	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read0();  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read0();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read0();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar);  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy(currentChar);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  -1;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]                            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState  ==  START_BLOCK_STATE)  {  return  1;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [CE]  illegal  start  of  type  [FE]                              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy();  if(currentState!=  START_BLOCK_STATE)  {  return  -1;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
62	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  +  2;	  final    int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  final  int  retChar  =  this.read1;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.read1;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.read1;	  final    int    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  final  int  retChar  =  read0;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  read0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  read0;	  final    int    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(currentState  +  1);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentChar);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentChar  =  getAndMoveToFrontDecode_yy(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
68	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(currentState);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_char(currentState);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_char(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
69	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentState  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  >=  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
70	[BUG]  [BUGGY]  final  int  retChar  =(this.currentChar  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentChar  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentChar  >>  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
71	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentState  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  >=  NO_RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
72	[BUG]  [BUGGY]  final  int  retChar  =(this.currentState  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =(this.currentState  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =(this.currentState  >>  RAND_PART_A_STATE)?  this.currentChar  :  0;	  final    int    retChar    =(this.currentChar    >=    RAND_PART_A_STATE)?    this.currentChar    :    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
73	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy  -  this.currentChar;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_0();  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_0();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_0();	  final    int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy();	  final    int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
76	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_z);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_z);  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_z);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy0(su_z);	  final    int    retChar    =    getAndMoveToFrontDecode_yy0();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  final  int  retChar  =  this.seqToUnseq;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.seqToUnseq;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.seqToUnseq;	  final    int    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
79	[BUG]  [BUGGY]  final  int  retChar  =  this.in.read0;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.in.read0;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in.read0;	  final    int    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  final  int  retChar  =  this.in;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.in;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.in;	  final    int    retChar    =    this.read0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
81	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read();  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readInt();  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.readInt();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.readInt();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read1();  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  getAndMoveToFrontDecode_yy.read1();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  getAndMoveToFrontDecode_yy.read1();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  int  currentState  =  read0();  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  currentState  =  read0();  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	int  currentState  =  read0();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  getAndMoveToFrontDecode_yy(currentState);	  final    int    retChar    =    getAndMoveToFrontDecode_yy(currentState);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
86	[BUG]  [BUGGY]  final  Char  retChar  =  this.currentChar;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  Char  retChar  =  this.currentChar;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  Char  retChar  =  this.currentChar;	  final    char    retChar    =    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
87	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  final    int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
88	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy()  +  1;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy()  +  1;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy()  +  1;	  final    int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
89	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);	  final    int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
90	[BUG]  [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  getAndMoveToFrontDecode_yy.length;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  getAndMoveToFrontDecode_yy.length;	  final    int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
91	[BUG]  [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	char  retChar  =  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
92	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  getAndMoveToFrontDecode_yy;	  final    int    retChar    =    getAndMoveToFrontDecode_yy    |    this.currentChar;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  final  int  currentState  =  this.currentState;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  currentState  =  this.currentState;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  currentState  =  this.currentState;	  final    int    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
94	[BUG]  [BUGGY]  final  char  currentState  =  this.currentState;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  char  currentState  =  this.currentState;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  char  currentState  =  this.currentState;	  final    int    retChar    =    this.currentState;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
95	[BUG]  [BUGGY]  final  int  retChar  =  this.currentChar  +  4;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  final  int  retChar  =  this.currentChar  +  4;  [BUGGY]    switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	final  int  retChar  =  this.currentChar  +  4;	  final    int    retChar    =    this.currentChar    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
