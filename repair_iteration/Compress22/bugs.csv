bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { [FE] IOException [CONTEXT] [BUGGY] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { [BUGGY] this.in = in; this.decompressConcatenated = decompressConcatenated; init(true); initBlock(); setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	129	129	1	replace	
2	[BUG] [BUGGY] [FE] IOException [CONTEXT] [BUGGY] [BUGGY] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; this.decompressConcatenated = decompressConcatenated; init(true); initBlock(); setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	129	129	1	add	
3	[BUG] [BUGGY] [FE] IOException [CONTEXT] private int bsBuff; [CLASS] BZip2CompressorInputStream Data  [VARIABLES] 	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	60	60	1	replace	
4	[BUG] [BUGGY] [FE] IOException [CONTEXT] private int bsBuff; [CLASS] BZip2CompressorInputStream Data  [VARIABLES] 	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	60	60	1	add	
5	[BUG] [BUGGY] [FE] IOException [CONTEXT] private final boolean decompressConcatenated; [CLASS] BZip2CompressorInputStream Data  [VARIABLES] 	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	67	67	1	replace	
6	[BUG] [BUGGY] [FE] IOException [CONTEXT] private final boolean decompressConcatenated; [CLASS] BZip2CompressorInputStream Data  [VARIABLES] 	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	67	67	1	add	
7	[BUG] [BUGGY] [FE] IOException [CONTEXT] private static final int NO_RAND_PART_C_STATE = 7; [CLASS] BZip2CompressorInputStream Data  [VARIABLES] 	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	77	77	1	replace	
8	[BUG] [BUGGY] [FE] IOException [CONTEXT] private static final int NO_RAND_PART_C_STATE = 7; [CLASS] BZip2CompressorInputStream Data  [VARIABLES] 	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	77	77	1	add	
9	[BUG] [BUGGY] this.in = in; [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { [BUGGY] this.in = in; [BUGGY] this.decompressConcatenated = decompressConcatenated; init(true); initBlock(); setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	130	130	1	replace	
10	[BUG] [BUGGY] [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { [BUGGY] [BUGGY] this.in = in; this.decompressConcatenated = decompressConcatenated; init(true); initBlock(); setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	130	130	1	add	
11	[BUG] [BUGGY] this.decompressConcatenated = decompressConcatenated; [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; [BUGGY] this.decompressConcatenated = decompressConcatenated; [BUGGY]  init(true); initBlock(); setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	131	131	1	replace	
12	[BUG] [BUGGY] [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; [BUGGY] [BUGGY] this.decompressConcatenated = decompressConcatenated; init(true); initBlock(); setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	131	131	1	add	
13	[BUG] [BUGGY] init(true); [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; this.decompressConcatenated = decompressConcatenated; [BUGGY] init(true); [BUGGY] initBlock(); setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	133	133	1	replace	
14	[BUG] [BUGGY] [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; this.decompressConcatenated = decompressConcatenated; [BUGGY] [BUGGY] init(true); initBlock(); setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	133	133	1	add	
15	[BUG] [BUGGY] initBlock(); [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; this.decompressConcatenated = decompressConcatenated; init(true); [BUGGY] initBlock(); [BUGGY] setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	134	134	1	replace	
16	[BUG] [BUGGY] [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; this.decompressConcatenated = decompressConcatenated; init(true); [BUGGY] [BUGGY] initBlock(); setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	134	134	1	add	
17	[BUG] [BUGGY] setupBlock(); [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; this.decompressConcatenated = decompressConcatenated; init(true); initBlock(); [BUGGY] setupBlock(); [BUGGY] } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	135	135	1	replace	
18	[BUG] [BUGGY] [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; this.decompressConcatenated = decompressConcatenated; init(true); initBlock(); [BUGGY] [BUGGY] setupBlock(); } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	135	135	1	add	
19	[BUG] [BUGGY] } [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; this.decompressConcatenated = decompressConcatenated; init(true); initBlock(); setupBlock(); [BUGGY] } [BUGGY]  [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	136	136	1	replace	
20	[BUG] [BUGGY] [FE] IOException [CONTEXT] public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException { this.in = in; this.decompressConcatenated = decompressConcatenated; init(true); initBlock(); setupBlock(); [BUGGY] [BUGGY] } [CLASS] BZip2CompressorInputStream Data [METHOD] <init> [RETURN_TYPE] InputStream,boolean)  InputStream in final boolean decompressConcatenated [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE blockSize100k bsBuff bsLive computedBlockCRC computedCombinedCRC currentChar currentState last nInUse origPtr storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	136	136	1	add	
21	[BUG] [BUGGY] if (offs < 0) { [FE] IOException [CONTEXT] throws IOException { [BUGGY] if (offs < 0) { [BUGGY] throw new IndexOutOfBoundsException("offs(" + offs + ") < 0."); } if (len < 0) { throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	157	157	1	replace	
22	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { [BUGGY] [BUGGY] if (offs < 0) { throw new IndexOutOfBoundsException("offs(" + offs + ") < 0."); } if (len < 0) { throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	157	157	1	add	
23	[BUG] [BUGGY] if (len < 0) { [FE] IOException [CONTEXT] throws IOException { if (offs < 0) { throw new IndexOutOfBoundsException("offs(" + offs + ") < 0."); } [BUGGY] if (len < 0) { [BUGGY] throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); }  [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	
24	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { if (offs < 0) { throw new IndexOutOfBoundsException("offs(" + offs + ") < 0."); } [BUGGY] [BUGGY] if (len < 0) { throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); }  [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	add	
25	[BUG] [BUGGY] if (offs + len > dest.length) { [FE] IOException [CONTEXT] throws IOException { if (offs < 0) { throw new IndexOutOfBoundsException("offs(" + offs + ") < 0."); } if (len < 0) { throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } [BUGGY] if (offs + len > dest.length) { [BUGGY] throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	
26	[BUG] [BUGGY] [FE] IOException [CONTEXT] throws IOException { if (offs < 0) { throw new IndexOutOfBoundsException("offs(" + offs + ") < 0."); } if (len < 0) { throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } [BUGGY] [BUGGY] if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	add	
27	[BUG] [BUGGY] if (this.in == null) { [FE] IOException [CONTEXT] if (offs < 0) { throw new IndexOutOfBoundsException("offs(" + offs + ") < 0."); } if (len < 0) { throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } [BUGGY] if (this.in == null) { [BUGGY] throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; while (destOffs < hi && ((b = read0()) >= 0)) { dest[destOffs++] = (byte) b; count(1); } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	167	167	1	replace	
28	[BUG] [BUGGY] [FE] IOException [CONTEXT] if (offs < 0) { throw new IndexOutOfBoundsException("offs(" + offs + ") < 0."); } if (len < 0) { throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } [BUGGY] [BUGGY] if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; while (destOffs < hi && ((b = read0()) >= 0)) { dest[destOffs++] = (byte) b; count(1); } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	167	167	1	add	
29	[BUG] [BUGGY] final int hi = offs + len; [FE] IOException [CONTEXT] throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } [BUGGY] final int hi = offs + len; [BUGGY] int destOffs = offs; int b; while (destOffs < hi && ((b = read0()) >= 0)) { dest[destOffs++] = (byte) b; count(1); } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	171	171	1	replace	
30	[BUG] [BUGGY] [FE] IOException [CONTEXT] throw new IndexOutOfBoundsException("len(" + len + ") < 0."); } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } [BUGGY] [BUGGY] final int hi = offs + len; int destOffs = offs; int b; while (destOffs < hi && ((b = read0()) >= 0)) { dest[destOffs++] = (byte) b; count(1); } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	171	171	1	add	
31	[BUG] [BUGGY] int destOffs = offs; [FE] IOException [CONTEXT] } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; [BUGGY] int destOffs = offs; [BUGGY] int b; while (destOffs < hi && ((b = read0()) >= 0)) { dest[destOffs++] = (byte) b; count(1); } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	172	172	1	replace	
32	[BUG] [BUGGY] [FE] IOException [CONTEXT] } if (offs + len > dest.length) { throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; [BUGGY] [BUGGY] int destOffs = offs; int b; while (destOffs < hi && ((b = read0()) >= 0)) { dest[destOffs++] = (byte) b; count(1); } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	172	172	1	add	
33	[BUG] [BUGGY] while (destOffs < hi && ((b = read0()) >= 0)) { [FE] IOException [CONTEXT] throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; [BUGGY] while (destOffs < hi && ((b = read0()) >= 0)) { [BUGGY] dest[destOffs++] = (byte) b; count(1); } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	174	174	1	replace	
34	[BUG] [BUGGY] [FE] IOException [CONTEXT] throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; [BUGGY] [BUGGY] while (destOffs < hi && ((b = read0()) >= 0)) { dest[destOffs++] = (byte) b; count(1); } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	174	174	1	add	
35	[BUG] [BUGGY] dest[destOffs++] = (byte) b; [FE] IOException [CONTEXT] + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; while (destOffs < hi && ((b = read0()) >= 0)) { [BUGGY] dest[destOffs++] = (byte) b; [BUGGY] count(1); } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	175	175	1	replace	
36	[BUG] [BUGGY] [FE] IOException [CONTEXT] + len + ") > dest.length(" + dest.length + ")."); } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; while (destOffs < hi && ((b = read0()) >= 0)) { [BUGGY] [BUGGY] dest[destOffs++] = (byte) b; count(1); } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	175	175	1	add	
37	[BUG] [BUGGY] count(1); [FE] IOException [CONTEXT] } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; while (destOffs < hi && ((b = read0()) >= 0)) { dest[destOffs++] = (byte) b; [BUGGY] count(1); [BUGGY] } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	176	176	1	replace	
38	[BUG] [BUGGY] [FE] IOException [CONTEXT] } if (this.in == null) { throw new IOException("stream closed"); } final int hi = offs + len; int destOffs = offs; int b; while (destOffs < hi && ((b = read0()) >= 0)) { dest[destOffs++] = (byte) b; [BUGGY] [BUGGY] count(1); } int c = (destOffs == offs) ? -1 : (destOffs - offs); return c; } [CLASS] BZip2CompressorInputStream Data [METHOD] read [RETURN_TYPE] int  final byte[] dest final int offs final int len [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi last len nInUse offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	176	176	1	add	
39	[BUG] [BUGGY] final boolean[] inUse = this.data.inUse; [FE] IOException [CONTEXT] private void makeMaps() { [BUGGY] final boolean[] inUse = this.data.inUse; [BUGGY] final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } }  [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	184	184	1	replace	
40	[BUG] [BUGGY] [FE] IOException [CONTEXT] private void makeMaps() { [BUGGY] [BUGGY] final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } }  [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	184	184	1	add	
41	[BUG] [BUGGY] final byte[] seqToUnseq = this.data.seqToUnseq; [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; [BUGGY] final byte[] seqToUnseq = this.data.seqToUnseq; [BUGGY]  int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	185	185	1	replace	
42	[BUG] [BUGGY] [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; [BUGGY] [BUGGY] final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	185	185	1	add	
43	[BUG] [BUGGY] int nInUseShadow = 0; [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; [BUGGY] int nInUseShadow = 0; [BUGGY]  for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	187	187	1	replace	
44	[BUG] [BUGGY] [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; [BUGGY] [BUGGY] int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	187	187	1	add	
45	[BUG] [BUGGY] for (int i = 0; i < 256; i++) { [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; [BUGGY] for (int i = 0; i < 256; i++) { [BUGGY] if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	189	189	1	replace	
46	[BUG] [BUGGY] [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; [BUGGY] [BUGGY] for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	189	189	1	add	
47	[BUG] [BUGGY] if (inUse[i]) { [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { [BUGGY] if (inUse[i]) { [BUGGY] seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	190	190	1	replace	
48	[BUG] [BUGGY] [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { [BUGGY] [BUGGY] if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	190	190	1	add	
49	[BUG] [BUGGY] seqToUnseq[nInUseShadow++] = (byte) i; [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { [BUGGY] seqToUnseq[nInUseShadow++] = (byte) i; [BUGGY] } } this.nInUse = nInUseShadow; } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	191	191	1	replace	
50	[BUG] [BUGGY] [FE] IOException [CONTEXT] private void makeMaps() { final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { [BUGGY] [BUGGY] seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	191	191	1	add	
51	[BUG] [BUGGY] this.nInUse = nInUseShadow; [FE] IOException [CONTEXT] final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } [BUGGY] this.nInUse = nInUseShadow; [BUGGY] } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	195	195	1	replace	
52	[BUG] [BUGGY] [FE] IOException [CONTEXT] final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } [BUGGY] [BUGGY] this.nInUse = nInUseShadow; } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	195	195	1	add	
53	[BUG] [BUGGY] } [FE] IOException [CONTEXT] int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; [BUGGY] } [BUGGY]  [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	196	196	1	replace	
54	[BUG] [BUGGY] [FE] IOException [CONTEXT] int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; } } this.nInUse = nInUseShadow; [BUGGY] [BUGGY] } [CLASS] BZip2CompressorInputStream Data [METHOD] makeMaps [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	196	196	1	add	
55	[BUG] [BUGGY] final int retChar = this.currentChar; [FE] IOException [CONTEXT] private int read0() throws IOException { [BUGGY] final int retChar = this.currentChar; [BUGGY] switch (currentState) { case EOF: return -1; case START_BLOCK_STATE: throw new IllegalStateException(); case RAND_PART_A_STATE: throw new IllegalStateException();  [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	replace	
56	[BUG] [BUGGY] [FE] IOException [CONTEXT] private int read0() throws IOException { [BUGGY] [BUGGY] final int retChar = this.currentChar; switch (currentState) { case EOF: return -1; case START_BLOCK_STATE: throw new IllegalStateException(); case RAND_PART_A_STATE: throw new IllegalStateException();  [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	199	199	1	add	
57	[BUG] [BUGGY] switch (currentState) { [FE] IOException [CONTEXT] private int read0() throws IOException { final int retChar = this.currentChar; [BUGGY] switch (currentState) { [BUGGY] case EOF: return -1; case START_BLOCK_STATE: throw new IllegalStateException(); case RAND_PART_A_STATE: throw new IllegalStateException(); case RAND_PART_B_STATE: [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	
58	[BUG] [BUGGY] [FE] IOException [CONTEXT] private int read0() throws IOException { final int retChar = this.currentChar; [BUGGY] [BUGGY] switch (currentState) { case EOF: return -1; case START_BLOCK_STATE: throw new IllegalStateException(); case RAND_PART_A_STATE: throw new IllegalStateException(); case RAND_PART_B_STATE: [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	add	
59	[BUG] [BUGGY] setupNoRandPartB(); [FE] IOException [CONTEXT] break; case RAND_PART_C_STATE: setupRandPartC(); break; case NO_RAND_PART_A_STATE: throw new IllegalStateException(); case NO_RAND_PART_B_STATE: [BUGGY] setupNoRandPartB(); [BUGGY] break; case NO_RAND_PART_C_STATE: setupNoRandPartC(); break; default: throw new IllegalStateException(); } return retChar; [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	222	222	1	replace	
60	[BUG] [BUGGY] [FE] IOException [CONTEXT] break; case RAND_PART_C_STATE: setupRandPartC(); break; case NO_RAND_PART_A_STATE: throw new IllegalStateException(); case NO_RAND_PART_B_STATE: [BUGGY] [BUGGY] setupNoRandPartB(); break; case NO_RAND_PART_C_STATE: setupNoRandPartC(); break; default: throw new IllegalStateException(); } return retChar; [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	222	222	1	add	
61	[BUG] [BUGGY] break; [FE] IOException [CONTEXT] case RAND_PART_C_STATE: setupRandPartC(); break; case NO_RAND_PART_A_STATE: throw new IllegalStateException(); case NO_RAND_PART_B_STATE: setupNoRandPartB(); [BUGGY] break; [BUGGY]  case NO_RAND_PART_C_STATE: setupNoRandPartC(); break; default: throw new IllegalStateException(); } return retChar; } [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	
62	[BUG] [BUGGY] [FE] IOException [CONTEXT] case RAND_PART_C_STATE: setupRandPartC(); break; case NO_RAND_PART_A_STATE: throw new IllegalStateException(); case NO_RAND_PART_B_STATE: setupNoRandPartB(); [BUGGY] [BUGGY] break; case NO_RAND_PART_C_STATE: setupNoRandPartC(); break; default: throw new IllegalStateException(); } return retChar; } [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	add	
63	[BUG] [BUGGY] return retChar; [FE] IOException [CONTEXT] setupNoRandPartB(); break; case NO_RAND_PART_C_STATE: setupNoRandPartC(); break; default: throw new IllegalStateException(); } [BUGGY] return retChar; [BUGGY] } [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	232	232	1	replace	
64	[BUG] [BUGGY] [FE] IOException [CONTEXT] setupNoRandPartB(); break; case NO_RAND_PART_C_STATE: setupNoRandPartC(); break; default: throw new IllegalStateException(); } [BUGGY] [BUGGY] return retChar; } [CLASS] BZip2CompressorInputStream Data [METHOD] read0 [RETURN_TYPE] int  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	232	232	1	add	
65	[BUG] [BUGGY] if (null == in) { [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { [BUGGY] if (null == in) { [BUGGY] throw new IOException("No InputStream"); } int magic0 = this.in.read(); if (magic0 == -1 && !isFirstStream) { return false; } int magic1 = this.in.read(); int magic2 = this.in.read();  [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	236	236	1	replace	
66	[BUG] [BUGGY] [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { [BUGGY] [BUGGY] if (null == in) { throw new IOException("No InputStream"); } int magic0 = this.in.read(); if (magic0 == -1 && !isFirstStream) { return false; } int magic1 = this.in.read(); int magic2 = this.in.read();  [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	236	236	1	add	
67	[BUG] [BUGGY] int magic0 = this.in.read(); [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { if (null == in) { throw new IOException("No InputStream"); } [BUGGY] int magic0 = this.in.read(); [BUGGY] if (magic0 == -1 && !isFirstStream) { return false; } int magic1 = this.in.read(); int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	240	240	1	replace	
68	[BUG] [BUGGY] [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { if (null == in) { throw new IOException("No InputStream"); } [BUGGY] [BUGGY] int magic0 = this.in.read(); if (magic0 == -1 && !isFirstStream) { return false; } int magic1 = this.in.read(); int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	240	240	1	add	
69	[BUG] [BUGGY] if (magic0 == -1 && !isFirstStream) { [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { if (null == in) { throw new IOException("No InputStream"); } int magic0 = this.in.read(); [BUGGY] if (magic0 == -1 && !isFirstStream) { [BUGGY] return false; } int magic1 = this.in.read(); int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	241	241	1	replace	
70	[BUG] [BUGGY] [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { if (null == in) { throw new IOException("No InputStream"); } int magic0 = this.in.read(); [BUGGY] [BUGGY] if (magic0 == -1 && !isFirstStream) { return false; } int magic1 = this.in.read(); int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	241	241	1	add	
71	[BUG] [BUGGY] int magic1 = this.in.read(); [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { if (null == in) { throw new IOException("No InputStream"); } int magic0 = this.in.read(); if (magic0 == -1 && !isFirstStream) { return false; } [BUGGY] int magic1 = this.in.read(); [BUGGY] int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	244	244	1	replace	
72	[BUG] [BUGGY] [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { if (null == in) { throw new IOException("No InputStream"); } int magic0 = this.in.read(); if (magic0 == -1 && !isFirstStream) { return false; } [BUGGY] [BUGGY] int magic1 = this.in.read(); int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	244	244	1	add	
73	[BUG] [BUGGY] int magic2 = this.in.read(); [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { if (null == in) { throw new IOException("No InputStream"); } int magic0 = this.in.read(); if (magic0 == -1 && !isFirstStream) { return false; } int magic1 = this.in.read(); [BUGGY] int magic2 = this.in.read(); [BUGGY]  if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	245	245	1	replace	
74	[BUG] [BUGGY] [FE] IOException [CONTEXT] private boolean init(boolean isFirstStream) throws IOException { if (null == in) { throw new IOException("No InputStream"); } int magic0 = this.in.read(); if (magic0 == -1 && !isFirstStream) { return false; } int magic1 = this.in.read(); [BUGGY] [BUGGY] int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	245	245	1	add	
75	[BUG] [BUGGY] if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { [FE] IOException [CONTEXT] throw new IOException("No InputStream"); } int magic0 = this.in.read(); if (magic0 == -1 && !isFirstStream) { return false; } int magic1 = this.in.read(); int magic2 = this.in.read(); [BUGGY] if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { [BUGGY] throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); }  [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	247	247	1	replace	
76	[BUG] [BUGGY] [FE] IOException [CONTEXT] throw new IOException("No InputStream"); } int magic0 = this.in.read(); if (magic0 == -1 && !isFirstStream) { return false; } int magic1 = this.in.read(); int magic2 = this.in.read(); [BUGGY] [BUGGY] if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); }  [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	247	247	1	add	
77	[BUG] [BUGGY] int blockSize = this.in.read(); [FE] IOException [CONTEXT] } int magic1 = this.in.read(); int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } [BUGGY] int blockSize = this.in.read(); [BUGGY] if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; this.bsLive = 0; this.computedCombinedCRC = 0; return true; [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	253	253	1	replace	
78	[BUG] [BUGGY] [FE] IOException [CONTEXT] } int magic1 = this.in.read(); int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } [BUGGY] [BUGGY] int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; this.bsLive = 0; this.computedCombinedCRC = 0; return true; [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	253	253	1	add	
79	[BUG] [BUGGY] if ((blockSize < '1') || (blockSize > '9')) { [FE] IOException [CONTEXT] int magic1 = this.in.read(); int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); [BUGGY] if ((blockSize < '1') || (blockSize > '9')) { [BUGGY] throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; this.bsLive = 0; this.computedCombinedCRC = 0; return true; } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	254	254	1	replace	
80	[BUG] [BUGGY] [FE] IOException [CONTEXT] int magic1 = this.in.read(); int magic2 = this.in.read(); if (magic0 != 'B' || magic1 != 'Z' || magic2 != 'h') { throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); [BUGGY] [BUGGY] if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; this.bsLive = 0; this.computedCombinedCRC = 0; return true; } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	254	254	1	add	
81	[BUG] [BUGGY] this.blockSize100k = blockSize - '0'; [FE] IOException [CONTEXT] throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } [BUGGY] this.blockSize100k = blockSize - '0'; [BUGGY]  this.bsLive = 0; this.computedCombinedCRC = 0; return true; } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	258	258	1	replace	
82	[BUG] [BUGGY] [FE] IOException [CONTEXT] throw new IOException(isFirstStream ? "Stream is not in the BZip2 format" : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } [BUGGY] [BUGGY] this.blockSize100k = blockSize - '0'; this.bsLive = 0; this.computedCombinedCRC = 0; return true; } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	258	258	1	add	
83	[BUG] [BUGGY] this.bsLive = 0; [FE] IOException [CONTEXT] : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; [BUGGY] this.bsLive = 0; [BUGGY] this.computedCombinedCRC = 0; return true; } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	260	260	1	replace	
84	[BUG] [BUGGY] [FE] IOException [CONTEXT] : "Garbage after a valid BZip2 stream"); } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; [BUGGY] [BUGGY] this.bsLive = 0; this.computedCombinedCRC = 0; return true; } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	260	260	1	add	
85	[BUG] [BUGGY] this.computedCombinedCRC = 0; [FE] IOException [CONTEXT] } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; this.bsLive = 0; [BUGGY] this.computedCombinedCRC = 0; [BUGGY]  return true; } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	261	261	1	replace	
86	[BUG] [BUGGY] [FE] IOException [CONTEXT] } int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; this.bsLive = 0; [BUGGY] [BUGGY] this.computedCombinedCRC = 0; return true; } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	261	261	1	add	
87	[BUG] [BUGGY] return true; [FE] IOException [CONTEXT] int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; this.bsLive = 0; this.computedCombinedCRC = 0; [BUGGY] return true; [BUGGY] } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	263	263	1	replace	
88	[BUG] [BUGGY] [FE] IOException [CONTEXT] int blockSize = this.in.read(); if ((blockSize < '1') || (blockSize > '9')) { throw new IOException("BZip2 block size is invalid"); } this.blockSize100k = blockSize - '0'; this.bsLive = 0; this.computedCombinedCRC = 0; [BUGGY] [BUGGY] return true; } [CLASS] BZip2CompressorInputStream Data [METHOD] init [RETURN_TYPE] boolean  boolean isFirstStream [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	263	263	1	add	
89	[BUG] [BUGGY] magic0 = bsGetUByte(); [FE] IOException [CONTEXT] private void initBlock() throws IOException { char magic0; char magic1; char magic2; char magic3; char magic4; char magic5; while (true) {  [BUGGY] magic0 = bsGetUByte(); [BUGGY] magic1 = bsGetUByte(); magic2 = bsGetUByte(); magic3 = bsGetUByte(); magic4 = bsGetUByte(); magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	276	276	1	replace	
90	[BUG] [BUGGY] [FE] IOException [CONTEXT] private void initBlock() throws IOException { char magic0; char magic1; char magic2; char magic3; char magic4; char magic5; while (true) {  [BUGGY] [BUGGY] magic0 = bsGetUByte(); magic1 = bsGetUByte(); magic2 = bsGetUByte(); magic3 = bsGetUByte(); magic4 = bsGetUByte(); magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	276	276	1	add	
91	[BUG] [BUGGY] magic1 = bsGetUByte(); [FE] IOException [CONTEXT] char magic0; char magic1; char magic2; char magic3; char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); [BUGGY] magic1 = bsGetUByte(); [BUGGY] magic2 = bsGetUByte(); magic3 = bsGetUByte(); magic4 = bsGetUByte(); magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; } [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	277	277	1	replace	
92	[BUG] [BUGGY] [FE] IOException [CONTEXT] char magic0; char magic1; char magic2; char magic3; char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); [BUGGY] [BUGGY] magic1 = bsGetUByte(); magic2 = bsGetUByte(); magic3 = bsGetUByte(); magic4 = bsGetUByte(); magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; } [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	277	277	1	add	
93	[BUG] [BUGGY] magic2 = bsGetUByte(); [FE] IOException [CONTEXT] char magic1; char magic2; char magic3; char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); magic1 = bsGetUByte(); [BUGGY] magic2 = bsGetUByte(); [BUGGY] magic3 = bsGetUByte(); magic4 = bsGetUByte(); magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; }  [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	278	278	1	replace	
94	[BUG] [BUGGY] [FE] IOException [CONTEXT] char magic1; char magic2; char magic3; char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); magic1 = bsGetUByte(); [BUGGY] [BUGGY] magic2 = bsGetUByte(); magic3 = bsGetUByte(); magic4 = bsGetUByte(); magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; }  [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	278	278	1	add	
95	[BUG] [BUGGY] magic3 = bsGetUByte(); [FE] IOException [CONTEXT] char magic2; char magic3; char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); magic1 = bsGetUByte(); magic2 = bsGetUByte(); [BUGGY] magic3 = bsGetUByte(); [BUGGY] magic4 = bsGetUByte(); magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; }   [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	279	279	1	replace	
96	[BUG] [BUGGY] [FE] IOException [CONTEXT] char magic2; char magic3; char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); magic1 = bsGetUByte(); magic2 = bsGetUByte(); [BUGGY] [BUGGY] magic3 = bsGetUByte(); magic4 = bsGetUByte(); magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; }   [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	279	279	1	add	
97	[BUG] [BUGGY] magic4 = bsGetUByte(); [FE] IOException [CONTEXT] char magic3; char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); magic1 = bsGetUByte(); magic2 = bsGetUByte(); magic3 = bsGetUByte(); [BUGGY] magic4 = bsGetUByte(); [BUGGY] magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; }    [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	280	280	1	replace	
98	[BUG] [BUGGY] [FE] IOException [CONTEXT] char magic3; char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); magic1 = bsGetUByte(); magic2 = bsGetUByte(); magic3 = bsGetUByte(); [BUGGY] [BUGGY] magic4 = bsGetUByte(); magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; }    [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	280	280	1	add	
99	[BUG] [BUGGY] magic5 = bsGetUByte(); [FE] IOException [CONTEXT] char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); magic1 = bsGetUByte(); magic2 = bsGetUByte(); magic3 = bsGetUByte(); magic4 = bsGetUByte(); [BUGGY] magic5 = bsGetUByte(); [BUGGY]   if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; }     [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	281	281	1	replace	
100	[BUG] [BUGGY] [FE] IOException [CONTEXT] char magic4; char magic5; while (true) {  magic0 = bsGetUByte(); magic1 = bsGetUByte(); magic2 = bsGetUByte(); magic3 = bsGetUByte(); magic4 = bsGetUByte(); [BUGGY] [BUGGY] magic5 = bsGetUByte();  if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45 || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) { break; }     [CLASS] BZip2CompressorInputStream Data [METHOD] initBlock [RETURN_TYPE] void  [VARIABLES] int[][] base limit perm InputStream in char[][] temp_charArray2d Data data int[] cftab minLens tt unzftab int EOF NO_RAND_PART_A_STATE NO_RAND_PART_B_STATE NO_RAND_PART_C_STATE RAND_PART_A_STATE RAND_PART_B_STATE RAND_PART_C_STATE START_BLOCK_STATE b blockSize blockSize100k bsBuff bsLive c computedBlockCRC computedCombinedCRC currentChar currentState destOffs hi i last len magic0 magic1 magic2 nInUse nInUseShadow offs origPtr r retChar storedBlockCRC storedCombinedCRC su_ch2 su_chPrev su_count su_i2 su_j2 su_rNToGo su_rTPos su_tPos char[] getAndMoveToFrontDecode_yy byte[] dest ll8 recvDecodingTables_pos selector selectorMtf seqToUnseq boolean blockRandomised decompressConcatenated isFirstStream CRC crc char magic0 magic1 magic2 magic3 magic4 magic5 su_z boolean[] inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	281	281	1	add	
