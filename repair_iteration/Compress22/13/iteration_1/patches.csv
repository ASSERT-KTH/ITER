bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (offs  +  len  <  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if  (offs  +  len  <  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  <  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (offs    +    len    >    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if  (offs  +  len  >  destOffs.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if  (offs  +  len  >  destOffs.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  >  destOffs.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (offs    +    len    >    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if  (offs  +  len  >  dest.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if  (offs  +  len  >  dest.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  >  dest.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (offs    +    len    >    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if(destOffs  +  len  >=  offs.length)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(destOffs  +  len  >=  offs.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  +  len  >=  offs.length)  {	  if(offs    +    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  if(offs  +  len  ==  dest.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  +  len  ==  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  ==  dest.length)  {	  if(offs    +    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  if(offs  +  len!=  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  +  len!=  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len!=  dest.length)  {	  if(offs    +    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  if(offs  *  len  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  *  len  >=  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  >=  dest.length)  {	  if(offs    +    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  if(dest.length  <  len)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length  <  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  <  len)  {	  if(dest.length    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  if(offs  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  <  dest.length)  {	  if(dest.length    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  if(len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  <  dest.length)  {	  if(dest.length    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  if(dest.length  ==  offs)  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length  ==  offs)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  ==  offs)  {	  if(dest.length    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  if(dest.length  >=  offs)  {  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length  >=  offs)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  >=  offs)  {	  if(dest.length    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  if(dest.length!=  offs)  {  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length!=  offs)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length!=  offs)  {	  if(dest.length    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  if  (offs  +  len  <  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if  (offs  +  len  <  destOffs.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  <  destOffs.length)  {	  if    (offs    +    len    >    destOffs.length)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  if(destOffs  +  len  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(destOffs  +  len  <  offs.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  +  len  <  offs.length)  {	  if    (offs    +    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  if  (offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if  (offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {	  if    (offs    +    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  if  (len  <  =  dest.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if  (len  <  =  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (len  <  =  dest.length)  {	  if    (len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  if  (len  ==  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if  (len  ==  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (len  ==  dest.length)  {	  if    (len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +   ").   ");  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +   ").   ");  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +   ").   ");  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +   ").   ");  }  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +   ").   ");  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")  +  len( "  +  len  +   ")  >  dest.length( "  +  dest.length  +   ").   ");  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  if(len  +  destOffs  >  offs.length)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(len  +  destOffs  >  offs.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  destOffs  >  offs.length)  {	  if(destOffs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  if(destOffs  +  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(destOffs  +  len  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  +  len  >  dest.length)  {	  if(destOffs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||(destOffs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  +  len  >  dest.length  ||(destOffs  +  len)>  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||(destOffs  +  len)>  dest.length)  {	  if(destOffs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||(offs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  +  len  >  dest.length  ||(offs  +  len)>  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||(offs  +  len)>  dest.length)  {	  if(destOffs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  if  (len  +  offs  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if  (len  +  offs  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (len  +  offs  <  dest.length)  {	  if    (offs    +    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  if  (len  +  offs  >  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if  (len  +  offs  >  destOffs.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (len  +  offs  >  destOffs.length)  {	  if    (offs    +    len    >    destOffs.length)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  if(dest.length  >  len)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length  >  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  >  len)  {	  if    (len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  if(offs  +  len  >  offs.length)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  +  len  >  offs.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  offs.length)  {	  if(destOffs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  if(destOffs  +  len  >  hi)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(destOffs  +  len  >  hi)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  +  len  >  hi)  {	  if(destOffs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  if(len  +  dest.length  >  offs.length)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(len  +  dest.length  >  offs.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  dest.length  >  offs.length)  {	  if(destOffs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  if(offs  +  len  >=  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  +  len  >=  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >=  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (offs    +    len    >    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  if(offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  >  dest.length)  {	  if    (len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  if(dest.length  <  offs  +  1)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length  <  offs  +  1)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  <  offs  +  1)  {	  if(dest.length    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  if(len  <  offs)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  offs)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  <  offs)  {	  if(dest.length    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
37	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length;  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_yy.length;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy;  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_yy;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||  offs  >  hi)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  +  len  >  dest.length  ||  offs  >  hi)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||  offs  >  hi)  {	  if(offs    +    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  if(offs  +  len  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  +  len  <  offs.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  <  offs.length)  {	  if(destOffs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  if(offs  *  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  *  len  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  >  dest.length)  {	  if(destOffs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  if(offs  *  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }    [BUGGY]  if(offs  *  len  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  <  dest.length)  {	  if    (offs    +    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
