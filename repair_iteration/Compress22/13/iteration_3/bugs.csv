bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(len  +  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  len  >  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  len  >  dest.length)  {	  if(len    +    dest.length    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
2	[BUG]  [BUGGY]  if(offs.length  +  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs.length  +  len  >  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs.length  +  len  >  dest.length)  {	  if(len    +    dest.length    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
3	[BUG]  [BUGGY]  if(dest.length  +  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  +  len  >  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  +  len  >  dest.length)  {	  if(len    +    dest.length    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
4	[BUG]  [BUGGY]  if(offs  *  len  ==  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  ==  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  ==  dest.length)  {	  if(offs    *    len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
5	[BUG]  [BUGGY]  if(offs  *  len  >  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  >  destOffs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  >  destOffs.length)  {	  if(offs    *    len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
6	[BUG]  [BUGGY]  if(offs  *  len  >  dest.length  +  1)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  >  dest.length  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  >  dest.length  +  1)  {	  if(offs    *    len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
7	[BUG]  [BUGGY]  if(offs  *  len  >  dest.length  +   ")  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  >  dest.length  +   ")  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  >  dest.length  +   ")  {	  if(offs    *    len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
8	[BUG]  [BUGGY]  if(offs  <  dest.length  +  1)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  <  dest.length  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  <  dest.length  +  1)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
9	[BUG]  [BUGGY]  if(dest.length  <  len  +  1)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  <  len  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  <  len  +  1)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
10	[BUG]  [BUGGY]  if(dest.length  <  dest.length  +  1)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  <  dest.length  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  <  dest.length  +  1)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
11	[BUG]  [BUGGY]  if(dest.length  <  offs  +  len)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  <  offs  +  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  <  offs  +  len)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
12	[BUG]  [BUGGY]  if(len  <  dest.length  +  1)  {  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  <  dest.length  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  <  dest.length  +  1)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
13	[BUG]  [BUGGY]  if(offs  >  len)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  >  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  >  len)  {	  if(dest.length    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
14	[BUG]  [BUGGY]  if(dest.length  ==  len)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  ==  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  ==  len)  {	  if(dest.length    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
15	[BUG]  [BUGGY]  if(offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  <  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  <  len)  {	  if(dest.length    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
16	[BUG]  [BUGGY]  if(dest.length  >=  len)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  >=  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  >=  len)  {	  if(dest.length    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
17	[BUG]  [BUGGY]  if(offs  +  len  <  dest.length  ||(destOffs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  <  dest.length  ||(destOffs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  <  dest.length  ||(destOffs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(destOffs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
18	[BUG]  [BUGGY]  if(offs  +  len  >  destOffs.length  ||(destOffs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  destOffs.length  ||(destOffs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  destOffs.length  ||(destOffs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(destOffs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
19	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  &&(destOffs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  &&(destOffs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  &&(destOffs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(destOffs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
20	[BUG]  [BUGGY]  if(offs  +  len  >=  dest.length  ||(destOffs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >=  dest.length  ||(destOffs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >=  dest.length  ||(destOffs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(destOffs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
21	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||(len  +  dest.length)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  ||(len  +  dest.length)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||(len  +  dest.length)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(destOffs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
22	[BUG]  [BUGGY]  if(offs  +  len  ==  dest.length  ||(destOffs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  ==  dest.length  ||(destOffs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  ==  dest.length  ||(destOffs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(destOffs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
23	[BUG]  [BUGGY]  if(offs  +  len  >>  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >>  dest.length)  {	  if(destOffs    +    len    >=    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  if(offs  +  len  >=  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >=  destOffs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >=  destOffs.length)  {	  if(destOffs    +    len    >=    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  if(offs  +  len  >=  offs.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >=  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >=  offs.length)  {	  if(destOffs    +    len    >=    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(this.in    ==    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
27	[BUG]  [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ").  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ").  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ").	  if(this.in    ==    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
28	[BUG]  [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ".  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ".  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ".	  if(this.in    ==    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
29	[BUG]  [BUGGY]  while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  }  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  }	  if(this.in    ==    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
30	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length  -  1;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length  -  1;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_yy.length  -  1;	  int    len    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
31	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_len;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_len;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_len;	  int    len    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
32	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length  +  1;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length  +  1;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_yy.length  +  1;	  int    len    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
33	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length  -  2;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length  -  2;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_yy.length  -  2;	  int    len    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
34	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_dest.length;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_dest.length;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_dest.length;	  int    len    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
35	[BUG]  [BUGGY]  if(dest.length!=  len)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length!=  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length!=  len)  {	  if(dest.length    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_Length;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_Length;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_Length;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
37	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_length;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_length;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_length;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
38	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_loop;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_loop;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_loop;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
39	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_lens;  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_lens;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_lens;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
40	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_offs;  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_offs;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_offs;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
41	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_.length;  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_.length;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_.length;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
42	[BUG]  [BUGGY]  if  (len  +  len  >  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (len  +  len  >  destOffs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (len  +  len  >  destOffs.length)  {	  if    (len    +    offs    >    destOffs.length)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
43	[BUG]  [BUGGY]  if(destOffs  +  len!=  offs.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  +  len!=  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  +  len!=  offs.length)  {	  if(offs    +    len!=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  if(offs!=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs!=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs!=  dest.length)  {	  if(dest.length!=    offs)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  if(len!=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len!=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len!=  dest.length)  {	  if(dest.length!=    offs)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  if(len  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  >=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  >=  dest.length)  {	  if(dest.length!=    offs)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  if(offs  *  len  <  dest.length  +  1)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  <  dest.length  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  <  dest.length  +  1)  {	  if(offs    *    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
48	[BUG]  [BUGGY]  if(offs  *  len  <  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  <  destOffs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  <  destOffs.length)  {	  if(offs    *    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
49	[BUG]  [BUGGY]  if(destOffs  *  len  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  *  len  <  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  *  len  <  offs.length)  {	  if(offs    *    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
50	[BUG]  [BUGGY]  if(offs  *  len  <  =  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  <  =  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  <  =  dest.length)  {	  if(offs    *    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
51	[BUG]  [BUGGY]  if(destOffs  +  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  +  len  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  +  len  <  dest.length)  {	  if(destOffs    +    len    <    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
52	[BUG]  [BUGGY]  if(offs  +  len  <  destOffs.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  <  destOffs.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  <  destOffs.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {	  if    (offs    +    len    <    dest.length    ||(offs    +    len)>    dest.length    ||(offs    +    len)    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]  if  (offs  +  len  >  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (offs  +  len  >  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  >  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {	  if    (offs    +    len    <    dest.length    ||(offs    +    len)>    dest.length    ||(offs    +    len)    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
54	[BUG]  [BUGGY]  if  (offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  det.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  det.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  det.length)  {	  if    (offs    +    len    <    dest.length    ||(offs    +    len)>    dest.length    ||(offs    +    len)    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
55	[BUG]  [BUGGY]  if(offs  +  len  ==  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  ==  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  ==  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(offs    +    len    >=    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
56	[BUG]  [BUGGY]  if(offs  +  len!=  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len!=  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len!=  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(offs    +    len    >=    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
57	[BUG]  [BUGGY]  if(offs  +  len  >=  dest.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >=  dest.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >=  dest.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(offs    +    len    >=    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
58	[BUG]  [BUGGY]  if(offs  +  len  >>  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >>  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >>  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(offs    +    len    >=    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
59	[BUG]  [BUGGY]  if(len  +  destOffs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  destOffs  >  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  destOffs  >  dest.length)  {	  if(destOffs    +    len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
60	[BUG]  [BUGGY]  if(len  +  dest.length  >  destOffs)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  dest.length  >  destOffs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  dest.length  >  destOffs)  {	  if(destOffs    +    len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
61	[BUG]  [BUGGY]  if(offs  +  len  >  hi)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  hi)  {	  if(destOffs    +    len    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
62	[BUG]  [BUGGY]  if(len  +  destOffs  >  hi)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  destOffs  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  destOffs  >  hi)  {	  if(destOffs    +    len    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
63	[BUG]  [BUGGY]  if(offs  +  len  >  destOffs)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  destOffs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  destOffs)  {	  if(destOffs    +    len    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
64	[BUG]  [BUGGY]  if(destOffs  +  len  <  hi)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  +  len  <  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  +  len  <  hi)  {	  if(destOffs    +    len    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
65	[BUG]  [BUGGY]  if(destOffs  +  len  ==  offs.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  +  len  ==  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  +  len  ==  offs.length)  {	  if(offs    +    len    ==    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  if(len  +  offs  ==  dest.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  offs  ==  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  offs  ==  dest.length)  {	  if(offs    +    len    ==    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  if(offs  ==  dest.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  ==  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  ==  dest.length)  {	  if    (len    ==    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
68	[BUG]  [BUGGY]  if(len  +  offs  >  offs.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  offs  >  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  offs  >  offs.length)  {	  if(offs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
69	[BUG]  [BUGGY]  ||  this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  ||  this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	||  this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
70	[BUG]  [BUGGY]  Dest.length( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  Dest.length( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	Dest.length( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
71	[BUG]  [BUGGY]  (this.in  ==  null)?  null  :  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  (this.in  ==  null)?  null  :  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	(this.in  ==  null)?  null  :  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
72	[BUG]  [BUGGY]  while(this.in!=  null)  {  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
73	[BUG]  [BUGGY]  while(this.in!=  null)  {  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ").  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ").  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ").	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
74	[BUG]  [BUGGY]  while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
75	[BUG]  [BUGGY]  if(len  +  destOffs  >  hi.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  destOffs  >  hi.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  destOffs  >  hi.length)  {	  if(len    +    destOffs    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
76	[BUG]  [BUGGY]  if  (dest.length  <  =  len)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (dest.length  <  =  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (dest.length  <  =  len)  {	  if    (len    <    =    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
77	[BUG]  [BUGGY]  if  (offs  +  len  <  dest.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (offs  +  len  <  dest.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  <  dest.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (offs    +    len    <    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
78	[BUG]  [BUGGY]  if(destOffs  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  <  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  <  offs.length)  {	  if(offs    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
79	[BUG]  [BUGGY]  if(destOffs  <  len)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  <  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  <  len)  {	  if(offs    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
80	[BUG]  [BUGGY]  if(offs  <  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  <  destOffs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  <  destOffs.length)  {	  if(offs    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
81	[BUG]  [BUGGY]  if(offs  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  >=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  >=  dest.length)  {	  if(dest.length    >=    offs)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  ||  this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  ||  this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	||  this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(this.in    ==    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
83	[BUG]  [BUGGY]  if  (offs  +  len  >  destOffs.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (offs  +  len  >  destOffs.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  >  destOffs.length  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (offs    +    len    >    dest.length    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
84	[BUG]  [BUGGY]  if(len  <  =  destOffs)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  <  =  destOffs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  <  =  destOffs)  {	  if(len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
85	[BUG]  [BUGGY]  if(len  <  =  offs)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  <  =  offs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  <  =  offs)  {	  if(len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
86	[BUG]  [BUGGY]  if(len  <  len)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  <  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  <  len)  {	  if(len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
87	[BUG]  [BUGGY]  if  (len  +  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (len  +  len  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (len  +  len  <  dest.length)  {	  if    (len    +    offs    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
88	[BUG]  [BUGGY]  if  (offs  +  len)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (offs  +  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len)  {	  if    (len    +    offs    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
89	[BUG]  [BUGGY]  if(offs  *  len!=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len!=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len!=  dest.length)  {	  if(offs    *    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
90	[BUG]  [BUGGY]  if(destOffs  *  len  >=  offs.length)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  *  len  >=  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  *  len  >=  offs.length)  {	  if(offs    *    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
91	[BUG]  [BUGGY]  if(len  *  offs  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  *  offs  >=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  *  offs  >=  dest.length)  {	  if(offs    *    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
92	[BUG]  [BUGGY]  if(len  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  <  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  <  offs.length)  {	  if(offs    +    len    <    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
93	[BUG]  [BUGGY]  if(offs  +  len  >  hi  ||  offs  >  hi)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  hi  ||  offs  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  hi  ||  offs  >  hi)  {	  if(offs    +    len    >    dest.length    ||    offs    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
94	[BUG]  [BUGGY]  if(offs  +  len  >  destOffs.length  ||  offs  >  hi)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  destOffs.length  ||  offs  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  destOffs.length  ||  offs  >  hi)  {	  if(offs    +    len    >    dest.length    ||    offs    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
95	[BUG]  [BUGGY]  if(offs  +  len  <  dest.length  ||  offs  >  hi)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  <  dest.length  ||  offs  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  <  dest.length  ||  offs  >  hi)  {	  if(offs    +    len    >    dest.length    ||    offs    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
96	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||  offs  <  hi)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  ||  offs  <  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||  offs  <  hi)  {	  if(offs    +    len    >    dest.length    ||    offs    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
97	[BUG]  [BUGGY]  if(offs  +  len  >  hi  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  hi  ||  offs  >  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  hi  ||  offs  >  dest.length)  {	  if(offs    +    len    >    dest.length    ||    offs    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
98	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||  offs  >=  hi)  {  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  ||  offs  >=  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||  offs  >=  hi)  {	  if(offs    +    len    >    dest.length    ||    offs    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
99	[BUG]  [BUGGY]  if  (offs  +  len  <  destOffs.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (offs  +  len  <  destOffs.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  <  destOffs.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (offs    +    len    >    destOffs.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
100	[BUG]  [BUGGY]  if(offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(offs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
101	[BUG]  [BUGGY]  if(offs  +  len  >  destOffs.length  ||(offs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  destOffs.length  ||(offs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  destOffs.length  ||(offs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(offs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
102	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  &&(offs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  &&(offs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  &&(offs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(offs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
103	[BUG]  [BUGGY]  if(offs  +  len  >=  dest.length  ||(offs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >=  dest.length  ||(offs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >=  dest.length  ||(offs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(offs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
104	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||(offs  +  len)>  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  ||(offs  +  len)>  destOffs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||(offs  +  len)>  destOffs.length)  {	  if(offs    +    len    >    dest.length    ||(offs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
105	[BUG]  [BUGGY]  if(len  >  dest.length  ||(offs  +  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  >  dest.length  ||(offs  +  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  >  dest.length  ||(offs  +  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(offs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
106	[BUG]  [BUGGY]  if(dest.length  ==  offs  +  len)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  ==  offs  +  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  ==  offs  +  len)  {	  if(dest.length    ==    offs)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
107	[BUG]  [BUGGY]  if(offs  >  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  >  destOffs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  >  destOffs.length)  {	  if(offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
108	[BUG]  [BUGGY]  if(destOffs  >  offs.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  >  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  >  offs.length)  {	  if(offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
109	[BUG]  [BUGGY]  if(len  <  0)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  <  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  <  0)  {	  if(len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
110	[BUG]  [BUGGY]  if(len  >  hi)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  >  hi)  {	  if(len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
111	[BUG]  [BUGGY]  if  (len  +  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (len  +  offs  >  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (len  +  offs  >  dest.length)  {	  if    (len    +    offs    >    destOffs.length)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
112	[BUG]  [BUGGY]  if(dest.length  >  hi)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  >  hi)  {	  if(dest.length    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
113	[BUG]  [BUGGY]  if(offs  +  len  *  len  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  *  len  >=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  *  len  >=  dest.length)  {	  if(offs    *    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
114	[BUG]  [BUGGY]  if(len  +  dest.length  >  hi)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  dest.length  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  dest.length  >  hi)  {	  if(len    +    dest.length    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
115	[BUG]  [BUGGY]  if(dest.length  +  len  >  offs.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  +  len  >  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  +  len  >  offs.length)  {	  if(len    +    dest.length    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
116	[BUG]  [BUGGY]  if(len  +  len  >  destOffs)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  len  >  destOffs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  len  >  destOffs)  {	  if(destOffs    +    len    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
117	[BUG]  [BUGGY]  if(offs  *  len  >  hi)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  >  hi)  {	  if(destOffs    +    len    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
118	[BUG]  [BUGGY]  if(offs  +  len  <  hi)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  <  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  <  hi)  {	  if(destOffs    +    len    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
119	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  &&  offs  >  hi)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  &&  offs  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  &&  offs  >  hi)  {	  if(offs    +    len    >    dest.length    ||    offs    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
120	[BUG]  [BUGGY]  if(offs  +  len  <  hi  ||  offs  >  hi)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  <  hi  ||  offs  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  <  hi  ||  offs  >  hi)  {	  if(offs    +    len    >    dest.length    ||    offs    >    hi)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
121	[BUG]  [BUGGY]  if(dest.length  <  offs  +  3)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  <  offs  +  3)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  <  offs  +  3)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
122	[BUG]  [BUGGY]  if(dest.length  ==  offs  +  1)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  ==  offs  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  ==  offs  +  1)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
123	[BUG]  [BUGGY]  if(dest.length  >=  offs  +  1)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  >=  offs  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  >=  offs  +  1)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
124	[BUG]  [BUGGY]  if(dest.length!=  offs  +  1)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length!=  offs  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length!=  offs  +  1)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
125	[BUG]  [BUGGY]  if(offs  +  len  *  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  *  len  >  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  *  len  >  dest.length)  {	  if(offs    *    len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
126	[BUG]  [BUGGY]  if(destOffs  >  len)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(destOffs  >  len)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(destOffs  >  len)  {	  if(offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
127	[BUG]  [BUGGY]  if(offs  >  hi)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  >  hi)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  >  hi)  {	  if(offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
128	[BUG]  [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ").   ");  }  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ").   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ").   ");  }	  if(this.in    ==    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
129	[BUG]  [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  +   ")>  dest.length( "  +  dest.length  +   ")  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  +   ")>  dest.length( "  +  dest.length  +   ")  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")+  len( "  +  len  +   ")>  dest.length( "  +  dest.length  +   ")	  if(this.in    ==    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
130	[BUG]  [BUGGY]  if(offs  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  <  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  <  offs.length)  {	  if(offs    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
131	[BUG]  [BUGGY]  if  (offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  >  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  <  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  >  dest.length)  {	  if    (offs    +    len    <    dest.length    ||(offs    +    len)>    dest.length    ||(offs    +    len)    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
132	[BUG]  [BUGGY]  if(len  +  offs!=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  offs!=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  offs!=  dest.length)  {	  if(offs    +    len!=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
133	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy  +  offs;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy  +  offs;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_yy  +  offs;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
134	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_yy  +  1;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
135	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_1;  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_1;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_1;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
136	[BUG]  [BUGGY]  if(len  +  dest.length  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  dest.length  <  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  dest.length  <  offs.length)  {	  if(destOffs    +    len    <    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
137	[BUG]  [BUGGY]  if(len  +  destOffs.length  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  destOffs.length  <  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  destOffs.length  <  offs.length)  {	  if(destOffs    +    len    <    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
138	[BUG]  [BUGGY]  if(offs  *  len  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  <  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  <  offs.length)  {	  if(destOffs    +    len    <    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
139	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||  hasEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  ||  hasEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||  hasEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(offs    +    len    >=    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
140	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy  +  offs.length;  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy  +  offs.length;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_yy  +  offs.length;	  int    len    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
141	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length  -  offs;  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length  -  offs;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_yy.length  -  offs;	  int    len    =    getAndMoveToFrontDecode_yy.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
142	[BUG]  [BUGGY]  if(dest.length  ==  offs  +   ")  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  ==  offs  +   ")  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  ==  offs  +   ")  {	  if(dest.length    ==    offs)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
143	[BUG]  [BUGGY]  if(len  +  offs.length  >  offs.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  offs.length  >  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  offs.length  >  offs.length)  {	  if(offs    +    len    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
144	[BUG]  [BUGGY]  if  (offs  +  len  >  dest.length  -  1  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if  (offs  +  len  >  dest.length  -  1  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if  (offs  +  len  >  dest.length  -  1  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (offs    +    len    >    dest.length    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
145	[BUG]  [BUGGY]  if(len  +  offs.length  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  offs.length  <  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  offs.length  <  offs.length)  {	  if(offs    +    len    <    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
146	[BUG]  [BUGGY]  if(dest.length  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  <  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  <  offs.length)  {	  if(offs    +    len    <    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
147	[BUG]  [BUGGY]  if(offs  +  len  *  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  *  len  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  *  len  <  dest.length)  {	  if(offs    *    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
148	[BUG]  [BUGGY]  if(len  *  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  *  len  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  *  len  <  dest.length)  {	  if(offs    *    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
149	[BUG]  [BUGGY]  if(offs  *  len  >=  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  >=  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  >=  dest.length  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(offs    +    len    >=    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
150	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  ||  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||  isEnabled(Feature.QUOTE_FIELDS))  {	  if(offs    +    len    >=    dest.length    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
151	[BUG]  [BUGGY]  if(dest.length  +  len  >  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  +  len  >  destOffs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  +  len  >  destOffs.length)  {	  if    (len    +    offs    >    destOffs.length)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
152	[BUG]  [BUGGY]  if(dest.length  >  offs)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  >  offs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  >  offs)  {	  if(offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
153	[BUG]  [BUGGY]  if(dest.length!=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length!=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length!=  dest.length)  {	  if(dest.length!=    offs)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
154	[BUG]  [BUGGY]  if(len  ==  offs)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  ==  offs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  ==  offs)  {	  if(dest.length    ==    offs)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
155	[BUG]  [BUGGY]  if(len  ==  offs.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  ==  offs.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  ==  offs.length)  {	  if    (len    ==    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
156	[BUG]  [BUGGY]  if(offs  +  len  *  dest.length  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  *  dest.length  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  *  dest.length  <  dest.length)  {	  if(offs    *    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
157	[BUG]  [BUGGY]  if(offs  +  len  *  dest.length  <  offs)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  *  dest.length  <  offs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  *  dest.length  <  offs)  {	  if(offs    *    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
158	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_Length();  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_Length();  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_Length();	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
159	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  int  len  =  getAndMoveToFrontDecode_BLOCK_STATE;  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	int  len  =  getAndMoveToFrontDecode_BLOCK_STATE;	  int    len    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
160	[BUG]  [BUGGY]  if(offs  +  len  *  dest.length  >  offs)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  *  dest.length  >  offs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  *  dest.length  >  offs)  {	  if(offs    *    len    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
161	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   "). ");  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   "). ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   "). ");	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
162	[BUG]  [BUGGY]  aughtException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   "). ");  [CE]  illegal  start  of  type  [FE]                          IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  aughtException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   "). ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	aughtException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   "). ");	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
163	[BUG]  [BUGGY]  while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ".   ");  }  [CE]  illegal  start  of  type  [FE]                            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ".   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  + ".   ");  }	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
164	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ") ");  [CE]  illegal  start  of  type  [FE]                              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ") ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +   ") ");	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +       ").       ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
165	[BUG]  [BUGGY]  while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	while(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(this.in    ==    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
166	[BUG]  [BUGGY]  if(offs  +  len  >  dest.length  ||(offs  +  len)  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >  dest.length  ||(offs  +  len)  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >  dest.length  ||(offs  +  len)  <  dest.length)  {	  if(offs    +    len    >    dest.length    ||(offs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
167	[BUG]  [BUGGY]  if(offs  *  len  >  dest.length  ||(offs  *  len)>  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  *  len  >  dest.length  ||(offs  *  len)>  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  *  len  >  dest.length  ||(offs  *  len)>  dest.length)  {	  if(offs    +    len    >    dest.length    ||(offs    +    len)>    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
168	[BUG]  [BUGGY]  if(offs  <  offs  +  1)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  <  offs  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  <  offs  +  1)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
169	[BUG]  [BUGGY]  if(len  <  offs  +  1)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  <  offs  +  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  <  offs  +  1)  {	  if(dest.length    <    offs    +    1)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
170	[BUG]  [BUGGY]  if(dest.length  +  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(dest.length  +  len  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(dest.length  +  len  <  dest.length)  {	  if    (len    +    offs    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
171	[BUG]  [BUGGY]  if(offs  +  len  >=  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  >=  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  >=  dest.length  ||(offs  +  len)>  dest.length  ||(offs  +  len)  <  dest.length)  {	  if    (offs    +    len    <    dest.length    ||(offs    +    len)>    dest.length    ||(offs    +    len)    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
172	[BUG]  [BUGGY]  if(len  +  offs.length  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(len  +  offs.length  >  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(len  +  offs.length  >  dest.length)  {	  if(len    +    dest.length    >    offs.length)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
173	[BUG]  [BUGGY]  If(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                      IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  If(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	If(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
174	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                        IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	throw  new  IndexOutOfBoundsException( "offs( "  +  offs  + ")+  len( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(this.in!=    null)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")    +    len(   "    +    len    +       ")    >    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
175	[BUG]  [BUGGY]  if(offs  +  len  *  dest.length  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  *  dest.length  >=  dest.length)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  *  dest.length  >=  dest.length)  {	  if(offs    *    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
176	[BUG]  [BUGGY]  if(offs  +  len  *  dest.length  >=  offs)  {  [CE]  illegal  start  of  type  [FE]                    IOException      [CONTEXT]      throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }      [BUGGY]  if(offs  +  len  *  dest.length  >=  offs)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }  if  (this.in  ==  null)  {  throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	163	163	1	replace	if(offs  +  len  *  dest.length  >=  offs)  {	  if(offs    *    len    >=    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
