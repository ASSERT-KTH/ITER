bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(len  <  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  offs  <  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  offs  <  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if(len  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  len  <  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  len  <  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if(offs  <  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  0  ||  len  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  0  ||  len  >  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if(offs  <  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  len  ||  len  <  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  len  ||  len  <  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  if(offs  <  0  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  0  ||  len  ==  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  0  ||  len  ==  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  if(offs  <  0  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  0  ||  len  >=  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  0  ||  len  >=  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")  <  0.   ");  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")  <  0.   ");  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")  <  0.   ");  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")  <  0.   ");  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  }  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  }  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  len  + ")>  dest.length( "  +  dest.length  + ").   ");  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  if(len  <  0  ||  offs  <  0  ||  dest.length  >  0)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  offs  <  0  ||  dest.length  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  offs  <  0  ||  dest.length  >  0)  {	  if(offs    <    0    ||    len    <    0    ||    dest.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  if(len  <  0  ||  len  <  0  ||  dest.length  >  0)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  len  <  0  ||  dest.length  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  len  <  0  ||  dest.length  >  0)  {	  if(offs    <    0    ||    len    <    0    ||    dest.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  if(dest.length  <  0  ||  len  <  0  ||  offs.length  >  0)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length  <  0  ||  len  <  0  ||  offs.length  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(dest.length  <  0  ||  len  <  0  ||  offs.length  >  0)  {	  if(offs    <    0    ||    len    <    0    ||    dest.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  if(len  <  0  ||  dest.length  <  0  ||  offs.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  dest.length  <  0  ||  offs.length  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  dest.length  <  0  ||  offs.length  >  0)  {	  if(offs    <    0    ||    len    <    0    ||    dest.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  if(len  <  =  0  ||  len  <  0  ||  dest.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  =  0  ||  len  <  0  ||  dest.length  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  =  0  ||  len  <  0  ||  dest.length  >  0)  {	  if(offs    <    0    ||    len    <    0    ||    dest.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  if(len  <  0  ||  offs  >  0  ||  dest.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  offs  >  0  ||  dest.length  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  offs  >  0  ||  dest.length  >  0)  {	  if(offs    <    0    ||    len    <    0    ||    dest.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  if(offs  <  0  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  0  ||  offs  >  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  0  ||  offs  >  len)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  if(offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  len)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  if(offs  <  0  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  0  ||  len  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  0  ||  len  <  dest.length)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  if(offs  <  0  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  0  ||  offs  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  0  ||  offs  >  dest.length)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  if(offs  ==  0)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  ==  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  ==  0)  {	  if(len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  if(offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  ==  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  ==  len)  {	  if(len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  if(len  ==  1)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  ==  1)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  ==  1)  {	  if(len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  if(len  <  0  ||  offs  <  0  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  offs  <  0  ||  offs  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  offs  <  0  ||  offs  >  dest.length)  {	  if(offs    <    0    ||    len    <    0    ||    offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  if(len  <  0  ||  len  <  0  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  len  <  0  ||  offs  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  len  <  0  ||  offs  >  dest.length)  {	  if(offs    <    0    ||    len    <    0    ||    offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  >=  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  0  ||  len  <  0  ||  offs  >=  dest.length)  {	  if(offs    <    0    ||    len    <    0    ||    offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  ==  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  ==  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  0  ||  len  <  0  ||  offs  ==  dest.length)  {	  if(offs    <    0    ||    len    <    0    ||    offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  if(len  <  0  ||  offs  <  0  ||  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  offs  <  0  ||  len  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  offs  <  0  ||  len  >  dest.length)  {	  if(offs    <    0    ||    len    <    0    ||    offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  if(dest.length  <  0  ||  len  <  0  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length  <  0  ||  len  <  0  ||  offs  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(dest.length  <  0  ||  len  <  0  ||  offs  >  dest.length)  {	  if(offs    <    0    ||    len    <    0    ||    offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  if(offs  >=  0)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  >=  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  >=  0)  {	  if(len    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  if(len!=  0)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len!=  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len!=  0)  {	  if(len    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  if(offs  >=  len)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  >=  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  >=  len)  {	  if(len    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  if(len  <  =  0  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  =  0  ||  len  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  =  0  ||  len  <  dest.length)  {	  if(len    <    0    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  if(len  <  1  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  1  ||  len  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  1  ||  len  <  dest.length)  {	  if(len    <    0    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  if(len  <  0  ||  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  len  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  len  >  dest.length)  {	  if(len    <    0    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  if(len  <  2  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  2  ||  len  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  2  ||  len  <  dest.length)  {	  if(len    <    0    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  if(dest.length  <  0  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length  <  0  ||  len  <  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(dest.length  <  0  ||  len  <  dest.length)  {	  if(len    <    0    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  if(offs  >  0)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  >  0)  {	  if(len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  if(len  <  =  1)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  =  1)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  =  1)  {	  if(len    <    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  if(offs  <  1)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  1)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  1)  {	  if(len    <    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  if(len  <  2)  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  2)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  2)  {	  if(len    <    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  if(offs  <  =  0)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  =  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  =  0)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  if(len  <  =  0  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  =  0  ||  offs  >  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  =  0  ||  offs  >  len)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
44	[BUG]  [BUGGY]  if(destOffs  <  0)  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(destOffs  <  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(destOffs  <  0)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  if(dest.length  <  0  ||  len  <  0  ||  dest.length  >  0)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(dest.length  <  0  ||  len  <  0  ||  dest.length  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(dest.length  <  0  ||  len  <  0  ||  dest.length  >  0)  {	  if(offs    <    0    ||    len    <    0    ||    dest.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  if(len  <  0  ||  dest.length  <  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  dest.length  <  0  ||  len  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  dest.length  <  0  ||  len  >  0)  {	  if(offs    <    0    ||    len    <    0    ||    dest.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  if(len  <  0  ||  offs.length  <  0  ||  dest.length  >  0)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  offs.length  <  0  ||  dest.length  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  offs.length  <  0  ||  dest.length  >  0)  {	  if(offs    <    0    ||    len    <    0    ||    dest.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
48	[BUG]  [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")  <  0. ");  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")  <  0. ");  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(this.in  ==  null)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")  <  0. ");  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  if(len  <  0  ||  len  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  len  >=  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  len  >=  dest.length)  {	  if(len    <    0    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  if(len  <  0  ||  len  ==  dest.length)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  len  ==  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  len  ==  dest.length)  {	  if(len    <    0    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  if(len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  offs  >  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  offs  >  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  if(len  <  =  0  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  =  0  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  =  0  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  if(len  <  =  0  ||  isEnabled(Feature.QUOTE_NULL_STRING))  {  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  =  0  ||  isEnabled(Feature.QUOTE_NULL_STRING))  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  =  0  ||  isEnabled(Feature.QUOTE_NULL_STRING))  {	  if(len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  if(len  <  0  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  offs  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  offs  >  dest.length)  {	  if(offs    <    0    ||    len    <    0    ||    offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
55	[BUG]  [BUGGY]  if(destOffs  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(destOffs  <  0  ||  len  <  0)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(destOffs  <  0  ||  len  <  0)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  if(destOffs  <  0  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(destOffs  <  0  ||  offs  >  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(destOffs  <  0  ||  offs  >  len)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  if(offs  <  0  ||  len  <  1)  {  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(offs  <  0  ||  len  <  1)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(offs  <  0  ||  len  <  1)  {	  if(len    <    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  if(len  <  1  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  1  ||  offs  >  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  1  ||  offs  >  len)  {	  if(len    <    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  if(len  <  0  ||  offs  <  0  ||  dest.length  >  len)  {  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  0  ||  offs  <  0  ||  dest.length  >  len)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  0  ||  offs  <  0  ||  dest.length  >  len)  {	  if(offs    <    0    ||    len    <    0    ||    offs    >    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  if(len  <  =  0  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(len  <  =  0  ||  offs  >  dest.length)  {  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(len  <  =  0  ||  offs  >  dest.length)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
61	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy.length;  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	int  len  =  getAndMoveToFrontDecode_yy.length;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    throws  IOException  {  if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  <  0.   ");  }    [BUGGY]  if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")  <  0.   ");  }  [BUGGY]    throw  new  IndexOutOfBoundsException(   "len(   "  +  len  +     ")  <  0.   ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(   "offs(   "  +  offs  +     ")  +  len(   "  +  len  +     ")  >  dest.length(   "  +  dest.length  +     ").   ");  }  if  (this.in  ==  null)  {  throw  new  IOException(   "stream  closed   ");  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	160	160	1	replace	if(this.in!=  null)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")  <  0.   ");  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
