projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=blockRandomised;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?null:decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2BLOCK_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Settingssettings=Settings.newHashSet();setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised||blockSize100k){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k!=0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in==null){setupBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length<2){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null||this.in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null||this.in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null){setupBlock();System.arraycopy(in,0,this.in,0,this.in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newInputStreamInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in==null){setupBlock();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!inUse){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135initAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_xy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=in;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,bsBuff,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=newBZip2CompressorInputStream(in,this.decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_yy();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setBlock();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in<=this.in){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k==1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k!=1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k<=0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:RAND_PART_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?Boolean.TRUE:Boolean.FALSE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:RAND_PART_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.length>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isBlock()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k>=0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(blockSize100k,0,blockRandomised,0,blockSize100k)){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||this.in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null||this.in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?NO_RAND_PART_A_STATE:RAND_PART_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?START_BLOCK_STATE:RAND_PART_A_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:RAND_PART_A_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:RAND_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:RAND_PART_C_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_C_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?NO_RAND_PART_A_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?START_BLOCK_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated|BZip2BLOCK_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,DECOMPRESSION);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.selector);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_C_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated&&BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135initAndMoveToFrontDecode();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(getAndMoveToFrontDecode_yy){initAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(getAndMoveToFrontDecode_yy>0){initAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(getAndMoveToFrontDecode_yy){initAndMoveToFrontDecode_yy();}else{getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised&&blockSize100k!=1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k!=2){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k>=1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised&&blockSize100k==1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,bsBuff,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(bsBuff,0,in,0,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,this.in,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,blockSize100k,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,bsBuff,0,bsLive);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,1,bsBuff,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null||this.in.isBlock()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,this.in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,this.in.length);setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isInput()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,this.in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_xy();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,decompressConcatenated,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,decompressConcatenated,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,decompressConcatenated,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,decompressConcatenated,in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,decompressConcatenated,false);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Settingssettings=Settings.newHashSet();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Settingssettings=Settings.newInstance();setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Settingssettings=Settings.newSet();setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(getAndMoveToFrontDecode_yy()!=null){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(getAndMoveToFrontDecode_yy()==null){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(getAndMoveToFrontDecode_yy()!=null){getAndMoveToFrontDecode_xy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(getAndMoveToFrontDecode_yy()==null){getAndMoveToFrontDecode_xy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_xy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in!=decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null&&in!=decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in>=decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in==decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135init(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated&&BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated|BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=Integer.toHexString(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=in,decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=Integer.parseInt(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=Integer.toString(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=Integer.toHexString(in.readLine());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=1,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in.read());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=this.in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=1,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in.read());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=this.in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newInputStreamInputStream(in,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressCon
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(crc!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()||in.isBlock()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()){setupSize100k();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()){setBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()){setupBackgroundBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised&&blockSize100k==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised&&blockSize100k!=0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.length<2){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.length<2){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length<2||in.length>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length<1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length<2||in.length>4){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockSize100k==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,blockSize100k,0,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clon
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=1,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clon
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone()
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==null){setupBlock();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=null){setupBlock();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null&&in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135setupBlock();System.arraycopy(in,0,this.in,0,this.in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();System.arraycopy(in,0,this.in,0,this.in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null){setupBlock();System.arraycopy(in,0,this.in,0,this.in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135initBlock();System.arraycopy(in,0,this.in,0,this.in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,in.length);setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(inUse){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135inUse){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135inUse=!inUse;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135inUse=!inUse;setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135inUse=false;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,this.blockSize100k);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,this.bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(data,0,this.in,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,blockSize100k);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=null){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_null();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null||this.in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=1,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in.getData());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData()
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getDATA();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompress
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressCon
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=1,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData()
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=out.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in.getData());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in<this.in){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in<=this.in){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null&&in<=this.in){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null&&in<this.in){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_null();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,this.selector);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,RAND_PART_A_STATE);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,false);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode();}else{initBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised||blockSize100k){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised&&blockSize100k>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised&&blockSize100k<=0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?Boolean.FALSE:Boolean.TRUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?Integer.TRUE:Integer.FALSE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated|Boolean.TRUE:Boolean.FALSE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised?Boolean.TRUE:Boolean.FALSE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?null:Boolean.TRUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||this.in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||this.in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length()==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.length()==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length<=0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length>=0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,this.blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_in();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_instance();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_xy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_int();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated){setupStandardBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated){setupSize100k();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated){setBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated){setup();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:BZip2CompressorInputStream.DEFAULT_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:BZip2CompressorInputStream.DEFAULT_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated&&BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_C_STATE:BZip2CompressorInputStream.DEFAULT_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_xy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy(in,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated|BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated&BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k==2){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k>1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,in.length-1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,in.length+1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,in.length-1,in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,in.length-2);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,in,0,in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null&&in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.isEnabled()){setupSize100k();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.isBlock()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy||getAndMoveToFrontDecode_yy;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy?null:getAndMoveToFrontDecode_yy;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newchar[getAndMoveToFrontDecode_yy];
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy||getAndMoveToFrontDecode_yy);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==null){setupBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=null){setupBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_yy();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_xy();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_null();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressedConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135in=newBZip2CompressorInputStream(in,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=newBZip2CompressorInputStream(in,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy(in);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_yy(in);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,this.recvDecodingTables_pos);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_null();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,decompressConcatenated,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,decompressConcatenated,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(decompressConcatenated){getAndMoveToFrontDecode_yy(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,decompressConcatenated,this.blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(this.in,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated&BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated|BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressedorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSION+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated&&BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompress
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressCon
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(decompressConcatenated){if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2Compress
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(bsBuff,0,this.in,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,bsBuff,bsLive);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,this.blockSize100k,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,in,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,bsBuff,bsSize100k);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,bsBuff,1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,this.bsBuff,bsLive);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in>=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==null){setupFullBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,this.blockSize100k);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,this.seqToUnseq);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,this.in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(blockSize100k,0,blockRandomised,0,blockSize100k);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode_yy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getSelectorMtf();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode_xy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode_xy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null||this.in.length>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&in.length>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.length>0){setupSize100k();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.length>1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.length>0){setBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?START_BLOCK_STATE:RAND_PART_B_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?NO_RAND_PART_B_STATE:RAND_PART_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:RAND_PART_C_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:START_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newInputStreamInputStream(in,decompressConcatenated,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newInputStreamInputStream(in,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newInputStreamInputStream(in,decompressConcatenated,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newInputStreamInputStream(in,decompressConcatenated,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newInputStreamInputStream(in,decompressConcatenated,this.blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSED_BLOCK+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated&&BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated|BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?false:decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?true:decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?null:decompressConcatenated+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=RAND_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=false;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=RAND_PART_B_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=RAND_PART_A_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{thrownewIllegalArgumentException("".equals(in));}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{thrownewIllegalArgumentException("").getMessage());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in==null){setupBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised&&blockSize100k){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockSize100k||blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockSize100k||!blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode_ptr();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode_yy(1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode_int();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){in=getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){returngetAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_xy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i>=len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getDATA();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length+1;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy(in);}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.length==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.length==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:START_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_BLOCK_STATE:RAND_PART_A_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in!=null){setupFullBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised&&inUse){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i>=len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read()
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,1,in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newInputStreamInputStream(in,this.blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.US_ASCII;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.BASE_RANGE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcat
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in==null){setupBlock();}else{thrownewIllegalArgumentException("".);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null){System.arraycopy(in,0,this.in,0,this.in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(this.decompressConcatenated,in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135initAndMoveToFrontDecode_yy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135initAndMoveToFrontDecode_yy(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135initAndMoveToFrontDecode_xy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(decompressConcatenated){if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2Compress
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(decompressConcatenated){if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcr
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(decompressConcatenated){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompress
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Set<String>settings=Settings.newHashSet();setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Set<Integer>settings=Settings.newHashSet();setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Set<K>settings=Settings.newHashSet();setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Set<Object>settings=Settings.newHashSet();setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==null){setupStandardBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null&&this.in.length>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_xy();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_BLOCK_STATE:BZip2CompressorInputStream.DEFAULT_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_xy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_int();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy(currentState);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy(1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,decompressConcatenated,1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone()
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in.clone());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated&&blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated&&inUse){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.data,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,this.blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=this.in.clone();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){initAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){returngetAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=decompressConcatenated){setupStandardBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null&&this.in.isBlock()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&in.isBlock()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isBlock()){setupState();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=getAndMoveToFrontDecode_yy();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length+1;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i>=len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_as();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=getAndMoveToFrontDecode_yy();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){returngetAndMoveToFrontDecode_yy();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSED_B
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_BLOCK_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?null:decompressBlock;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?null:blockRandomised;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,false);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isBlock()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()){setupState();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()){setupStandardBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()){setupFullBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length==2){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length>=2){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(crc!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(crc!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressCon
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(crc!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompress
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(decompressConcatenated){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=Integer.MAX_VALUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=Integer.MIN_VALUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{thrownewIllegalArgumentException("").getMessage();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,decompressConcatenated,in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,decompressConcatenated,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,in,0,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(data,0,this.in,0,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,bsBuff,bsLive);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,bsBuff,in.read());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(bsBuff,0,this.in,0,inUse);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(blockSize100k,0,blockRandomised,1,blockSize100k)){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy+2;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_xy;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy+4;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy+6;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,bsBuff,0,in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,bsBuff,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,data.length,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,bsBuff,0,bsBuff,bsLive);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,data,0,bsBuff,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,bsBuff,0,bsBuff,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!inUse&&blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,inUse,0,nInUse);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,inUse);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,nInUse);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in>=this.in){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in==this.in){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,this.recvDecodingTables_pos);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.isEnabled()){setupStandardBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.isEnabled()){setupState();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompress
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=null){setupFullBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_inn();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_insert();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,false);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null&&this.in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isEnabled()){setupState();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED_B
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{thrownewIllegalArgumentException("".);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESS
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.START_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSIONS;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated&Boolean.TRUE:Boolean.FALSE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?Boolean.TRUE:Boolean.FALSE+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,cftab.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,cftab.length);setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setInputStream();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=decompressConcatenated?getAndMoveToFrontDecode_yy:getAndMoveToFrontDecode_yy;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=decompressConcatenated?getAndMoveToFrontDecode_yy:null;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=decompressConcatenated?getAndMoveToFrontDecode_yy:START_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=decompressConcatenated?getAndMoveToFrontDecode_yy():null;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=createAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode_yy(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=out.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=Integer.toHexString(Integer.toHexString(in));
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=Integer.toHexString(in.getBytes());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=Integer.toString(in.getBytes());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k<1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised?BZip2BLOCK_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in.getBytes());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_initialize();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null||this.in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isEnabled()){setupStandardBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised?BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null||this.in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,this.blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){crc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(decompressConcatenated){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){crc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(crc!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(decompressConcatenated){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompress
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy(in,decompressConcatenated);}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in==null){setupBlock();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(blockSize100k,0,blockRandomised,1,0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(blockSize100k,0,blockRandomised,0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,crc);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null){initBlock();System.arraycopy(in,0,this.in,0,this.in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2Compressor.DECOMPRESSION:BZip2Compressor.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?super.decompressConcatenated:decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised?null:decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()||in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=crc.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.read();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){intlen=in.length();for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){in=newBZip2CompressorInputStream(in,this.decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null||this.in!=null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated&&in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated&&this.in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?ROUTE_PART_A_STATE:ROUTE_PART_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=null){getAndMoveToFrontDecode_yy();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_null();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=null){setup();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=super.blockRandomised;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=DECOMPRESSION_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,this.seqToUnseq);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.blockSize100k,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.bsBuff,0,this.in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy(su_rNToGo);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=super.getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=createAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length<2||in.length>3){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==null){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.isEnabled()){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isInitializingBlock()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isBlock()||this.in.isBlock()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION,in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised|=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised&&blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,bsBuff,0,in.read());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,bsBuff,0,in.readLine());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,bsBuff,1,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.isDecompressed()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,in.isEnabled());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised?BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){returngetAndMoveToFrontDecode_yy();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised&&decompressConcatenated?Boolean.TRUE:Boolean.FALSE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised|=decompressConcatenated?Boolean.TRUE:Boolean.FALSE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in==null){setupBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_yy(in);}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in!=null){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(crc!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Settingssettings=Settings.newHashSet(this.blockSize100k);setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in!=null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(crc!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(crc!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData()
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,this.seqToUnseq);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in,this.su_rNToGo);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in!=null){setup();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&in<=in){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==null){setup();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.size()>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.length>0){setup();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(data,0,this.in,0,bsBuff,bsLive);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,1,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,this.bsBuff,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){initAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){initAndMoveToFrontDecode_yy();}else{initAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){initAndMoveToFrontDecode_yy();}else{initAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in!=null){getAndMoveToFrontDecode_yy();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=this.in.clone();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,decompressConcatenated,this.blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorOutputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,this.bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!inUse&&inUse){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=this.in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;--i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.seqToUnseq);
