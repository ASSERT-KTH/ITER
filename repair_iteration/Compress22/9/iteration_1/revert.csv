projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=blockRandomised;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?null:decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2BLOCK_STATE:BZip2BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in!=decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135Settingssettings=Settings.newHashSet();setupBlock();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(blockRandomised){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised||blockSize100k){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k!=0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in==null){setupBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length==0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in.length<2){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null||this.in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null||this.in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null){setupBlock();System.arraycopy(in,0,this.in,0,this.in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=newInputStreamInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in==null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_yy(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){setupBlock();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null||in==null){setupBlock();}else{thrownewIOException("");}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length();i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135InputStreamin=getAndMoveToFrontDecode_yy(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!decompressConcatenated){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!inUse){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){getAndMoveToFrontDecode_yy();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135initAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135getAndMoveToFrontDecode_xy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(this.in,0,this.in,0,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.in=in;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,in,0,bsBuff,bsBuff,bsBuff);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DEFAULT_BLOCK_STATE:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selector=getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=newBZip2CompressorInputStream(in,this.decompressConcatenated);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{init();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_yy();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){getAndMoveToFrontDecode_yy();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.selectorMtf=getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){setBlock();}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in!=null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null&&in<=this.in){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k==1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k!=1){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(!blockRandomised&&blockSize100k<=0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in==null){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null||in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135System.arraycopy(in,0,this.in,0,in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.read();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.clone();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=(BZip2CompressorInputStream)in.getData();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in!=null){for(inti=0,len=in.length;i<len;++i){BZip2CompressorInputStreamcrc=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:RAND_PART_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?Boolean.TRUE:Boolean.FALSE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:RAND_PART_BLOCK_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isEnabled()){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.length>0){setupBlock();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java135if(this.in!=null&&this.in.isBlock()){setupBlock();}
