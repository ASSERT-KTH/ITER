bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(retChar)  {  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  switch(retChar)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	switch(retChar)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
2	[BUG]  [BUGGY]  if(retChar  <  retChar)  {  switch(currentState)  {  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar  <  retChar)  {  switch(currentState)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar  <  retChar)  {  switch(currentState)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
3	[BUG]  [BUGGY]  if(retChar  ==  null)  {  switch(currentState)  {  [CE]  illegal  start  of  type  [FE]        IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar  ==  null)  {  switch(currentState)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar  ==  null)  {  switch(currentState)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
4	[BUG]  [BUGGY]  if(retChar!=  null)  {  switch(currentState)  {  [CE]  illegal  start  of  type  [FE]          IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar!=  null)  {  switch(currentState)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar!=  null)  {  switch(currentState)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
5	[BUG]  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]            IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar  ==  RAND_PART_A_STATE)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]    [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	  	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
7	[BUG]  [BUGGY]  Switch(retChar)  {  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  Switch(retChar)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	Switch(retChar)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
8	[BUG]  [BUGGY]  if(retChar  ==  EOF)  {  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar  ==  EOF)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar  ==  EOF)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
9	[BUG]  [BUGGY]  if(retChar  ==  null)  {  [CE]  illegal  start  of  type  [FE]        IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar  ==  null)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar  ==  null)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
10	[BUG]  [BUGGY]  if(retChar!=  null)  {  [CE]  illegal  start  of  type  [FE]          IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar!=  null)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar!=  null)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
11	[BUG]  [BUGGY]  if(retChar!=  EOF)  {  [CE]  illegal  start  of  type  [FE]            IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar!=  EOF)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar!=  EOF)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
12	[BUG]  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  RAND_PART_B_STATE)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  RAND_PART_B_STATE)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
13	[BUG]  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  RAND_PART_A_STATE)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  RAND_PART_A_STATE)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
14	[BUG]  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  BZip2CompressorInputStream.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]        IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  BZip2CompressorInputStream.DEFAULT)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  BZip2CompressorInputStream.DEFAULT)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
15	[BUG]  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  ROOT_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]          IOException  [CONTEXT]  private  int  read0()  throws  IOException  {  final  int  retChar  =  this.currentChar;  [BUGGY]  if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  ROOT_BLOCK_STATE)  {  [BUGGY]  case  EOF:  return  -1;  case  START_BLOCK_STATE:  throw  new  IllegalStateException();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	200	200	1	replace	if(retChar  ==  RAND_PART_A_STATE  ||  retChar  ==  ROOT_BLOCK_STATE)  {	switch  (currentState)  {  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
