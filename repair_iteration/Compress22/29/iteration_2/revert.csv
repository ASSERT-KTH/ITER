projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<retChar){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar!=EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar==EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=retChar){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<currentState){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null){switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=null){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.toCharArray()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.charAt(0)){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar,0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RETURN_BLOCK_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar!=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==START_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==ROOT_BLOCK_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,true){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.seqToUnseq){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,false){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.get(retChar);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=this.currentChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy;break;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=this.currentChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==BZip2Compressor.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar>START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=NO_RAND_PART_A_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar>0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar+1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar!=EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF_CHAR){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=ROOT_BLOCK_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar!=null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=retChar.length();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0,retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){if(retChar==0){return-1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar=='n'||retChar=='r'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar=='.'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar<1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==retChar){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<1){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar==EOF_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.seqToUnseq){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==no_rAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar<=LAST_VALID_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar<=DEFAULT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=RAND_PART_A_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToUnseq;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToUnseq;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToUnseq;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length;returnlen;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length();returnlen;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar!=INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=ROOT_BLOCK_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=RAND_PART_A_STATE||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=RAND_PART_A_STATE||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=NO_RAND_PART_A_STATE||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_CHAR){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF_CHAR||retChar>EOF_CHAR){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF_CHAR){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF_CHAR){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF_CHAR||retChar<EOF_CHAR){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF_CHAR){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState,retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState),retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==RAND_PART_C_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.data.length;i<len;i++){if(retChar==0){return-1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=retChar.length;i<len;i++){if(retChar==0){return-1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=retChar;i<len;i++){if(retChar==0){return-1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0){for(inti=0,len=data.length;i<len;i++){if(retChar==0){return-1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=cftab.length;i<len;i++){if(retChar==0){return-1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){if(retChar==0){return1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=0){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=0){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar=='.'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!='.'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar=='.'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar=='.'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar=='.'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar=='.'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE||retChar!=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=START_BLOCK_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE||retChar>=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RETURN_BLOCK_STATE||retChar!=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RETURN_BLOCK_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_C_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+2;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+this.selector;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+this.selectorMtf;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF&&retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.data.length;i<len;i++){DataUtilities.readFully(data[i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(this.data[i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][rtChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][len]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[0][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length-1;i<len;i++){DataUtilities.readFully(data[i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==BZip2Compressor.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==BZip2Compressor.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=BZip2Compressor.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar==BZip2Compressor.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar==BZip2Compressor.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar==BZip2Compressor.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_PART_A_STATE||retChar==EOF_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar!=EOF_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==EOF_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_PART_A_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null||retChar==EOF_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_PART_A_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=START_BLOCK_STATE||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<ROOT_BLOCK_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=START_BLOCK_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar!=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.get(this.currentChar);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.get(retChar+1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.get(0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.read0(retChar);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.get(retChar)+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentChar,false){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,false,this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,false,this.seqToUnseq){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,false,this.blockSize100k){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(selector,false){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<retChar){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState&START_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState&RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar>START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar>START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=START_BLOCK_STATE||retChar>NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar>=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0||retChar>START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar<0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar<=1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar==1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar<2){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar>=1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar!=1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar!=0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar>=0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar>>0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar[Delete]0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length-1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length-2;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length+retChar.length;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy+retChar.length;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar+3){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar*1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar+1-1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar+1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=this.currentState;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalcharretChar=this.currentChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=getAndMoveToFrontDecode_yy;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=RAND_PART_A_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=this.seqToUnseq;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar>=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar<=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=START_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<START_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<START_PART_A_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=currentState){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==currentState){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.seqToUnseq,retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.seqToUnseq),retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(seqToUnseq,retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(seqToUnseq){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar>=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=null){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(this.currentChar);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(su_z);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(su_rNToGo);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=no_rAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.length-1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar!=null?0:retChar.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar==null?0:retChar.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar!=null&&retChar.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.length+1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar!=null?1:retChar.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=NO_RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar!=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=this.currentState;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=RAND_PART_A_STATE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=this.currentChar+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=(char)this.currentChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_A_STATE||retChar!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<START_BLOCK_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar,this.currentState);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar,this.currentChar);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar,this.selector);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar,1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar,RAND_PART_A_STATE);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_B_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_B_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentChar,retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(currentState,retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToUnseq;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray.length;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray2d.length;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray2.length;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToUnseq;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar!=INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar!=INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.charAt(1)){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.length()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.length(1)){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.charAt(2)){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.charAt(0),0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentChar.charAt(0)){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+1;break;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+2;break;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.length;break;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==RAND_PART_C_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar!=EOF){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy+retChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy-1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_len;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy|retChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.data.length;i<len;i++){DataUtilities.readFully(data[i][i],retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],this.currentChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][0],retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(this.data[i][i],retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],RAND_PART_A_STATE);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length-1;i<len;i++){DataUtilities.readFully(data[i][i],retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar==EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar==EOF_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentChar),retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentChar),retChar{
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==no_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar==retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_B_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=0){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.selector,retChar,true){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentChar,true){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.selectorMtf,true){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.selectorMtf,retChar,true){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==ROOT_BLOCK_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==ROOT_BLOCK_STATE||retChar==RAND_PART_C_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar<LAST_VALID_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null&&retChar<=LAST_VALID_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null&&retChar<LAST_VALID_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null||retChar<=LAST_VALID_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=LAST_VALID_BLOCK_STATE&&retChar<=LAST_VALID_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar<=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==START_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==START_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=read0;i<len;i++){DataUtilities.readFully(data[i][i],read0);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=retChar.length;i<len;i++){DataUtilities.readFully(data[i][i],read0);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(this.data[i][i],read0);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][0],read0);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar<EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar<DEFAULT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null||retChar<=DEFAULT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null&&retChar<DEFAULT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null&&retChar<=DEFAULT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=DEFAULT_BLOCK_STATE&&retChar<=DEFAULT_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar<=DEFAULT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar!=null?0:retChar.toCharArray()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.toCharArray()||retChar.toCharArray()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar==null?0:retChar.toCharArray()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentChar.toCharArray()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.toCharArray(),false){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.toCharArray(),true){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE||retChar!=null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar==null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar!=null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(seqToUnseq,this.seqToUnseq){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.seqToUnseq,0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.seqToUnseq,this.blockSize100k){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.seqToUnseq),this.blockSize100k){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar>BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar>=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray2d.length;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray.length;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray2.length;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray2d;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=this.seqToUnseq;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToOffs;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar!=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar!=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar!=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar,0,retChar.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar,1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar,0,retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.length,0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar=='n'||retChar!='r'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar=='n'||retChar=='r'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!='n'||retChar=='r'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar=='n'||retChar=='r'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar=='n'||retChar=='r'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar=='n'||retChar=='r'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=retChar.length()+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=this.retChar.length();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=this.seqToUnseq.length();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=this.currentChar.length();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=retChar.length()*2;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=this.recvDecodingTables.length();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.data.length;i<len;i++){DataUtilities.readFully(data[i][i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(this.data[i][i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i][rtChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i][len]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][0][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[0][i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar>=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=0||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=0||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=0||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0&&retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar!=EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar!=EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null||retChar!=EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar!=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null||retChar==EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_A_STATE||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<ROOT_BLOCK_STATE||retChar==ROOT_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar==RAND_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length-1;returnlen;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length;returnretChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy;returnlen;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length;returnlen+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length;returnlen-1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200charlen=getAndMoveToFrontDecode_yy.length;returnlen;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0){switch(this.currentChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF){switch(this.currentChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentChar,retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF){switch(this.currentChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=1){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<1){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==1){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null){switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF){switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE){switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null){switch(this.currentChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=null){switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null){switch(this.currentChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,0,retChar.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,0,retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,0,this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,2){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar>RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar>=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar!=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar!=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar!=no_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF&&retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==ROOT_BLOCK_STATE||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=retChar){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null||retChar!=EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null||retChar==EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF||retChar!=retChar){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0,this.currentChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0,retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=read0;i<len;i++){DataUtilities.readFully(data[i][i],read0,retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(this.data[i][i],read0,retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length-1;i<len;i++){DataUtilities.readFully(data[i][i],read0,retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0,currentChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=START_BLOCK_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=RAND_PART_A_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==ROOT_BLOCK_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==START_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToUnseq;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray.length;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray2d.length;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=temp_charArray2.length;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToUnseq;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==nu
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length();returnretChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length();returnlen-1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200charlen=getAndMoveToFrontDecode_yy.length();returnlen;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length()-1;returnlen;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length();returnlen+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+4;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+3;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+6;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.seqToUnseq+retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar.length,false){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState,false){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(resultChar,true){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar},false){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar!=null&&retChar.length>0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar!=null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar==null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length+1;returnlen;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length-2;returnlen;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar!=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar!=RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToLength;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToArray;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToCharArray;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=currentState){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=currentState){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<no_rAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==currentState.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar!=EOF_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar!=EOF_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState,true){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(resultChar,false){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar.length,true){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToLength;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToInt;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==INT_BLOCK_STATE||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=ROOT_BLOCK_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar=='n'||retChar=='r'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar=='r'||retChar=='n'||retChar=='r'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_0();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar!=EOF_BLOCK){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=ROOT_BLOCK_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.seqToUnseq),false){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF_PART_A_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE&&retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.currentState-1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.currentState+1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar!=ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar!=ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=ROOT_BLOCK_STATE||retChar==ROOT_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==ROOT_BLOCK_STATE||retChar==ROOT_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_A_STATE||retChar!=ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar!=ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==BZip2Compressor.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==BZip2Compressor.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200inti=0,len=data.length;i<len;i++){if(retChar==0){return-1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){if(retChar==-1){return-1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar>1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar==null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar!=RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_A_STATE||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar!=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar>RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=(this.currentChar>=NO_RAND_PART_A_STATE)?0:this.currentChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=(this.currentChar>=NO_RAND_PART_A_STATE)?this.currentChar:0;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=(this.currentChar>=NO_RAND_PART_A_STATE)?1:0;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=RETURN_BLOCK_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==BZip2CompressorInputStream.DEFAULT||retChar==RETURN_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar<=DEFAULT_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar==DEFAULT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar<=DEFAULT_ROOT_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE){switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF){switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar==EOF_BLOCK){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<NO_RAND_PART_A_STATE||retChar==null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_B_STATE||retChar!=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState&retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState&retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState&EOF_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState&retChar>=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState&retChar!=0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.charAt(0)||retChar.charAt(0)=='-'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.charAt(0)||retChar.charAt(0)!='-'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.charAt(0)||retChar.charAt(1)=='-'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.charAt(0)||retChar.charAt(1)!='-'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=ROOT_BLOCK_STATE||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar>=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=NO_RAND_PART_A_STATE||retChar==RAND_PART_C_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=retChar.length()-1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=retChar.length()+2;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy&retChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_loop;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=this.read0;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=getAndMoveToFrontDecode_yy(currentState);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0||retChar>=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar>=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar!=null){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=0||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar+1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar)+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=INT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=INT_BLOCK_STATE||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState&START_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState&START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar=='.'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar=='.'||retChar==':'){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=data.length;i<len;i++){DataUtilities.readFully(data[i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE||retChar==RAND_PART_C_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>retChar){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState&retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState&retChar!=0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0,retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read1,retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar==LAST_VALID_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar>=LAST_VALID_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar==EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState.toCharArray()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar.toCharArray()&0xff){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==START_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=NO_RAND_PART_A_STATE||retChar>START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=EOF||retChar>START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=data.length;i<len;i++){DataUtilities.readFully(data[i][i],retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.read0();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.read(retChar);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+4;break;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy+3;break;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToLength;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToUnseq;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=nu
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToInt;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=this.seqToUnseq;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=data.length;i<len;i++){DataUtilities.readFully(data[i][i][retChar]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<ROOT_BLOCK_STATE||retChar>RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_PART_A_STATE||retChar==0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_PART_A_STATE||retChar==null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=EOF||retChar>=RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar>=RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==ROOT_BLOCK_STATE||retChar==ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar-=this.currentChar;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=this.currentChar*2;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<1){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.read();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.read(this);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy.read(0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==currentState||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_PART_A_STATE||retChar==retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_PART_A_STATE||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.currentState&START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.currentState&START_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(retChar,this.currentState&RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(this.currentState!=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==currentState){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(rtChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar<NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=RAND_PART_A_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState&START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentState||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentChar,0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==null||retChar==EOF){switch(this.currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(this.currentState==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i][0]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==INT_BLOCK_STATE||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=this.seqToUnseq;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqOffs;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d==null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar!=null){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=RAND_PART_A_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_B_STATE||retChar!=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar!=RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF&&retChar!=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar>0){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar!=no_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=EOF_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][0]);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==NO_RAND_PART_A_STATE||retChar==START_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=RAND_PART_A_STATE||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.seqToUnseq,this.retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=chars.length;i<len;i++){if(retChar==0){return-1;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=this.seqToUnseq;break;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy*2;break;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF_BLOCK_STATE||retChar==retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=ROOT_BLOCK_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==0||retChar==EOF_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<0||retChar==RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=START_BLOCK_STATE||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_A_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.seqToUnseq.toCharArray()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.in.toCharArray()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.retChar.toCharArray()){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=null&&retChar<=LAST_VALID_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar<=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.seqToUnseq,retChar.charAt(0)){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.seqToUnseq&retChar.charAt(0)){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=DETERMINISTIC_BLOCK){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=currentState||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar<=ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=RAND_PART_A_STATE||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=START_BLOCK_STATE||retChar>=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar>=START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState||retChar==NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState||retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=this.seqToUnseq;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=RAND_PART_A_STATE||retChar!=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read1);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==BZip2CompressorInputStream.DEFAULT||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=ROOT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(retChar!=null?retChar.length:retChar.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200switch(this.currentChar.length){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqOffs;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToUnseq_len;i<len;++i){char[][]temp_charArray2d=getAndMoveToFrontDecode_yy
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200Switch(this.currentState||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RETURN_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy()+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==EOF||retChar==RESULT_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],currentChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=null&&retChar<=LAST_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<START_BLOCK_STATE||retChar>NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==ROOT_BLOCK_STATE||retChar<=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=START_BLOCK_STATE||retChar==ROOT_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=START_BLOCK_STATE||retChar!=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=NO_RAND_PART_A_STATE&&retChar==START_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=no_rAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==no_rAND_PART_A_STATE||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqToOffs;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=this.seqOffs;i<len;++i){char[]temp_charArray2d=getAndMoveToFrontDecode_yy;if(temp_charArray2d!=null){return
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=DEFAULT_BLOCK_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=DETERMINISTIC_BLOCK_STATE||retChar==BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF_CHAR||retChar>=EOF_CHAR){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF_CHAR||retChar>START_BLOCK_STATE){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=(this.currentChar>=START_BLOCK_STATE)?this.currentChar:0;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=(this.currentChar>=START_PART_A_STATE)?this.currentChar:0;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200finalintretChar=(this.currentState>>START_BLOCK_STATE)?this.currentChar:0;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_B_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar=='.'||retChar==','){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar>EOF){switch(currentState){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=NO_RAND_PART_A_STATE||retChar==EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar>=RAND_PART_B_STATE||retChar>=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_B_STATE||retChar>=NO_RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<=DETERMINISTIC_BLOCK_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200intlen=getAndMoveToFrontDecode_yy.length-4;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF||retChar>BZip2CompressorInputStream.DEFAULT){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar==RAND_PART_A_STATE||retChar!=EOF){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar<EOF){switch(retChar){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0,this.retChar);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0,RAND_PART_A_STATE);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0,target);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200for(inti=0,len=data.length;i<len;i++){DataUtilities.readFully(data[i][i],read0,RAND_PART_B_STATE);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=START_BLOCK_STATE||retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=ROOT_BLOCK_STATE&&retChar==RAND_PART_A_STATE){
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200retChar=getAndMoveToFrontDecode_yy(retChar,this.seqToUnseq);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java200if(retChar!=RAND_PART_A_STATE||retChar==NO_RAND_PART_A_STATE){
