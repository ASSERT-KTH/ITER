bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode();  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode();	  retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(START_BLOCK_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(START_BLOCK_STATE);	  retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(no_rAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(no_rAND_PART_A_STATE);	  retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode(START_BLOCK_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode(START_BLOCK_STATE);	  retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy  +  1;	  retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  |  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  |  START_BLOCK_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy  |  START_BLOCK_STATE;	  retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy;	  retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy  +  2;	  retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE!=  NO_RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE!=  NO_RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE!=  NO_RAND_PART_B_STATE)  {  break;  }	  if(noRAND_PART_A_STATE!=    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE!=  NO_RAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE!=  NO_RAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE!=  NO_RAND_PART_C_STATE)  {  break;  }	  if(noRAND_PART_A_STATE!=    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE!=  RAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE!=  RAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE!=  RAND_PART_C_STATE)  {  break;  }	  if(noRAND_PART_A_STATE!=    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE!=  RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE!=  RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE!=  RAND_PART_B_STATE)  {  break;  }	  if(noRAND_PART_A_STATE!=    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  retChar    =    getAndMoveToFrontDecode_yy(su_z);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_ch2);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(su_ch2);	  retChar    =    getAndMoveToFrontDecode_yy(su_z);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_z,  su_rNToGo);  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_z,  su_rNToGo);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(su_z,  su_rNToGo);	  retChar    =    getAndMoveToFrontDecode_yy(su_z);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(currentChar);  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(currentChar);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(currentChar);	  retChar    =    getAndMoveToFrontDecode_yy(su_z);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_z  +  1);  [CE]  illegal  start  of  type  [FE]                            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_z  +  1);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(su_z  +  1);	  retChar    =    getAndMoveToFrontDecode_yy(su_z);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  retChar  =  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  NO_RAND_PART_A_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  NO_RAND_PART_A_STATE;	  retChar    =    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  retChar  =  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  RAND_PART_A_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  RAND_PART_A_STATE;	  retChar    =    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  retChar  =  NO_RAND_PART_B_STATE;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  NO_RAND_PART_B_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  NO_RAND_PART_B_STATE;	  retChar    =    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  retChar  =  START_BLOCK_STATE  +  1;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  START_BLOCK_STATE  +  1;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  START_BLOCK_STATE  +  1;	  retChar    =    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  retChar  =  RAND_PART_B_STATE;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  RAND_PART_B_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  RAND_PART_B_STATE;	  retChar    =    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	char  retChar  =  getAndMoveToFrontDecode_yy;	  int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy  +  1;	  int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  |  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  |  START_BLOCK_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy  |  START_BLOCK_STATE;	  int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_yy;	  int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  +  2;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy  +  2;	  int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  if(noRAND_PART_C_STATE  ==  NO_RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_C_STATE  ==  NO_RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_C_STATE  ==  NO_RAND_PART_B_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  ||(noRAND_PART_A_STATE  ==  NO_RAND_PART_B_STATE  &&  noRAND_PART_A_STATE!=  START_BLOCK_STATE))  {  break;  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  ||(noRAND_PART_A_STATE  ==  NO_RAND_PART_B_STATE  &&  noRAND_PART_A_STATE!=  START_BLOCK_STATE))  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	||(noRAND_PART_A_STATE  ==  NO_RAND_PART_B_STATE  &&  noRAND_PART_A_STATE!=  START_BLOCK_STATE))  {  break;  }	  if(noRAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
30	[BUG]  [BUGGY]  if(noRAND_PART_B_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_B_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_B_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
31	[BUG]  [BUGGY]  if(noRAND_PART_B_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_B_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_B_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  if(no_RAND_PART_A_STATE  ==  NO_RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_A_STATE  ==  NO_RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_A_STATE  ==  NO_RAND_PART_B_STATE)  {  break;  }	  if(no_rAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  if(no_rAND_PART_A_STATE!=  NO_RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_rAND_PART_A_STATE!=  NO_RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_rAND_PART_A_STATE!=  NO_RAND_PART_B_STATE)  {  break;  }	  if(no_rAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  if(no_rAND_PART_A_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_rAND_PART_A_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_rAND_PART_A_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }	  if(no_rAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  ||(no_rAND_PART_A_STATE  ==  NO_RAND_PART_B_STATE  &&  no_rAND_PART_A_STATE!=  START_BLOCK_STATE))  {  break;  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  ||(no_rAND_PART_A_STATE  ==  NO_RAND_PART_B_STATE  &&  no_rAND_PART_A_STATE!=  START_BLOCK_STATE))  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	||(no_rAND_PART_A_STATE  ==  NO_RAND_PART_B_STATE  &&  no_rAND_PART_A_STATE!=  START_BLOCK_STATE))  {  break;  }	  if(no_rAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    NO_RAND_PART_A_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
37	[BUG]  [BUGGY]  ||(noRAND_PART_A_STATE  ==  NO_RAND_PART_A_STATE  &&  getAndMoveToFrontDecode_yy)!=  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  ||(noRAND_PART_A_STATE  ==  NO_RAND_PART_A_STATE  &&  getAndMoveToFrontDecode_yy)!=  0)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	||(noRAND_PART_A_STATE  ==  NO_RAND_PART_A_STATE  &&  getAndMoveToFrontDecode_yy)!=  0)  {  break;  }	  if(noRAND_PART_A_STATE    ==    NO_RAND_PART_A_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
38	[BUG]  [BUGGY]  if(no_RAND_PART_A_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_A_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_A_STATE  ==  NO_RAND_PART_C_STATE)  {  break;  }	  if(no_RAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  if(no_RAND_PART_A_STATE!=  START_BLOCK_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_A_STATE!=  START_BLOCK_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_A_STATE!=  START_BLOCK_STATE)  {  break;  }	  if(no_RAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  if(no_RAND_PART_A_STATE  ==  RAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_A_STATE  ==  RAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_A_STATE  ==  RAND_PART_C_STATE)  {  break;  }	  if(no_RAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  if(no_RAND_PART_C_STATE  ==  START_BLOCK_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_C_STATE  ==  START_BLOCK_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_C_STATE  ==  START_BLOCK_STATE)  {  break;  }	  if(no_RAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
42	[BUG]  [BUGGY]  if(no_RAND_PART_A_STATE!=  NO_RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_A_STATE!=  NO_RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_A_STATE!=  NO_RAND_PART_B_STATE)  {  break;  }	  if(no_RAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  if(no_RAND_PART_A_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_A_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_A_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }	  if(no_rAND_PART_A_STATE    ==    NO_RAND_PART_A_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
44	[BUG]  [BUGGY]  if(selector)  {  break;  }  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(selector)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(selector)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  if(seqToUnseq  ||  seqToUnseq)  {  break;  }  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(seqToUnseq  ||  seqToUnseq)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(seqToUnseq  ||  seqToUnseq)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
46	[BUG]  [BUGGY]  if(seqToUnseq  <  NO_RAND_PART_A_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(seqToUnseq  <  NO_RAND_PART_A_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(seqToUnseq  <  NO_RAND_PART_A_STATE)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
47	[BUG]  [BUGGY]  if(selectorMtf)  {  break;  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(selectorMtf)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(selectorMtf)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
48	[BUG]  [BUGGY]  if(seqToUnseq!=  null)  {  break;  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(seqToUnseq!=  null)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(seqToUnseq!=  null)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  if(!seqToUnseq)  {  break;  }  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(!seqToUnseq)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(!seqToUnseq)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  if(inUse  ||  inUse)  {  break;  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(inUse  ||  inUse)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(inUse  ||  inUse)  {  break;  }	  if(inUse)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  if(!inUse)  {  break;  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(!inUse)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(!inUse)  {  break;  }	  if(inUse)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  if(no_rAND_PART_A_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_rAND_PART_A_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_rAND_PART_A_STATE)  {  break;  }	  if(inUse)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  if(no_rAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_rAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_rAND_PART_C_STATE)  {  break;  }	  if(inUse)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE  ==  RAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE  ==  RAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE  ==  RAND_PART_C_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  if(noRAND_PART_C_STATE  ==  START_BLOCK_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_C_STATE  ==  START_BLOCK_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_C_STATE  ==  START_BLOCK_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
56	[BUG]  [BUGGY]  noRAND_PART_A_STATE  =  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  noRAND_PART_A_STATE  =  START_BLOCK_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	noRAND_PART_A_STATE  =  START_BLOCK_STATE;	  if(noRAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  setupNoRandPartB();  break;  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  setupNoRandPartB();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	setupNoRandPartB();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  setupNoRandPartA();  break;  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  setupNoRandPartA();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	setupNoRandPartA();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
59	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy();  setupNoRandPartB();  break;  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy();  setupNoRandPartB();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy();  setupNoRandPartB();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy();  setupNoRandPartC();  break;  [CE]  illegal  start  of  type  [FE]                            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy();  setupNoRandPartC();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy();  setupNoRandPartC();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy;  break;  [CE]  illegal  start  of  type  [FE]                              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy;  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy;  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy;  setupNoRandPartB();  break;  [CE]  illegal  start  of  type  [FE]                                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy;  setupNoRandPartB();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy;  setupNoRandPartB();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy;  setupNoRandPartA();  break;  [CE]  illegal  start  of  type  [FE]                                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy;  setupNoRandPartA();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy;  setupNoRandPartA();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  if(no_rAND_PART_A_STATE  ==  RAND_PART_C_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_rAND_PART_A_STATE  ==  RAND_PART_C_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_rAND_PART_A_STATE  ==  RAND_PART_C_STATE)  {  break;  }	  if(no_rAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
65	[BUG]  [BUGGY]  if(no_rAND_PART_A_STATE!=  START_BLOCK_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_rAND_PART_A_STATE!=  START_BLOCK_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_rAND_PART_A_STATE!=  START_BLOCK_STATE)  {  break;  }	  if(no_rAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
66	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(r);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(r);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(r);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(currentChar);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(currentChar);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(currentChar);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(0);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(0);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(0);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(RAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(RAND_PART_A_STATE);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
70	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(no_rAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(no_rAND_PART_A_STATE);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
71	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(RAND_PART_C_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(RAND_PART_C_STATE);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  char  retChar  =  getAndMoveToFrontDecode_yy();  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	char  retChar  =  getAndMoveToFrontDecode_yy();	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy(su_z);	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
74	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(START_BLOCK_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy(START_BLOCK_STATE);	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
76	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(no_rAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy(no_rAND_PART_A_STATE);	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
77	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode();  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode();	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
78	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(NO_RAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(NO_RAND_PART_A_STATE);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
79	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(noRAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(noRAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(noRAND_PART_A_STATE);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
80	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(NO_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(NO_RAND_PART_B_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(NO_RAND_PART_B_STATE);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
81	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
82	[BUG]  [BUGGY]  if(seqToUnseq  ==  null)  {  break;  }  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(seqToUnseq  ==  null)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(seqToUnseq  ==  null)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
83	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy  +  4;	  retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
84	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  3;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  3;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy  +  3;	  retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
85	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  6;  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  +  6;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy  +  6;	  retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
86	[BUG]  [BUGGY]  if(inUse)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(inUse)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(inUse)  {  throw  new  IllegalStateException( " ");  }	  if(inUse)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  if(this.inUse)  {  break;  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(this.inUse)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(this.inUse)  {  break;  }	  if(inUse)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
88	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(in,  0,  retChar,  1,  inUse);  break;  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(inUse)  {  System.arraycopy(in,  0,  retChar,  1,  inUse);  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(inUse)  {  System.arraycopy(in,  0,  retChar,  1,  inUse);  break;  }	  if(inUse)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
89	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_char;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_char;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_char;	  int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
90	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy  +  4;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy  +  4;	  int    retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
91	[BUG]  [BUGGY]  case  NO_RAND_PART_A_STATE:  setupNoRandPartB();  break;  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  case  NO_RAND_PART_A_STATE:  setupNoRandPartB();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	case  NO_RAND_PART_A_STATE:  setupNoRandPartB();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
92	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();  break;  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	case  NO_RAND_PART_B_STATE:  setupNoRandPartB();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
93	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy();  break;  [CE]  illegal  start  of  type  [FE]                          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
94	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  setupNoRandPartA();  break;  [CE]  illegal  start  of  type  [FE]                            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  case  START_BLOCK_STATE:  setupNoRandPartA();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	case  START_BLOCK_STATE:  setupNoRandPartA();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
95	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy;  break;  [CE]  illegal  start  of  type  [FE]                              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy;  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy;  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  case  RAND_PART_A_STATE:  setupNoRandPartB();  break;  [CE]  illegal  start  of  type  [FE]                                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  case  RAND_PART_A_STATE:  setupNoRandPartB();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	case  RAND_PART_A_STATE:  setupNoRandPartB();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
97	[BUG]  [BUGGY]  case  RAND_PART_A_STATE:  setupRandPartB();  break;  [CE]  illegal  start  of  type  [FE]                                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  case  RAND_PART_A_STATE:  setupRandPartB();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	case  RAND_PART_A_STATE:  setupRandPartB();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
98	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(null);  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(null);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(null);	  retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
99	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(no_rAND_part_A_STATE);  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(no_rAND_part_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(no_rAND_part_A_STATE);	  retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
100	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy()  +  1;  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy()  +  1;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy()  +  1;	  retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
101	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE  ==  RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE  ==  RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE  ==  RAND_PART_B_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
102	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE!=  NO_RAND_PART_A_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE!=  NO_RAND_PART_A_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE!=  NO_RAND_PART_A_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    NO_RAND_PART_A_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
103	[BUG]  [BUGGY]  if(noRAND_PART_C_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_C_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_C_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    NO_RAND_PART_A_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
104	[BUG]  [BUGGY]  retChar  =  NO_RAND_PART_C_STATE;  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  NO_RAND_PART_C_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  NO_RAND_PART_C_STATE;	  retChar    =    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
105	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy()  +  1;  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy()  +  1;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy()  +  1;	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
106	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(null);  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(null);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy(null);	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
107	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_char();  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_char();  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_char();	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
108	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(in,  0,  retChar,  1,  inUse);  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(inUse)  {  System.arraycopy(in,  0,  retChar,  1,  inUse);  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(inUse)  {  System.arraycopy(in,  0,  retChar,  1,  inUse);  }	  if(inUse)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
109	[BUG]  [BUGGY]  if(inUse)  {  System.arraycopy(in,  0,  cftab,  0,  inUse);  break;  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(inUse)  {  System.arraycopy(in,  0,  cftab,  0,  inUse);  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(inUse)  {  System.arraycopy(in,  0,  cftab,  0,  inUse);  break;  }	  if(inUse)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
110	[BUG]  [BUGGY]  if(no_RAND_PART_B_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_B_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_B_STATE  ==  NO_RAND_PART_A_STATE)  {  break;  }	  if(no_rAND_PART_A_STATE    ==    NO_RAND_PART_A_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
111	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(suffix);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(suffix);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(suffix);	  retChar    =    getAndMoveToFrontDecode_yy(su_z);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
112	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_z,  su_ch2);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_z,  su_ch2);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(su_z,  su_ch2);	  retChar    =    getAndMoveToFrontDecode_yy(su_z);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
113	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_z,  currentChar);  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(su_z,  currentChar);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(su_z,  currentChar);	  retChar    =    getAndMoveToFrontDecode_yy(su_z);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
114	[BUG]  [BUGGY]  if(seqToUnseq  ==  NO_RAND_PART_A_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(seqToUnseq  ==  NO_RAND_PART_A_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(seqToUnseq  ==  NO_RAND_PART_A_STATE)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
115	[BUG]  [BUGGY]  if(seqToUnseq  ||  inUse)  {  break;  }  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(seqToUnseq  ||  inUse)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(seqToUnseq  ||  inUse)  {  break;  }	  if(seqToUnseq)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
116	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.read();  [CE]  illegal  start  of  type  [FE]                  IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.read();  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.read();	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
117	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(no_rAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                    IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.get(no_rAND_PART_B_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.get(no_rAND_PART_B_STATE);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
118	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.charAt(retChar);  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy.charAt(retChar);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy.charAt(retChar);	  retChar    =    getAndMoveToFrontDecode_yy.get(retChar);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
119	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_B_STATE;  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_B_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy  ||  getAndMoveToFrontDecode_B_STATE;	  retChar    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
120	[BUG]  [BUGGY]  if(noRAND_PART_A_STATE  >=  NO_RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]                IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_A_STATE  >=  NO_RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_A_STATE  >=  NO_RAND_PART_B_STATE)  {  break;  }	  if(noRAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
121	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  setupNoRandPartB();  break;  [CE]  illegal  start  of  type  [FE]                      IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  case  START_BLOCK_STATE:  setupNoRandPartB();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	case  START_BLOCK_STATE:  setupNoRandPartB();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
122	[BUG]  [BUGGY]  case  EOF:  setupNoRandPartA_STATE();  break;  [CE]  illegal  start  of  type  [FE]                        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  case  EOF:  setupNoRandPartA_STATE();  break;  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	case  EOF:  setupNoRandPartA_STATE();  break;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
123	[BUG]  [BUGGY]  if(no_rAND_PART_A_STATE  ==  RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_rAND_PART_A_STATE  ==  RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_rAND_PART_A_STATE  ==  RAND_PART_B_STATE)  {  break;  }	  if(no_rAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
124	[BUG]  [BUGGY]  if(no_RAND_PART_A_STATE  ==  RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]          IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_A_STATE  ==  RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_A_STATE  ==  RAND_PART_B_STATE)  {  break;  }	  if(no_RAND_PART_A_STATE    ==    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
125	[BUG]  [BUGGY]  if(noRAND_PART_C_STATE!=  START_BLOCK_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(noRAND_PART_C_STATE!=  START_BLOCK_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(noRAND_PART_C_STATE!=  START_BLOCK_STATE)  {  break;  }	  if(noRAND_PART_A_STATE!=    START_BLOCK_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
126	[BUG]  [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(suffix);  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  int  retChar  =  getAndMoveToFrontDecode_yy(suffix);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	int  retChar  =  getAndMoveToFrontDecode_yy(suffix);	  int    retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
127	[BUG]  [BUGGY]  if(no_RAND_PART_C_STATE  ==  NO_RAND_PART_B_STATE)  {  break;  }  [CE]  illegal  start  of  type  [FE]        IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  if(no_RAND_PART_C_STATE  ==  NO_RAND_PART_B_STATE)  {  break;  }  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	if(no_RAND_PART_C_STATE  ==  NO_RAND_PART_B_STATE)  {  break;  }	  if(no_rAND_PART_A_STATE    ==    NO_RAND_PART_B_STATE)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
128	[BUG]  [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(no_rAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]            IOException    [CONTEXT]    case  RAND_PART_C_STATE:  setupRandPartC();  break;  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  setupNoRandPartB();    [BUGGY]  retChar  =  getAndMoveToFrontDecode_yy(no_rAND_PART_B_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  setupNoRandPartC();  break;  default:  throw  new  IllegalStateException();  }  return  retChar;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentChar  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  retChar  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	0.7071067811865475	223	223	1	replace	retChar  =  getAndMoveToFrontDecode_yy(no_rAND_PART_B_STATE);	  retChar    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
