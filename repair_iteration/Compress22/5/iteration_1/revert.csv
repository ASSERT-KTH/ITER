projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=in;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2InputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=decompressConcatenated;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,DECOMPRESSION);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.parseInt(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.MAX_VALUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.getBytes());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in.getBytes());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in,DECOMPRESSION);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in,1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(Integer.MAX_VALUE);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=(BZip2CompressorInputStream)in.read();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,null);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in!=null){this.in=decompressConcatenated;}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in!=null){this.in=decompressConcatenated;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in!=null){this.in=decompressConcatenated;}else{System.arraycopy(in,0,this.in,in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in!=null){this.in=decompressConcatenated;}else{in.skipChildren();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in!=null){this.in=decompressConcatenated;}else{System.arraycopy(in,0,this.in,0,in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in!=null){this.in=decompressConcatenated;}else{System.arraycopy(in,0,this.in,1,in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in.getBytes(),decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in.getBytes(),1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in.getBytes(),DECOMPRESSION);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in.getBytes(),in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in.getBytes(),4);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in.getBytes(),16);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,decompressConcatenated,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,decompressConcatenated,in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,decompressConcatenated,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,decompressConcatenated,false);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,decompressConcatenated,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,decompressConcatenated,1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,DECOMPRESSION,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,DECOMPRESSION+1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,DECOMPRESSION),decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.parseInt(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=in.parseInt(Integer.MAX_VALUE);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.parseInt(in,1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.parseInt(in)+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.parseInt(in,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.parseInt(in,DECOMPRESSION);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=(in==null)?Integer.MAX_VALUE:Integer.MIN_VALUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=(in==null)?Integer.MAX_VALUE:Integer.MAX_VALUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=(in!=null)?Integer.MAX_VALUE:Integer.MIN_VALUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=(in!=null)?Integer.MAX_VALUE:Integer.MAX_VALUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.MAX_VALUE|Integer.MAX_VALUE;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,false);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.getBytes(),decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.getBytes(),1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.getBytes(),DECOMPRESSION);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.getBytes(),in.length);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in,in.getBytes());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.getBytes(),4);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2InputStream(in,decompressConcatenated,in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2InputStream(in,decompressConcatenated,0);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2InputStream(in,decompressConcatenated,blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2InputStream(in,decompressConcatenated,cftab);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2InputStream(in,decompressConcatenated,false);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2InputStream(in,decompressConcatenated,1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in.getBytes()+1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.MAX_VALUE+1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.MAX_VALUE+in.readInt();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.parseInt(in,16);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in!=null){this.in=decompressConcatenated;}else{System.arraycopy(in,0,this.in,in.length);System.arraycopy(in,0,in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in!=null){this.in=decompressConcatenated;}else{System.arraycopy(in,0,this.in,1,in.length);System.arraycopy(in,0,in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130InputStreamin=getAndMoveToFrontDecode_yy();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130super(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130in=newBZip2CompressorInputStream(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.readLine());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.read());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.getBytes("UTF-8"));
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(Integer.MIN_VALUE);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,1);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=in.toHexString();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.MAX_VALUE-1;
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.MAX_VALUE-in.readInt();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.MAX_VALUE+in.readLine();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2InputStream(in,decompressConcatenated,this.blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toString(in.getBytes(),in.read());
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,decompressConcatenated,this.blockRandomised);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in==null){this.in=decompressConcatenated;}else{in.close();}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in==null){this.in=decompressConcatenated;}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130if(in==null){this.in=decompressConcatenated;}else{System.arraycopy(in,0,this.in,in.length);}
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.parseInt(in).intValue();
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=newBZip2CompressorInputStream(in,this.decompressConcatenated);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.getBytes(),16);
projects/Compress22/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java130this.in=Integer.toHexString(in.getBytes()+1);
