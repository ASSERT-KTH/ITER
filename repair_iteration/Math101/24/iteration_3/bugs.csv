bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('.',  pos);  [CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('.',  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('.',  pos);	  int    index    =    source.lastIndexOf('.');    	non-compiled	[CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)	67	None	replace
2	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('.');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.indexOf('.');	  int    index    =    source.lastIndexOf('.');    	compilable	  [FE]  StringIndexOutOfBoundsException  	67	26	replace
3	[BUG]  [BUGGY]  int  index  =  source.indexOf('.');  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('.');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('.');	  int    index    =    source.lastIndexOf('.');    	compilable	  [FE]  StringIndexOutOfBoundsException  	67	26	replace
4	[BUG]  [BUGGY]  char  index  =  source.lastIndexOf('.');  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.lastIndexOf('.');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.lastIndexOf('.');	  int    index    =    source.lastIndexOf('.');    	non-compiled	[CE]  possible  loss  of  precision	67	None	replace
5	[BUG]  [BUGGY]  String  ret  =  source.charAt(source.getIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  ret  =  source.charAt(source.getIndex());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(source.getIndex());	  char    ret    =    source.charAt(source.getIndex());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
6	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  source.getIndex());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  source.getIndex());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  source.getIndex());	  char    ret    =    source.charAt(source.getIndex());    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
7	[BUG]  [BUGGY]  String  index  =  source.getIndex();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  index  =  source.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  index  =  source.getIndex();	  char    index    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
8	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex();  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    -    1;    char    ret    =    source.charAt(pos.getIndex()    -    1);    Integer    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	58	None	replace
9	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  1);  Integer  index  =  pos.getIndex();  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  1);  Integer  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  -  1);  Integer  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    -    1;    char    ret    =    source.charAt(pos.getIndex()    -    1);    Integer    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	58	None	replace
10	[BUG]  [BUGGY]  int  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex();  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    -    1;    char    ret    =    source.charAt(pos.getIndex()    -    1);    Integer    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	58	None	replace
11	[BUG]  [BUGGY]  String  index  =  source.indexOf('  ');  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  index  =  source.indexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  index  =  source.indexOf('  ');	  int    index    =    source.indexOf('    ');    char    index    =    source.indexOf('    ');    	non-compiled	[CE]  incompatible  types	55	None	replace
12	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('n');  int  index  =  source.lastIndexOf('n');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('n');  int  index  =  source.lastIndexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('n');    int  index  =  source.lastIndexOf('n');	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	22	None	add
13	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('n');  Int  index  =  source.lastIndexOf('n');  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('n');  Int  index  =  source.lastIndexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('n');    Int  index  =  source.lastIndexOf('n');	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
14	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('n');  char  ret  =  source.lastIndexOf('n');  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('n');  char  ret  =  source.lastIndexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('n');    char  ret  =  source.lastIndexOf('n');	  	non-compiled	[CE]  possible  loss  of  precision	22	None	add
15	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  pos,  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(0,  pos,  pos);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(0,  pos,  pos);	  char    ret    =    source.charAt(0,    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	28	None	replace
16	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(0,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(0,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(0,    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	28	None	replace
17	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  pos,  pos.intValue());  [CE]  cannot  find  symbol  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(0,  pos,  pos.intValue());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(0,  pos,  pos.intValue());	  char    ret    =    source.charAt(0,    pos);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
18	[BUG]  [BUGGY]  int  index  =  source.getIndex();  int  index  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex();  int  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex();  int  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    +    1;    int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
19	[BUG]  [BUGGY]  int  index  =  pos.getIndex();  int  index  =  pos.getIndex();  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.getIndex();  int  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex();  int  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    +    1;    int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	11	None	replace
20	[BUG]  [BUGGY]  int  index  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    -    1;    char    ret    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
21	[BUG]  [BUGGY]  int  n  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  n  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  n  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    -    1;    char    ret    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
22	[BUG]  [BUGGY]  int  n  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  n  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex()  -  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  n  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex()  -  1);	  int    index    =    pos.getIndex()    -    1;    char    ret    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
23	[BUG]  [BUGGY]  Integer  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Integer  n  =  source.length();  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Integer  n  =  source.length();	  int    n    =    source.length()    -    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	51	None	replace
24	[BUG]  [BUGGY]  int  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER,  0);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition,String,int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER,  0);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER,  0);	  int    index    =    source.indexOf(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition,String,int)	2	None	replace
25	[BUG]  [BUGGY]  char  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition,String)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER);	  int    index    =    source.indexOf(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition,String)	2	None	replace
26	[BUG]  [BUGGY]  int  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER,  n);  [CE]  cannot  find  symbol  n  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER,  n);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER,  n);	  int    index    =    source.indexOf(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  n	2	None	replace
27	[BUG]  [BUGGY]  int  index  =  source.indexOf(ret,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  ret  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf(ret,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(ret,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  int    index    =    source.indexOf(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  ret	2	None	replace
28	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  0);  char  ret  =  source.charAt(pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  0);  char  ret  =  source.charAt(pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  0);  char  ret  =  source.charAt(pos);	  int    index    =    source.indexOf('    ');    char    ret    =    source.charAt(pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	10	None	replace
29	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ');  char  ret  =  source.charAt(pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ');  char  ret  =  source.charAt(pos  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ');  char  ret  =  source.charAt(pos  +  1);	  int    index    =    source.indexOf('    ');    char    ret    =    source.charAt(pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	10	None	replace
30	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  pos);  char  ret  =  source.charAt(pos);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)  [FE]                AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  pos);  char  ret  =  source.charAt(pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  pos);  char  ret  =  source.charAt(pos);	  int    index    =    source.indexOf('    ');    char    ret    =    source.charAt(pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)	10	None	replace
31	[BUG]  [BUGGY]  String  index  =  pos.getIndex()  +  1;  [CE]  incompatible  types  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  index  =  pos.getIndex()  +  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  index  =  pos.getIndex()  +  1;	  String    index    =    pos.getIndex();    	non-compiled	[CE]  incompatible  types	47	None	replace
32	[BUG]  [BUGGY]  String  ret  =  source.charAt(pos.getIndex());  [CE]  incompatible  types  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  ret  =  source.charAt(pos.getIndex());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(pos.getIndex());	  char    ret    =    source.charAt(position.getIndex());    	non-compiled	[CE]  incompatible  types	45	None	replace
33	[BUG]  [BUGGY]  char  c  =  source.charAt(pos.getIndex());  int  index  =  pos.getIndex();  [CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]                AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  c  =  source.charAt(pos.getIndex());  int  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  c  =  source.charAt(pos.getIndex());  int  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    +    1;    char    c    =    source.charAt(pos.getIndex()    +    1);    int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	15	None	replace
34	[BUG]  [BUGGY]  char  c  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;  [CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]                  AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  c  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  c  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;	  int    index    =    pos.getIndex()    +    1;    char    c    =    source.charAt(pos.getIndex()    +    1);    int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	15	None	replace
35	[BUG]  [BUGGY]  char  c  =  source.charAt(pos.getIndex());  [CE]  cannot  find  symbol  index  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  c  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  c  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    -    1;    char    c    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  index	20	None	replace
36	[BUG]  [BUGGY]  int  index  =  source.getIndex();  char  c  =  source.charAt(pos.getIndex());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex();  char  c  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex();  char  c  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    -    1;    char    c    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
37	[BUG]  [BUGGY]  int  index  =  pos.getIndex();  char  c  =  source.charAt(pos.getIndex());  [CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.getIndex();  char  c  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex();  char  c  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    -    1;    char    c    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	20	None	replace
38	[BUG]  [BUGGY]  String  ret  =  source.charAt(pos.getIndex())+  1;  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  ret  =  source.charAt(pos.getIndex())+  1;  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(pos.getIndex())+  1;	  char    ret    =    source.charAt(pos.getIndex())+    1;    	non-compiled	[CE]  incompatible  types	35	None	replace
39	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex())+  2;  [CE]  possible  loss  of  precision  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex())+  2;  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex())+  2;	  char    ret    =    source.charAt(pos.getIndex())+    1;    	non-compiled	[CE]  possible  loss  of  precision	35	None	replace
40	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  1)+  1;  [CE]  possible  loss  of  precision  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  1)+  1;  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  -  1)+  1;	  char    ret    =    source.charAt(pos.getIndex())+    1;    	non-compiled	[CE]  possible  loss  of  precision	35	None	replace
41	[BUG]  [BUGGY]  int  index  =  source.getIndex()  /  2;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex()  /  2;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  /  2;	  int    index    =    source.getIndex()    /    1;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
42	[BUG]  [BUGGY]  int  index  =  source.getIndex()  *  1;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex()  *  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  *  1;	  int    index    =    source.getIndex()    /    1;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
43	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.length()  -  1);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.length()  -  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos.length()  -  1);	  int    index    =    source.indexOf('n',    pos.length());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
44	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.length()  +  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.length()  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos.length()  +  1);	  int    index    =    source.indexOf('n',    pos.length());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
45	[BUG]  [BUGGY]  int  index  =  pos.indexOf('n',  source.length());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.indexOf('n',  source.length());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.indexOf('n',  source.length());	  int    index    =    source.indexOf('n',    pos.length());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
46	[BUG]  [BUGGY]  int  index  =  source.indexOf(source,  pos);  [CE]  no  suitable  method  found  for  indexOf(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf(source,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(source,  pos);	  int    index    =    source.indexOf(pos,    0);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,ParsePosition)	4	None	replace
47	[BUG]  [BUGGY]  char  index  =  source.indexOf(pos,  0);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition,int)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.indexOf(pos,  0);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf(pos,  0);	  int    index    =    source.indexOf(pos,    0);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition,int)	4	None	replace
48	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  +  2);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  +  2);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  +  2);	  char    ret    =    source.charAt(pos.getIndex()    -    2);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	26	None	replace
49	[BUG]  [BUGGY]  Char  index  =  source.indexOf('  ');  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Char  index  =  source.indexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  index  =  source.indexOf('  ');	  char    index    =    source.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
50	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  n);  [CE]  cannot  find  symbol  n  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  n);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  n);	  char    ret    =    source.charAt(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  n	33	None	replace
51	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  0);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  0);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  0);	  char    ret    =    source.charAt(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	33	None	replace
52	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [CE]  cannot  find  symbol  c  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  c);	  char    ret    =    source.charAt(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  c	33	None	replace
53	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  pos);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  pos);	  char    ret    =    source.charAt(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	33	None	replace
54	[BUG]  [BUGGY]  char  c  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex();  [CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  c  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  c  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    -    1;    char    c    =    source.charAt(pos.getIndex()    -    1);    int    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	19	None	replace
55	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ');  Int  index  =  source.indexOf('  ',  pos);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ');  Int  index  =  source.indexOf('  ',  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ');  Int  index  =  source.indexOf('  ',  pos);	  int    index    =    source.indexOf('    ');    Int    index    =    source.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
56	[BUG]  [BUGGY]  char  index  =  source.indexOf('  ');  Int  index  =  source.indexOf('  ');  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.indexOf('  ');  Int  index  =  source.indexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf('  ');  Int  index  =  source.indexOf('  ');	  int    index    =    source.indexOf('    ');    Int    index    =    source.indexOf('    ');    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
57	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  1);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  1);	  char    ret    =    source.charAt(pos,    0);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	34	None	replace
58	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  2);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  2);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  2);	  char    ret    =    source.charAt(pos,    0);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	34	None	replace
59	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  0,  pos.length);  [CE]  cannot  find  symbol  length  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  0,  pos.length);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  0,  pos.length);	  char    ret    =    source.charAt(pos,    0);    	non-compiled	[CE]  cannot  find  symbol  length	34	None	replace
60	[BUG]  [BUGGY]  String  ret  =  source.charAt(pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  ret  =  source.charAt(pos  +  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(pos  +  1);	  char    ret    =    source.charAt(pos    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	27	None	replace
61	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos  +  1,  pos.length());  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos  +  1,  pos.length());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos  +  1,  pos.length());	  char    ret    =    source.charAt(pos    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	27	None	replace
62	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  pos  +  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  pos  +  1);	  char    ret    =    source.charAt(pos    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	27	None	replace
63	[BUG]  [BUGGY]  char  ret  =  source.charAt(source.length());  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(source.length());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(source.length());	  char    ret    =    source.charAt(source.length()    -    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	56	None	replace
64	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex());  int  index  =  source.indexOf('n',  pos.getIndex());  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex());  int  index  =  source.indexOf('n',  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('n',    pos.getIndex());    int  index  =  source.indexOf('n',  pos.getIndex());	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	70	None	add
65	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex());  Int  index  =  source.indexOf('n',  pos.getIndex());  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex());  Int  index  =  source.indexOf('n',  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('n',    pos.getIndex());    Int  index  =  source.indexOf('n',  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	70	None	add
66	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex());  int  index  =  source.indexOf('N',  pos.getIndex());  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex());  int  index  =  source.indexOf('N',  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('n',    pos.getIndex());    int  index  =  source.indexOf('N',  pos.getIndex());	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	70	None	add
67	[BUG]  [BUGGY]  int  index  =  source.getIndex()  +  1;  Int  index  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex()  +  1;  Int  index  =  pos.getIndex()  +  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  +  1;  Int  index  =  pos.getIndex()  +  1;	  int    index    =    pos.getIndex()    +    1;    Int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
68	[BUG]  [BUGGY]  int  index  =  pos.getIndex();  Int  index  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.getIndex();  Int  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex();  Int  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    +    1;    Int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
69	[BUG]  [BUGGY]  Int  index  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Int  index  =  pos.getIndex()  +  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Int  index  =  pos.getIndex()  +  1;	  int    index    =    pos.getIndex()    +    1;    Int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
70	[BUG]  [BUGGY]  int  index  =  pos.getIndex();  Int  index  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.getIndex();  Int  index  =  pos.getIndex()  +  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex();  Int  index  =  pos.getIndex()  +  1;	  int    index    =    pos.getIndex()    +    1;    Int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
71	[BUG]  [BUGGY]  int  index  =  source.indexOf('N',  pos);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('N',  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('N',  pos);	  int    index    =    source.indexOf('n');    int    index    =    source.indexOf('N');    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)	54	None	replace
72	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  /  1);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  /  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  /  1);	  char    ret    =    source.charAt(pos.getIndex()    *    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	36	None	replace
73	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  *  2);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  *  2);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  *  2);	  char    ret    =    source.charAt(pos.getIndex()    *    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	36	None	replace
74	[BUG]  [BUGGY]  int  index  =  pos.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex();  char  ret  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    +    1;    char    ret    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	replace
75	[BUG]  [BUGGY]  int  n  =  pos.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  n  =  pos.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  n  =  pos.getIndex();  char  ret  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    +    1;    char    ret    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	replace
76	[BUG]  [BUGGY]  int  index  =  source.getIndex()  -  1;  Int  index  =  pos.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex()  -  1;  Int  index  =  pos.getIndex()  -  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  -  1;  Int  index  =  pos.getIndex()  -  1;	  int    index    =    pos.getIndex()    -    1;    Int    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
77	[BUG]  [BUGGY]  Int  index  =  source.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Int  index  =  source.getIndex()  -  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Int  index  =  source.getIndex()  -  1;	  int    index    =    pos.getIndex()    -    1;    Int    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
78	[BUG]  [BUGGY]  int  index  =  pos.getIndex();  Int  index  =  source.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.getIndex();  Int  index  =  source.getIndex()  -  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex();  Int  index  =  source.getIndex()  -  1;	  int    index    =    pos.getIndex()    -    1;    Int    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
79	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('.');  int  index  =  source.lastIndexOf('.');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('.');  int  index  =  source.lastIndexOf('.');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('.');    int  index  =  source.lastIndexOf('.');	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	66	None	add
80	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('.');  int  index  =  source.lastIndexOf('.').lastIndexOf('.');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('.');  int  index  =  source.lastIndexOf('.').lastIndexOf('.');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('.');    int  index  =  source.lastIndexOf('.').lastIndexOf('.');	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	66	None	add
81	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('.');  Int  index  =  source.lastIndexOf('.');  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('.');  Int  index  =  source.lastIndexOf('.');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('.');    Int  index  =  source.lastIndexOf('.');	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
82	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('.');  char  ret  =  source.lastIndexOf('.');  [CE]  possible  loss  of  precision  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('.');  char  ret  =  source.lastIndexOf('.');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('.');    char  ret  =  source.lastIndexOf('.');	  	non-compiled	[CE]  possible  loss  of  precision	66	None	add
83	[BUG]  [BUGGY]  String  ret  =  source.charAt(pos.length());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  ret  =  source.charAt(pos.length());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(pos.length());	  String    ret    =    source.charAt(pos.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
84	[BUG]  [BUGGY]  char  index  =  source.indexOf('n',  pos);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.indexOf('n',  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf('n',  pos);	  int    index    =    source.indexOf('n',    pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)	21	None	replace
85	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos  +  1);	  int    index    =    source.indexOf('n',    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	21	None	replace
86	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition,String)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos,  DEFAULT_IMAGINARY_CHARACTER);	  int    index    =    source.indexOf('n',    pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition,String)	21	None	replace
87	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos,  0);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition,int)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos,  0);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos,  0);	  int    index    =    source.indexOf('n',    pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition,int)	21	None	replace
88	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex());  int  index  =  pos.getIndex();  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex());  int  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex());  int  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    -    1;    char    ret    =    source.charAt(pos.getIndex()    -    1);    int    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	17	None	replace
89	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex();  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    -    1;    char    ret    =    source.charAt(pos.getIndex()    -    1);    int    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	17	None	replace
90	[BUG]  [BUGGY]  char  ret  =  source.charAt(position,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  position  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(position,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(position,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(pos,    defulT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  position	63	None	replace
91	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  DEFULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  DEFULT_IMAGINARY_CHARACTER  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  DEFULT_IMAGINARY_CHARACTER);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  DEFULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(pos,    defulT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  DEFULT_IMAGINARY_CHARACTER	63	None	replace
92	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  defULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  defULT_IMAGINARY_CHARACTER  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  defULT_IMAGINARY_CHARACTER);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  defULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(pos,    defulT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  defULT_IMAGINARY_CHARACTER	63	None	replace
93	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('n',  pos);  [CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('n',  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('n',  pos);	  int    index    =    source.lastIndexOf('n');    	non-compiled	[CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)	23	None	replace
94	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('/');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.lastIndexOf('/');	  int    index    =    source.lastIndexOf('n');    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	26	replace
95	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('/');  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('/');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('/');	  int    index    =    source.lastIndexOf('n');    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	26	replace
96	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('n',  pos.length());  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('n',  pos.length());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('n',  pos.length());	  int    index    =    source.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
97	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  n);  [CE]  cannot  find  symbol  n  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  n);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  n);	  char    ret    =    source.charAt(pos,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	32	None	replace
98	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex()  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.indexOf('n',  pos.getIndex()  +  1);	  int    index    =    source.indexOf('n',    pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	26	replace
99	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex()  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex()  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos.getIndex()  +  1);	  int    index    =    source.indexOf('n',    pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	26	replace
100	[BUG]  [BUGGY]  char  index  =  source.indexOf('n',  pos.getIndex());  [CE]  possible  loss  of  precision  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.indexOf('n',  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf('n',  pos.getIndex());	  int    index    =    source.indexOf('n',    pos.getIndex());    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
101	[BUG]  [BUGGY]  int  index  =  pos.indexOf('n',  source.getIndex());  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.indexOf('n',  source.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.indexOf('n',  source.getIndex());	  int    index    =    source.indexOf('n',    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
102	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('n',  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.lastIndexOf('n',  pos.getIndex());	  int    index    =    source.indexOf('n',    pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	26	replace
103	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('n',  pos.getIndex());  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('n',  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('n',  pos.getIndex());	  int    index    =    source.indexOf('n',    pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	26	replace
104	[BUG]  [BUGGY]  int  n  =  pos.getIndex();  char  c  =  source.charAt(pos.getIndex());  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  n  =  pos.getIndex();  char  c  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  n  =  pos.getIndex();  char  c  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    +    1;    char    c    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	14	None	replace
105	[BUG]  [BUGGY]  String  ret  =  source.charAt(pos.length()  +  1);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  ret  =  source.charAt(pos.length()  +  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(pos.length()  +  1);	  char    ret    =    source.charAt(pos.length()    +    1);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
106	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.length())+  1;  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.length())+  1;  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.length())+  1;	  char    ret    =    source.charAt(pos.length()    +    1);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
107	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ',  pos);  [CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ',  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('  ',  pos);	  int    index    =    source.lastIndexOf('    ');    	non-compiled	[CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)	42	None	replace
108	[BUG]  [BUGGY]  char  index  =  source.lastIndexOf('  ');  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.lastIndexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.lastIndexOf('  ');	  int    index    =    source.lastIndexOf('    ');    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
109	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(pos.getIndex(),    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	65	None	replace
110	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  n);  [CE]  cannot  find  symbol  n  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  n);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex(),  n);	  char    ret    =    source.charAt(pos.getIndex(),    pos);    	non-compiled	[CE]  cannot  find  symbol  n	65	None	replace
111	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  pos,  n);  [CE]  cannot  find  symbol  n  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  pos,  n);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex(),  pos,  n);	  char    ret    =    source.charAt(pos.getIndex(),    pos);    	non-compiled	[CE]  cannot  find  symbol  n	65	None	replace
112	[BUG]  [BUGGY]  char  index  =  source.indexOf('  ',  pos);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.indexOf('  ',  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf('  ',  pos);	  int    index    =    source.indexOf('    ',    pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)	40	None	replace
113	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  pos,  0);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition,int)  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  pos,  0);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  pos,  0);	  int    index    =    source.indexOf('    ',    pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition,int)	40	None	replace
114	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition,String)  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  pos,  DEFAULT_IMAGINARY_CHARACTER);	  int    index    =    source.indexOf('    ',    pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition,String)	40	None	replace
115	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  pos  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  pos  +  1);	  int    index    =    source.indexOf('    ',    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	40	None	replace
116	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Integer  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	Integer  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    +    1;    char    ret    =    source.charAt(pos.getIndex()    +    1);    Integer    index    =    pos.getIndex()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	2	replace
117	[BUG]  [BUGGY]  Integer  index  =  pos.getIndex();  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Integer  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Integer  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    +    1;    char    ret    =    source.charAt(pos.getIndex()    +    1);    Integer    index    =    pos.getIndex()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	2	replace
118	[BUG]  [BUGGY]  int  index  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex();  char  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    +    1;    char    ret    =    source.charAt(pos.getIndex()    +    1);    Integer    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
119	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ');  int  index  =  source.lastIndexOf('  ');  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ');  int  index  =  source.lastIndexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('    ');    int  index  =  source.lastIndexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	41	None	add
120	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ');  Int  index  =  source.lastIndexOf('  ');  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ');  Int  index  =  source.lastIndexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('    ');    Int  index  =  source.lastIndexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	41	None	add
121	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ');  char  c  =  source.lastIndexOf('  ');  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ');  char  c  =  source.lastIndexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('    ');    char  c  =  source.lastIndexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	41	None	add
122	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ');  int  index  =  source.indexOf('  ');  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ');  int  index  =  source.indexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('    ');    int  index  =  source.indexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	41	None	add
123	[BUG]  [BUGGY]  String  index  =  source.indexOf('n');  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  index  =  source.indexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  index  =  source.indexOf('n');	  char    index    =    source.indexOf('n');    	non-compiled	[CE]  incompatible  types	24	None	replace
124	[BUG]  [BUGGY]  Char  index  =  source.indexOf('n');  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Char  index  =  source.indexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  index  =  source.indexOf('n');	  char    index    =    source.indexOf('n');    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
125	[BUG]  [BUGGY]  char  ret  =  source.charAt(position.length());  [CE]  cannot  find  symbol  position  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(position.length());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(position.length());	  char    ret    =    source.charAt(position.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  position	57	None	replace
126	[BUG]  [BUGGY]  int  index  =  pos.indexOf('  ',  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.indexOf('  ',  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.indexOf('  ',  DEFAULT_IMAGINARY_CHARACTER);	  int    index    =    pos.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
127	[BUG]  [BUGGY]  int  index  =  pos.indexOf('  ',  0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.indexOf('  ',  0);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.indexOf('  ',  0);	  int    index    =    pos.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
128	[BUG]  [BUGGY]  String  n  =  source.length();  [CE]  incompatible  types  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  n  =  source.length();  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  n  =  source.length();	  char    n    =    source.length();    	non-compiled	[CE]  incompatible  types	52	None	replace
129	[BUG]  [BUGGY]  Character  n  =  source.length();  [CE]  incompatible  types  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Character  n  =  source.length();  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Character  n  =  source.length();	  char    n    =    source.length();    	non-compiled	[CE]  incompatible  types	52	None	replace
130	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('n');  char  index  =  source.indexOf('n');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('n');  char  index  =  source.indexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('n');  char  index  =  source.indexOf('n');	  int    index    =    source.indexOf('n');    char    index    =    source.indexOf('n');    	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	31	None	replace
131	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.length()  -  2);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.length()  -  2);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.length()  -  2);	  char    ret    =    source.charAt(pos.length());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
132	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getLength());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getLength());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getLength());	  char    ret    =    source.charAt(pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
133	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getStartIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getStartIndex());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getStartIndex());	  char    ret    =    source.charAt(pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
134	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;	  int    index    =    pos.getIndex()    +    1;    char    ret    =    source.charAt(pos.getIndex()    +    1);    int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	12	None	replace
135	[BUG]  [BUGGY]  String  index  =  source.indexOf(pos);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  index  =  source.indexOf(pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  index  =  source.indexOf(pos);	  char    index    =    source.indexOf(pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition)	3	None	replace
136	[BUG]  [BUGGY]  char  index  =  source.indexOf(pos,  pos);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.indexOf(pos,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf(pos,  pos);	  char    index    =    source.indexOf(pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition,ParsePosition)	3	None	replace
137	[BUG]  [BUGGY]  char  ret  =  source.charAt(position.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(position.getIndex()  +  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(position.getIndex()  +  1);	  String    ret    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  cannot  find  symbol  position	46	None	replace
138	[BUG]  [BUGGY]  int  index  =  source.indexOf(position,  pos);  [CE]  cannot  find  symbol  position  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf(position,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(position,  pos);	  int    index    =    source.indexOf(pos,    pos);    	non-compiled	[CE]  cannot  find  symbol  position	5	None	replace
139	[BUG]  [BUGGY]  int  index  =  source.indexOf('n');  Int  index  =  pos.indexOf('n');  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n');  Int  index  =  pos.indexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n');  Int  index  =  pos.indexOf('n');	  int    index    =    source.indexOf('n');    Int    index    =    source.indexOf('n');    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
140	[BUG]  [BUGGY]  int  index  =  pos.indexOf('n');  Int  index  =  source.indexOf('n');  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.indexOf('n');  Int  index  =  source.indexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.indexOf('n');  Int  index  =  source.indexOf('n');	  int    index    =    source.indexOf('n');    Int    index    =    source.indexOf('n');    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
141	[BUG]  [BUGGY]  char  index  =  source.indexOf('n');  int  index  =  source.indexOf('N');  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.indexOf('n');  int  index  =  source.indexOf('N');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf('n');  int  index  =  source.indexOf('N');	  int    index    =    source.indexOf('n');    int    index    =    source.indexOf('N');    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
142	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('.');  char  index  =  source.lastIndexOf('.');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('.');  char  index  =  source.lastIndexOf('.');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('.');    char  index  =  source.lastIndexOf('.');	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	66	None	add
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('.')+  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.lastIndexOf('.')+  1;	  int    index    =    source.lastIndexOf('.');    	compilable	  [FE]  AssertionFailedError  	67	26	replace
144	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('.')+  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('.')+  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('.')+  1;	  int    index    =    source.lastIndexOf('.');    	compilable	  [FE]  AssertionFailedError  	67	26	replace
145	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos);  Int  index  =  source.indexOf('n');  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos);  Int  index  =  source.indexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos);  Int  index  =  source.indexOf('n');	  int    index    =    source.indexOf('n');    Int    index    =    source.indexOf('n');    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)	30	None	replace
146	[BUG]  [BUGGY]  int  index  =  source.indexOf('n');  Int  index  =  source.indexOf('n',  pos);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n');  Int  index  =  source.indexOf('n',  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n');  Int  index  =  source.indexOf('n',  pos);	  int    index    =    source.indexOf('n');    Int    index    =    source.indexOf('n');    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
147	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  pos);  Int  index  =  source.indexOf('  ');  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  pos);  Int  index  =  source.indexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  pos);  Int  index  =  source.indexOf('  ');	  int    index    =    source.indexOf('    ');    Int    index    =    source.indexOf('    ');    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)	9	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ')+  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.lastIndexOf('  ')+  1;	  int    index    =    source.lastIndexOf('    ');    	compilable	  [FE]  AssertionFailedError  	42	26	replace
149	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ')+  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ')+  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('  ')+  1;	  int    index    =    source.lastIndexOf('    ');    	compilable	  [FE]  AssertionFailedError  	42	26	replace
150	[BUG]  [BUGGY]  Char  index  =  parseNextCharacter(source,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Char  index  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  index  =  parseNextCharacter(source,  pos.getIndex());	  Char    index    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
151	[BUG]  [BUGGY]  Char  index  =  parseNextCharacter(source,  pos).getIndex();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Char  index  =  parseNextCharacter(source,  pos).getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  index  =  parseNextCharacter(source,  pos).getIndex();	  Char    index    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
152	[BUG]  [BUGGY]  Integer  index  =  pos.getIndex();  char  c  =  source.charAt(pos.getIndex());  [CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Integer  index  =  pos.getIndex();  char  c  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Integer  index  =  pos.getIndex();  char  c  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    +    1;    char    c    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	14	None	replace
153	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.charAt(pos.length()));  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.charAt(pos.length()));  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos.charAt(pos.length()));	  int    index    =    source.indexOf('n',    pos.length());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
154	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.intValue());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.intValue());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos.intValue());	  int    index    =    source.indexOf('n',    pos.length());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
155	[BUG]  [BUGGY]  int  n  =  source.getIndex();  char  c  =  source.charAt(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  n  =  source.getIndex();  char  c  =  source.charAt(pos.getIndex()  -  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  n  =  source.getIndex();  char  c  =  source.charAt(pos.getIndex()  -  1);	  int    index    =    pos.getIndex()    -    1;    char    c    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
156	[BUG]  [BUGGY]  char  index  =  source.indexOf('  ');  int  index  =  source.indexOf('  ');  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  index  =  source.indexOf('  ');  int  index  =  source.indexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf('  ');  int  index  =  source.indexOf('  ');	  int    index    =    source.indexOf('    ');    int    index    =    source.indexOf('    ');    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
157	[BUG]  [BUGGY]  Integer  index  =  pos.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Integer  index  =  pos.getIndex();  char  ret  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Integer  index  =  pos.getIndex();  char  ret  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    +    1;    char    ret    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	replace
158	[BUG]  [BUGGY]  char  ret  =  source.charAt(source.length()  +  1);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(source.length()  +  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(source.length()  +  1);	  char    ret    =    source.charAt(source.length()    -    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	56	None	replace
159	[BUG]  [BUGGY]  char  c  =  source.charAt(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  index  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  c  =  source.charAt(pos.getIndex()  -  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  c  =  source.charAt(pos.getIndex()  -  1);	  int    index    =    pos.getIndex()    -    1;    char    c    =    source.charAt(pos.getIndex()    -    1);    int    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol  index	19	None	replace
160	[BUG]  [BUGGY]  char  ret  =  source.charAt(position.getIndex(),  pos);  [CE]  cannot  find  symbol  position  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(position.getIndex(),  pos);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(position.getIndex(),  pos);	  char    ret    =    source.charAt(pos.getIndex(),    pos);    	non-compiled	[CE]  cannot  find  symbol  position	65	None	replace
161	[BUG]  [BUGGY]  char  ret  =  source.charAt(source.getIndex(),  pos,  n);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(source.getIndex(),  pos,  n);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(source.getIndex(),  pos,  n);	  char    ret    =    source.charAt(pos.getIndex(),    pos);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
162	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  pos,  n);  [CE]  cannot  find  symbol  n  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(0,  pos,  n);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(0,  pos,  n);	  char    ret    =    source.charAt(0,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	28	None	replace
163	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex()  -  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.indexOf('n',  pos.getIndex()  -  1);	  int    index    =    source.indexOf('n',    pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	26	replace
164	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex()  -  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos.getIndex()  -  1);	  int    index    =    source.indexOf('n',    pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	26	replace
165	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  1;  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  1;  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  -  1;	  char    ret    =    source.charAt(pos.getIndex();    	non-compiled	[CE]  ')'  expected	72	None	replace
166	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  +  1;  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  +  1;  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  +  1;	  char    ret    =    source.charAt(pos.getIndex();    	non-compiled	[CE]  ')'  expected	72	None	replace
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.indexOf('  ',  pos.getIndex());	  int    index    =    source.indexOf('    ');    char    index    =    source.indexOf('    ');    	compilable	  [FE]  AssertionFailedError  	55	26	replace
168	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  pos.getIndex());  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  pos.getIndex());	  int    index    =    source.indexOf('    ');    char    index    =    source.indexOf('    ');    	compilable	  [FE]  AssertionFailedError  	55	26	replace
169	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ');  String  index  =  source.indexOf('  ');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ');  String  index  =  source.indexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ');  String  index  =  source.indexOf('  ');	  int    index    =    source.indexOf('    ');    char    index    =    source.indexOf('    ');    	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	55	None	replace
170	[BUG]  [BUGGY]  Char  ret  =  source.charAt(pos.getIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Char  ret  =  source.charAt(pos.getIndex());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  ret  =  source.charAt(pos.getIndex());	  char    ret    =    source.charAt(position.getIndex());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
171	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  0L);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  0L);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  0L);	  char    ret    =    source.charAt(pos,    0);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	34	None	replace
172	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.indexOf('n'));  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('n',  pos.indexOf('n'));  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos.indexOf('n'));	  int    index    =    source.indexOf('n');    char    index    =    source.indexOf('n');    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
173	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  Int  index  =  source.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.getIndex()  -  1;  Int  index  =  source.getIndex()  -  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex()  -  1;  Int  index  =  source.getIndex()  -  1;	  int    index    =    pos.getIndex()    -    1;    Int    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
174	[BUG]  [BUGGY]  Char  index  =  this.source.getIndex();  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Char  index  =  this.source.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  index  =  this.source.getIndex();	  Char    index    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
175	[BUG]  [BUGGY]  Char  index  =  source.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Char  index  =  source.getIndex()  -  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  index  =  source.getIndex()  -  1;	  Char    index    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
176	[BUG]  [BUGGY]  String  ret  =  source.charAt(source.length()  -  1);  [CE]  incompatible  types  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  ret  =  source.charAt(source.length()  -  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(source.length()  -  1);	  String    ret    =    source.charAt(pos.length()    -    1);    	non-compiled	[CE]  incompatible  types	38	None	replace
177	[BUG]  [BUGGY]  char  ret  =  source.charAt(position,  pos);  [CE]  cannot  find  symbol  position  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(position,  pos);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(position,  pos);	  char    ret    =    source.charAt(pos,    pos);    	non-compiled	[CE]  cannot  find  symbol  position	32	None	replace
178	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos  +  2);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos  +  2);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos  +  2);	  char    ret    =    source.charAt(pos    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	27	None	replace
179	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER  +  1);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER  +  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER  +  1);	  char    ret    =    source.charAt(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	33	None	replace
180	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  LAST_VALID_NUMBER);  [CE]  cannot  find  symbol  LAST_VALID_NUMBER  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  LAST_VALID_NUMBER);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  LAST_VALID_NUMBER);	  char    ret    =    source.charAt(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  LAST_VALID_NUMBER	33	None	replace
181	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('n');  char  index  =  source.lastIndexOf('n');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('n');  char  index  =  source.lastIndexOf('n');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('n');    char  index  =  source.lastIndexOf('n');	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	22	None	add
182	[BUG]  [BUGGY]  int  index  =  source.getIndex()  -  1;  int  index  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex()  -  1;  int  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  -  1;  int  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    -    1;    int    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
183	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ');  char  index  =  source.lastIndexOf('  ');  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ');  char  index  =  source.lastIndexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('    ');    char  index  =  source.lastIndexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	41	None	add
184	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ');  int  index  =  source.lastIndexOf('  '));  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ');  int  index  =  source.lastIndexOf('  '));  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('    ');    int  index  =  source.lastIndexOf('  '));	  	non-compiled	[CE]  unclosed  character  literal	41	None	add
185	[BUG]  [BUGGY]  int  index  =  source.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex()  +  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex());  Integer  index  =  pos.getIndex()  +  1;	  int    index    =    pos.getIndex()    +    1;    char    ret    =    source.charAt(pos.getIndex()    +    1);    Integer    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
186	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('.');  char  ret  =  source.charAt(pos.getIndexOf('.'));  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('.');  char  ret  =  source.charAt(pos.getIndexOf('.'));  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.lastIndexOf('.');    char  ret  =  source.charAt(pos.getIndexOf('.'));	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
187	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  '-');  char  ret  =  source.charAt(pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  '-');  char  ret  =  source.charAt(pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  '-');  char  ret  =  source.charAt(pos);	  int    index    =    source.indexOf('    ');    char    ret    =    source.charAt(pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	10	None	replace
188	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  '_');  char  ret  =  source.charAt(pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  '_');  char  ret  =  source.charAt(pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  '_');  char  ret  =  source.charAt(pos);	  int    index    =    source.indexOf('    ');    char    ret    =    source.charAt(pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	10	None	replace
189	[BUG]  [BUGGY]  Char  n  =  source.length();  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Char  n  =  source.length();  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  n  =  source.length();	  char    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
190	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex())+  3;  [CE]  possible  loss  of  precision  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex())+  3;  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex())+  3;	  char    ret    =    source.charAt(pos.getIndex())+    1;    	non-compiled	[CE]  possible  loss  of  precision	35	None	replace
191	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos  +  1,  pos);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos  +  1,  pos);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos  +  1,  pos);	  char    ret    =    source.charAt(pos    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	27	None	replace
192	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  p);  [CE]  cannot  find  symbol  p  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  p);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER,  p);	  char    ret    =    source.charAt(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  p	33	None	replace
193	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(pos.getIndex(),    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	65	None	replace
194	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  pos  +  1);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex(),  pos  +  1);	  char    ret    =    source.charAt(pos.getIndex(),    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	65	None	replace
195	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getColumnIndex());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(pos.getColumnIndex());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getColumnIndex());	  char    ret    =    source.charAt(pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
196	[BUG]  [BUGGY]  int  index  =  source.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex());	  int    index    =    pos.getIndex()    +    1;    char    ret    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
197	[BUG]  [BUGGY]  int  index  =  pos.getIndex();  int  index  =  source.getIndex();  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  pos.getIndex();  int  index  =  source.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex();  int  index  =  source.getIndex();	  int    index    =    pos.getIndex()    +    1;    int    index    =    source.getIndex()    +    1;    	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	64	None	replace
198	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  pos,  pos.getIndex());  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  char  ret  =  source.charAt(0,  pos,  pos.getIndex());  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(0,  pos,  pos.getIndex());	  char    ret    =    source.charAt(0,    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	28	None	replace
199	[BUG]  [BUGGY]  int  ret  =  source.charAt(pos.getIndex()  -  1);  Integer  index  =  pos.getIndex();  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  ret  =  source.charAt(pos.getIndex()  -  1);  Integer  index  =  pos.getIndex();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  ret  =  source.charAt(pos.getIndex()  -  1);  Integer  index  =  pos.getIndex();	  int    index    =    pos.getIndex()    -    1;    char    ret    =    source.charAt(pos.getIndex()    -    1);    Integer    index    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	58	None	replace
200	[BUG]  [BUGGY]  int  index  =  source.indexOf(DEFAULT_IMAGINARY_CHARACTER,  pos);  [CE]  no  suitable  method  found  for  indexOf(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf(DEFAULT_IMAGINARY_CHARACTER,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(DEFAULT_IMAGINARY_CHARACTER,  pos);	  int    index    =    source.indexOf(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(String,ParsePosition)	2	None	replace
201	[BUG]  [BUGGY]  int  index  =  source.indexOf(deFAULT_IMAGINARY_CHARACTER,  pos);  [CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf(deFAULT_IMAGINARY_CHARACTER,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(deFAULT_IMAGINARY_CHARACTER,  pos);	  int    index    =    source.indexOf(pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER	2	None	replace
202	[BUG]  [BUGGY]  String  ret  =  source.charAt(pos,  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  String  ret  =  source.charAt(pos,  pos);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(pos,  pos);	  char    ret    =    source.charAt(pos,    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	32	None	replace
203	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  pos)+  1;  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.indexOf('  ',  pos)+  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  pos)+  1;	  int    index    =    source.indexOf('    ',    pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)	40	None	replace
204	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ');  Int  index  =  source.indexOf('  ');  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  int  index  =  source.lastIndexOf('  ');  Int  index  =  source.indexOf('  ');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('  ');  Int  index  =  source.indexOf('  ');	  int    index    =    source.indexOf('    ');    Int    index    =    source.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
205	[BUG]  [BUGGY]  Char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {      [BUGGY]  Char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(pos,    defulT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
