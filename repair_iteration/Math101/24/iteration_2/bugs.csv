bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  index  =  source.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.getIndex()  -  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  -  1;	  int    index    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
2	[BUG]  [BUGGY]  int  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition,String)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(pos,  DEFAULT_IMAGINARY_CHARACTER);	  int    index    =    source.indexOf(pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition,String)	9	None	replace
3	[BUG]  [BUGGY]  char  index  =  source.indexOf(pos);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  index  =  source.indexOf(pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf(pos);	  int    index    =    source.indexOf(pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition)	9	None	replace
4	[BUG]  [BUGGY]  int  index  =  source.indexOf(pos,  0);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition,int)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf(pos,  0);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(pos,  0);	  int    index    =    source.indexOf(pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition,int)	9	None	replace
5	[BUG]  [BUGGY]  int  index  =  source.indexOf(pos,  pos);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition,ParsePosition)  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf(pos,  pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(pos,  pos);	  int    index    =    source.indexOf(pos);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition,ParsePosition)	9	None	replace
6	[BUG]  [BUGGY]  int  index  =  source.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.getIndex()  +  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  +  1;	  int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
7	[BUG]  [BUGGY]  int  index  =  source.getIndex()  /  1;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.getIndex()  /  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex()  /  1;	  int    index    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
8	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ');  int  index  =  source.indexOf('  ');  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('  ');  int  index  =  source.indexOf('  ');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('    ');    int  index  =  source.indexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	17	None	add
9	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ');  Int  index  =  source.indexOf('  ');  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('  ');  Int  index  =  source.indexOf('  ');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('    ');    Int  index  =  source.indexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	17	None	add
10	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ');  char  ret  =  source.charAt(pos);  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('  ');  char  ret  =  source.charAt(pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('    ');    char  ret  =  source.charAt(pos);	  	non-compiled	[CE]  unclosed  character  literal	17	None	add
11	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  +  1;  int  index  =  pos.getIndex()  +  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  +  1;  int  index  =  pos.getIndex()  +  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    +    1;    int  index  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
12	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    +    1;    char  ret  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
13	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex()  +  1);  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex()  +  1);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    +    1;    char  ret  =  source.charAt(pos.getIndex()  +  1);	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
14	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  c  =  source.charAt(pos.getIndex()  +  1);  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  c  =  source.charAt(pos.getIndex()  +  1);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    +    1;    char  c  =  source.charAt(pos.getIndex()  +  1);	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
15	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  c  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  c  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    +    1;    char  c  =  source.charAt(pos.getIndex()  +  1);  int  index  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
16	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  int  index  =  pos.getIndex()  -  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  -  1;  int  index  =  pos.getIndex()  -  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    -    1;    int  index  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	add
17	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  ret  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex()  -  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  ret  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex()  -  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    -    1;    char  ret  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	add
18	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  ret  =  source.charAt(pos.getIndex()  -  1);  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  ret  =  source.charAt(pos.getIndex()  -  1);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    -    1;    char  ret  =  source.charAt(pos.getIndex()  -  1);	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	add
19	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  c  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex()  -  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  c  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex()  -  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    -    1;    char  c  =  source.charAt(pos.getIndex()  -  1);  int  index  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	add
20	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  c  =  source.charAt(pos.getIndex()  -  1);  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  c  =  source.charAt(pos.getIndex()  -  1);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    -    1;    char  c  =  source.charAt(pos.getIndex()  -  1);	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	add
21	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('n',  pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos);	  int    index    =    source.indexOf('n');    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)	16	None	replace
22	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.lastIndexOf('n');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.lastIndexOf('n');	  int    index    =    source.indexOf('n');    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
23	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('n');  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.lastIndexOf('n');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('n');	  int    index    =    source.indexOf('n');    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
24	[BUG]  [BUGGY]  char  index  =  source.indexOf('n');  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  index  =  source.indexOf('n');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf('n');	  int    index    =    source.indexOf('n');    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
25	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.length());  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('n',  pos.length());  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos.length());	  int    index    =    source.indexOf('n');    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
26	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  2);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  -  2);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  -  2);	      char    ret    =    source.charAt(pos.getIndex());    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	2	None	replace
27	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos  +  1);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos  +  1);	      char    ret    =    source.charAt(0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	5	None	replace
28	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(0,  pos);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(0,  pos);	      char    ret    =    source.charAt(0);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	5	None	replace
29	[BUG]  [BUGGY]  int  index  =  source.indexOf('n');  int  index  =  source.indexOf('n');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('n');  int  index  =  source.indexOf('n');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('n');    int  index  =  source.indexOf('n');	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	15	None	add
30	[BUG]  [BUGGY]  int  index  =  source.indexOf('n');  Int  index  =  source.indexOf('n');  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('n');  Int  index  =  source.indexOf('n');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('n');    Int  index  =  source.indexOf('n');	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
31	[BUG]  [BUGGY]  int  index  =  source.indexOf('n');  char  index  =  source.indexOf('n');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('n');  char  index  =  source.indexOf('n');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('n');    char  index  =  source.indexOf('n');	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	15	None	add
32	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos,  pos);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  pos);	      char    ret    =    source.charAt(pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	1	None	replace
33	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  DEFAULT_IMAGINARY_CHARACTER);	      char    ret    =    source.charAt(pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	1	None	replace
34	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  0);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos,  0);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  0);	      char    ret    =    source.charAt(pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	1	None	replace
35	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex())+  1;  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos.getIndex())+  1;  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex())+  1;	      char    ret    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
36	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  *  1);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos.getIndex()  *  1);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex()  *  1);	      char    ret    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	11	None	replace
37	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.length());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos.length());  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.length());	      char    ret    =    source.charAt(pos.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
38	[BUG]  [BUGGY]  String  ret  =  source.charAt(pos.length()  -  1);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  String  ret  =  source.charAt(pos.length()  -  1);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(pos.length()  -  1);	      char    ret    =    source.charAt(pos.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
39	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.length()  +  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos.length()  +  1);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.length()  +  1);	      char    ret    =    source.charAt(pos.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
40	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ',  pos);  [CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('  ',  pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ',  pos);	  int    index    =    source.indexOf('    ');    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(char,ParsePosition)	18	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.lastIndexOf('  ');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.lastIndexOf('  ');	  int    index    =    source.indexOf('    ');    	compilable	  [FE]  AssertionFailedError  	18	26	replace
42	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('  ');  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.lastIndexOf('  ');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('  ');	  int    index    =    source.indexOf('    ');    	compilable	  [FE]  AssertionFailedError  	18	26	replace
43	[BUG]  [BUGGY]  char  index  =  source.indexOf('  ');  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  index  =  source.indexOf('  ');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.indexOf('  ');	  int    index    =    source.indexOf('    ');    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
44	[BUG]  [BUGGY]  int  index  =  pos.indexOf('  ');  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.indexOf('  ');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.indexOf('  ');	  int    index    =    source.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
45	[BUG]  [BUGGY]  char  ret  =  source.charAt(position.getIndex());  [CE]  cannot  find  symbol  position  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(position.getIndex());  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(position.getIndex());	      char    ret    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  cannot  find  symbol  position	12	None	replace
46	[BUG]  [BUGGY]  String  ret  =  source.charAt(pos.getIndex()  +  1);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  String  ret  =  source.charAt(pos.getIndex()  +  1);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  ret  =  source.charAt(pos.getIndex()  +  1);	      char    ret    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  incompatible  types	12	None	replace
47	[BUG]  [BUGGY]  String  index  =  pos.getIndex();  [CE]  incompatible  types  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  String  index  =  pos.getIndex();  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	String  index  =  pos.getIndex();	  char    index    =    pos.getIndex();    	non-compiled	[CE]  incompatible  types	10	None	replace
48	[BUG]  [BUGGY]  char  index  =  source.getIndex();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  index  =  source.getIndex();  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  source.getIndex();	  char    index    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
49	[BUG]  [BUGGY]  Char  index  =  source.getIndex();  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  Char  index  =  source.getIndex();  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  index  =  source.getIndex();	  char    index    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
50	[BUG]  [BUGGY]  int  n  =  source.length()  +  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  n  =  source.length()  +  1;  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  n  =  source.length()  +  1;	      int    n    =    source.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	4	None	replace
51	[BUG]  [BUGGY]  int  n  =  source.length()  -  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  n  =  source.length()  -  1;  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  n  =  source.length()  -  1;	      int    n    =    source.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	4	None	replace
52	[BUG]  [BUGGY]  char  n  =  source.length();  [CE]  possible  loss  of  precision  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  n  =  source.length();  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  n  =  source.length();	      int    n    =    source.length();    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
53	[BUG]  [BUGGY]  Char  index  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  Char  index  =  pos.getIndex();  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	Char  index  =  pos.getIndex();	  char    index    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
54	[BUG]  [BUGGY]  int  index  =  source.indexOf('n');  int  index  =  source.indexOf('N');  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('n');  int  index  =  source.indexOf('N');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('n');    int  index  =  source.indexOf('N');	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	15	None	add
55	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ');  char  index  =  source.indexOf('  ');  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('  ');  char  index  =  source.indexOf('  ');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    source.indexOf('    ');    char  index  =  source.indexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	17	None	add
56	[BUG]  [BUGGY]  char  ret  =  source.charAt(source.length()  -  1);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(source.length()  -  1);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(source.length()  -  1);	      char    ret    =    source.charAt(pos.length()    -    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	3	None	replace
57	[BUG]  [BUGGY]  char  ret  =  source.charAt(position.length()  -  1);  [CE]  cannot  find  symbol  position  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(position.length()  -  1);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(position.length()  -  1);	      char    ret    =    source.charAt(pos.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  position	3	None	replace
58	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  ret  =  source.charAt(pos.getIndex()  -  1);  Integer  index  =  pos.getIndex()  -  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  -  1;  char  ret  =  source.charAt(pos.getIndex()  -  1);  Integer  index  =  pos.getIndex()  -  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    -    1;    char  ret  =  source.charAt(pos.getIndex()  -  1);  Integer  index  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	add
59	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  Int  index  =  pos.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  -  1;  Int  index  =  pos.getIndex()  -  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    -    1;    Int  index  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
60	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex()  +  1);  Integer  index  =  pos.getIndex()  +  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  +  1;  char  ret  =  source.charAt(pos.getIndex()  +  1);  Integer  index  =  pos.getIndex()  +  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    +    1;    char  ret  =  source.charAt(pos.getIndex()  +  1);  Integer  index  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
61	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  +  1;  Int  index  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  +  1;  Int  index  =  pos.getIndex()  +  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    +    1;    Int  index  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
62	[BUG]  [BUGGY]  char  ret  =  source.charAt(source.getIndex());  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(source.getIndex());  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(source.getIndex());	      char    ret    =    source.charAt(pos.getIndex()    +    1);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
63	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos,  defulT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  defulT_IMAGINARY_CHARACTER  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos,  defulT_IMAGINARY_CHARACTER);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos,  defulT_IMAGINARY_CHARACTER);	      char    ret    =    source.charAt(pos);    	non-compiled	[CE]  cannot  find  symbol  defulT_IMAGINARY_CHARACTER	1	None	replace
64	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  +  1;  int  index  =  source.getIndex()  +  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  +  1;  int  index  =  source.getIndex()  +  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    +    1;    int  index  =  source.getIndex()  +  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
65	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos.getIndex(),  pos);  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex(),  pos);	      char    ret    =    source.charAt(pos.getIndex());    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	2	None	replace
66	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.lastIndexOf('.');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.lastIndexOf('.');	  int    index    =    source.getIndex();    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
67	[BUG]  [BUGGY]  int  index  =  source.lastIndexOf('.');  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.lastIndexOf('.');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.lastIndexOf('.');	  int    index    =    source.getIndex();    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
68	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  int  index  =  source.getIndex()  -  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  pos.getIndex()  -  1;  int  index  =  source.getIndex()  -  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int    index    =    pos.getIndex()    -    1;    int  index  =  source.getIndex()  -  1;	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	add
69	[BUG]  [BUGGY]  int  n  =  source.length()  -  2;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  n  =  source.length()  -  2;  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  n  =  source.length()  -  2;	      int    n    =    source.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	4	None	replace
70	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex());  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.indexOf('n',  pos.getIndex());	  int    index    =    source.indexOf('n');    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
71	[BUG]  [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex());  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  int  index  =  source.indexOf('n',  pos.getIndex());  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n',  pos.getIndex());	  int    index    =    source.indexOf('n');    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
72	[BUG]  [BUGGY]  char  ret  =  source.charAt(pos.getIndex();  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {    [BUGGY]  char  ret  =  source.charAt(pos.getIndex();  [BUGGY]    int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  ret  =  source.charAt(pos.getIndex();	      char    ret    =    source.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  ')'  expected	11	None	replace
