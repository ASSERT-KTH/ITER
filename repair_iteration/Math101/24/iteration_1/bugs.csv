bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    char  ret  =  source.charAt(pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]    char  ret  =  source.charAt(pos);  [BUGGY]  int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	    char  ret  =  source.charAt(pos);		non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	48	None	add
2	[BUG]  [BUGGY]    char  ret  =  source.charAt(pos.getIndex());  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]    char  ret  =  source.charAt(pos.getIndex());  [BUGGY]  int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	    char  ret  =  source.charAt(pos.getIndex());		non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	48	None	add
3	[BUG]  [BUGGY]    char  ret  =  source.charAt(pos.length()  -  1);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]    char  ret  =  source.charAt(pos.length()  -  1);  [BUGGY]  int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	    char  ret  =  source.charAt(pos.length()  -  1);		non-compiled	[CE]  cannot  find  symbol	48	None	add
4	[BUG]  [BUGGY]    int  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]    int  n  =  source.length();  [BUGGY]  int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	    int  n  =  source.length();		non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	48	None	add
5	[BUG]  [BUGGY]    char  ret  =  source.charAt(0);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]    char  ret  =  source.charAt(0);  [BUGGY]  int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	    char  ret  =  source.charAt(0);		non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	48	None	add
6	[BUG]  [BUGGY]  int  index  =  source.getIndex();  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  source.getIndex();  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.getIndex();	int  index  =  pos.getIndex();  	non-compiled	[CE]  cannot  find  symbol	47	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  pos.getIndex()  +  1;  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  pos.getIndex()  +  1;	int  index  =  pos.getIndex();  	compilable	  [FE]  AssertionFailedError  	47	24	replace
8	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  +  1;  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  pos.getIndex()  +  1;  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex()  +  1;	int  index  =  pos.getIndex();  	compilable	  [FE]  AssertionFailedError  	47	24	replace
9	[BUG]  [BUGGY]  int  index  =  source.indexOf(pos);  [CE]  no  suitable  method  found  for  indexOf(ParsePosition)  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  source.indexOf(pos);  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf(pos);	int  index  =  pos.getIndex();  	non-compiled	[CE]  no  suitable  method  found  for  indexOf(ParsePosition)	47	None	replace
10	[BUG]  [BUGGY]  char  index  =  pos.getIndex();  [CE]  possible  loss  of  precision  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  char  index  =  pos.getIndex();  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	char  index  =  pos.getIndex();	int  index  =  pos.getIndex();  	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
11	[BUG]  [BUGGY]    char  ret  =  source.charAt(pos.getIndex()  -  1);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]    char  ret  =  source.charAt(pos.getIndex()  -  1);  [BUGGY]  int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	    char  ret  =  source.charAt(pos.getIndex()  -  1);		non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	48	None	add
12	[BUG]  [BUGGY]    char  ret  =  source.charAt(pos.getIndex()  +  1);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]    char  ret  =  source.charAt(pos.getIndex()  +  1);  [BUGGY]  int  index  =  pos.getIndex();  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	    char  ret  =  source.charAt(pos.getIndex()  +  1);		non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	48	None	add
13	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  pos.getIndex()  -  1;  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  pos.getIndex()  -  1;	int  index  =  pos.getIndex();  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	26	replace
14	[BUG]  [BUGGY]  int  index  =  pos.getIndex()  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  pos.getIndex()  -  1;  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  pos.getIndex()  -  1;	int  index  =  pos.getIndex();  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	26	replace
15	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  source.indexOf('n');  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.indexOf('n');	int  index  =  pos.getIndex();  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	26	replace
16	[BUG]  [BUGGY]  int  index  =  source.indexOf('n');  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  source.indexOf('n');  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('n');	int  index  =  pos.getIndex();  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	26	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  source.indexOf('  ');  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	int  index  =  source.indexOf('  ');	int  index  =  pos.getIndex();  	compilable	  [FE]  AssertionFailedError  	47	26	replace
18	[BUG]  [BUGGY]  int  index  =  source.indexOf('  ');  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  [BUGGY]  int  index  =  source.indexOf('  ');  [BUGGY]  int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	int  index  =  source.indexOf('  ');	int  index  =  pos.getIndex();  	compilable	  [FE]  AssertionFailedError  	47	26	replace
