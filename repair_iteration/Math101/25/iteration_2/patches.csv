bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  n  =  source.lastIndexOf('.');  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  n  =  source.lastIndexOf('.');	  char    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  incompatible  types	8	None	replace
2	[BUG]  [BUGGY]  Char  n  =  source.lastIndexOf('.');  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Char  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Char  n  =  source.lastIndexOf('.');	  char    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
3	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos,  index,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    parseNextCharacter(source,    pos,    index);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	33	None	replace
4	[BUG]  [BUGGY]  String  ret  =  parseNextCharacter(source,  pos,  index);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  ret  =  parseNextCharacter(source,  pos,  index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  ret  =  parseNextCharacter(source,  pos,  index);	  char    ret    =    parseNextCharacter(source,    pos,    index);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	33	None	replace
5	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index,  n);  [CE]  cannot  find  symbol  n  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index,  n);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos,  index,  n);	  char    ret    =    parseNextCharacter(source,    pos,    index);    	non-compiled	[CE]  cannot  find  symbol  n	33	None	replace
6	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  index,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  index,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  index,  pos);	  char    ret    =    parseNextCharacter(source,    pos,    index);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	33	None	replace
7	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  }  else  {  int  pos.setIndex(index);  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  }  else  {  int  pos.setIndex(index);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  }  else  {  int  pos.setIndex(index);  }	          pos.setIndex(index);    int    pos.setIndex(index);    	non-compiled	[CE]  ';'  expected	24	None	replace
8	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  int  pos.setIndex(index);  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  int  pos.setIndex(index);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  int  pos.setIndex(index);  }	          pos.setIndex(index);    int    pos.setIndex(index);    	non-compiled	[CE]  ';'  expected	24	None	replace
9	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  }  else  {  pos.setIndex(index);  }  [CE]  cannot  find  symbol  n  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  }  else  {  pos.setIndex(index);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  }  else  {  pos.setIndex(index);  }	          pos.setIndex(index);    int    pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  n	24	None	replace
10	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  index++);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  index++);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  index++);	  char    ret    =    source.charAt(index++    +    1);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	5	None	replace
11	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  index  +  1);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  index  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  index  +  1);	  char    ret    =    source.charAt(index++    +    1);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	5	None	replace
12	[BUG]  [BUGGY]  int  n  =  source.length();  int  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length();  int  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length();  int  n  =  source.length();	  int    n    =    source.length()    +    1;    int    n    =    source.length()    +    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	28	None	replace
13	[BUG]  [BUGGY]  Integer  n  =  source.length();  int  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length();  int  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer  n  =  source.length();  int  n  =  source.length();	  int    n    =    source.length()    +    1;    int    n    =    source.length()    +    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	28	None	replace
14	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  n);  [CE]  cannot  find  symbol  n  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  n);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  n);	  char    ret    =    source.charAt(index++,    index);    	non-compiled	[CE]  cannot  find  symbol  n	3	None	replace
15	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(index++,    index);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	3	None	replace
16	[BUG]  [BUGGY]  Char  n  =  source.charAt(index);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Char  n  =  source.charAt(index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Char  n  =  source.charAt(index);	  Char    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
17	[BUG]  [BUGGY]  int  n  =  source.length();  Integer  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length();  Integer  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length();  Integer  n  =  source.length();	  int    n    =    source.length()    +    1;    Integer    n    =    source.length()    +    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	29	None	replace
18	[BUG]  [BUGGY]  char  ret  =  source.length();  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.length();	  int    n    =    source.length()    +    1;    char    ret    =    source.length()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
19	[BUG]  [BUGGY]  int  n  =  source.length();  String  ret  =  source.length();  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length();  String  ret  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length();  String  ret  =  source.length();	  int    n    =    source.length()    +    1;    char    ret    =    source.length()    +    1;    	non-compiled	[CE]  incompatible  types	56	None	replace
20	[BUG]  [BUGGY]  double  n  =  source.length();  String  ret  =  source.length();  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  double  n  =  source.length();  String  ret  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	double  n  =  source.length();  String  ret  =  source.length();	  int    n    =    source.length()    +    1;    char    ret    =    source.length()    +    1;    	non-compiled	[CE]  incompatible  types	56	None	replace
21	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  int  n  =  source.lastIndexOf('.',  index);  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  int  n  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.',    index);    int  n  =  source.lastIndexOf('.',  index);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	6	None	add
22	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  char  n  =  source.lastIndexOf('.',  index);  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  char  n  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.',    index);    char  n  =  source.lastIndexOf('.',  index);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	6	None	add
23	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  Integer  n  =  source.lastIndexOf('.',  index);  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  Integer  n  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.',    index);    Integer  n  =  source.lastIndexOf('.',  index);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	6	None	add
24	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  Int  n  =  source.lastIndexOf('.',  index);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  Int  n  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.',    index);    Int  n  =  source.lastIndexOf('.',  index);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
25	[BUG]  [BUGGY]  int  n  =  source.length()  +  index;  int  n  =  source.length()  +  index;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  +  index;  int  n  =  source.length()  +  index;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    index;    int  n  =  source.length()  +  index;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	1	None	add
26	[BUG]  [BUGGY]  int  n  =  source.length()  +  index;  Integer  n  =  source.length()  +  index;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  +  index;  Integer  n  =  source.length()  +  index;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    index;    Integer  n  =  source.length()  +  index;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	1	None	add
27	[BUG]  [BUGGY]  int  n  =  source.length()  +  index;  char  n  =  source.length()  +  index;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  +  index;  char  n  =  source.length()  +  index;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    index;    char  n  =  source.length()  +  index;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	1	None	add
28	[BUG]  [BUGGY]  int  n  =  source.length()  +  index;  int  n  =  source.length()  +  index);  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  +  index;  int  n  =  source.length()  +  index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    index;    int  n  =  source.length()  +  index);	  	non-compiled	[CE]  ';'  expected	1	None	add
29	[BUG]  [BUGGY]  char  ret  =  source.lastIndexOf('.');  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    String    ret    =    source.lastIndexOf('.');    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
30	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  String  ret  =  source.lastIndexOf('.');  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  String  ret  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  index);  String  ret  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    String    ret    =    source.lastIndexOf('.');    	non-compiled	[CE]  incompatible  types	43	None	replace
31	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  String  ret  =  source.lastIndexOf('.',  index);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.');  String  ret  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.');  String  ret  =  source.lastIndexOf('.',  index);	  int    n    =    source.lastIndexOf('.');    String    ret    =    source.lastIndexOf('.');    	non-compiled	[CE]  incompatible  types	43	None	replace
32	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length()  +  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	Integer  n  =  source.length()  +  1;	  Integer    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	50	4	replace
33	[BUG]  [BUGGY]  Integer  n  =  source.length()  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length()  +  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer  n  =  source.length()  +  1;	  Integer    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	50	4	replace
34	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	Integer  n  =  source.lastIndexOf('.');	  Integer    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	50	18	replace
35	[BUG]  [BUGGY]  Integer  n  =  source.lastIndexOf('.');  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer  n  =  source.lastIndexOf('.');	  Integer    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	50	18	replace
36	[BUG]  [BUGGY]  Integer  n  =  pos.length();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  pos.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer  n  =  pos.length();	  Integer    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
37	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  pos.setIndex(index  +  1);  int  n  =  source.length();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	pos.setIndex(index  +  1);  int  n  =  source.length();	          pos.setIndex(index);    int    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	52	2	replace
38	[BUG]  [BUGGY]  pos.setIndex(index  +  1);  int  n  =  source.length();  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  pos.setIndex(index  +  1);  int  n  =  source.length();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	pos.setIndex(index  +  1);  int  n  =  source.length();	          pos.setIndex(index);    int    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	52	2	replace
39	[BUG]  [BUGGY]  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  n  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  parseNextCharacter(source,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	parseNextCharacter(source,  pos);	  pos.setIndex(index++);    	non-compiled	[CE]  cannot  find  symbol  n	16	None	replace
40	[BUG]  [BUGGY]  int  n  =  source.length();  Int  n  =  source.length();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length();  Int  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length();  Int  n  =  source.length();	  int    n    =    source.length()    -    1;    Int    n    =    source.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
41	[BUG]  [BUGGY]  n  =  source.lastIndexOf('.');  [CE]  cannot  find  symbol  n  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	n  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    int    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
42	[BUG]  [BUGGY]  Integer  n  =  source.length();  Integer  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length();  Integer  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer    n    =    source.length();    Integer  n  =  source.length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	49	None	add
43	[BUG]  [BUGGY]  Integer  n  =  source.length();  char  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length();  char  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer    n    =    source.length();    char  n  =  source.length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	49	None	add
44	[BUG]  [BUGGY]  Integer  n  =  source.length();  String  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length();  String  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer    n    =    source.length();    String  n  =  source.length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	49	None	add
45	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index);  pos.setIndex(index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	                pos.setIndex(index);        pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
46	[BUG]  [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index);  pos.setIndex(index);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index);  pos.setIndex(index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	2	add
47	[BUG]  [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index);  pos.setIndex(index;  [CE]  ')'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index);  pos.setIndex(index;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index;	  	non-compiled	[CE]  ')'  expected	20	None	add
48	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  pos.setIndex(index);  parseNextCharacter(source,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	                pos.setIndex(index);        parseNextCharacter(source,    pos);    pos.setIndex(index);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	22	26	add
49	[BUG]  [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  pos.setIndex(index);  parseNextCharacter(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  pos.setIndex(index);  parseNextCharacter(source,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        parseNextCharacter(source,    pos);    pos.setIndex(index);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	22	26	add
50	[BUG]  [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  int  pos.setIndex(index);  parseNextCharacter(source,  pos);  [CE]  ';'  expected  [FE]      StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  int  pos.setIndex(index);  parseNextCharacter(source,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        parseNextCharacter(source,    pos);    int  pos.setIndex(index);  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  ';'  expected	22	None	add
51	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	46	None	replace
52	[BUG]  [BUGGY]  String  ret  =  parseNextCharacter(source,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  ret  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  ret  =  parseNextCharacter(source,  pos.getIndex());	  char    ret    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	46	None	replace
53	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  index,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  index,  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  index,  pos.getIndex());	  char    ret    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	46	None	replace
54	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos.getIndex(),  index);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  pos.getIndex(),  index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos.getIndex(),  index);	  char    ret    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	46	None	replace
55	[BUG]  [BUGGY]  int  index  =  source.length();  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  index  =  source.length();  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  index  =  source.length();	          pos.setIndex(index);    int    index    =    source.length();    	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	53	None	replace
56	[BUG]  [BUGGY]  pos.setIndex(index);  int  index  =  source.length()  +  1;  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  pos.setIndex(index);  int  index  =  source.length()  +  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	pos.setIndex(index);  int  index  =  source.length()  +  1;	          pos.setIndex(index);    int    index    =    source.length();    	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	53	None	replace
57	[BUG]  [BUGGY]  pos.setIndex(index  +  3);  [CE]  cannot  find  symbol  n  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  pos.setIndex(index  +  3);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	pos.setIndex(index  +  3);	  pos.setIndex(index    +    1);    	non-compiled	[CE]  cannot  find  symbol  n	15	None	replace
58	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++).replace('n',  'r',  pos);  [CE]  char  cannot  be  dereferenced  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++).replace('n',  'r',  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++).replace('n',  'r',  pos);	  char    ret    =    source.charAt(index++).replace('n',    'r');    	non-compiled	[CE]  char  cannot  be  dereferenced	47	None	replace
59	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++).replace('n',  'r'  +  1);  [CE]  char  cannot  be  dereferenced  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++).replace('n',  'r'  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++).replace('n',  'r'  +  1);	  char    ret    =    source.charAt(index++).replace('n',    'r');    	non-compiled	[CE]  char  cannot  be  dereferenced	47	None	replace
60	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++).replace('N',  'r');  [CE]  char  cannot  be  dereferenced  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++).replace('N',  'r');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++).replace('N',  'r');	  char    ret    =    source.charAt(index++).replace('n',    'r');    	non-compiled	[CE]  char  cannot  be  dereferenced	47	None	replace
61	[BUG]  [BUGGY]  int  n  =  source.indexOf('.');  int  n  =  source.indexOf('.');  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.');  int  n  =  source.indexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.indexOf('.');    int  n  =  source.indexOf('.');	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	9	None	add
62	[BUG]  [BUGGY]  int  n  =  source.indexOf('.');  char  n  =  source.indexOf('.');  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.');  char  n  =  source.indexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.indexOf('.');    char  n  =  source.indexOf('.');	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	9	None	add
63	[BUG]  [BUGGY]  int  n  =  source.indexOf('.');  Int  n  =  source.indexOf('.');  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.');  Int  n  =  source.indexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.indexOf('.');    Int  n  =  source.indexOf('.');	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
64	[BUG]  [BUGGY]  char  n  =  source.length();  int  n  =  source.length();  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  n  =  source.length();  int  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  n  =  source.length();  int  n  =  source.length();	  int    n    =    source.length()    -    1;    int    n    =    source.length()    -    1;    	non-compiled	[CE]  possible  loss  of  precision	36	None	replace
65	[BUG]  [BUGGY]  String  ret  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  ret  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  ret  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  String    ret    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	34	None	replace
66	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }  [CE]  cannot  find  symbol  n  [FE]    StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }	          pos.setIndex(index);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	23	None	replace
67	[BUG]  [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }  [CE]  cannot  find  symbol  n  [FE]      StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  >=  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }	          pos.setIndex(index);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	23	None	replace
68	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }	          pos.setIndex(index);    parseNextCharacter(source,    pos));    	non-compiled	[CE]  ';'  expected	25	None	replace
69	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(index);    parseNextCharacter(source,    pos));    	non-compiled	[CE]  	25	None	replace
70	[BUG]  [BUGGY]  int  n  =  source.length();  char  ret  =  source.charAt(index++);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length();  char  ret  =  source.charAt(index++);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length();  char  ret  =  source.charAt(index++);	  int    n    =    source.length()    +    1;    char    ret    =    source.charAt(index++);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	31	None	replace
71	[BUG]  [BUGGY]  int  n  =  source.length();  String  ret  =  source.charAt(index++);  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length();  String  ret  =  source.charAt(index++);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length();  String  ret  =  source.charAt(index++);	  int    n    =    source.length()    +    1;    char    ret    =    source.charAt(index++);    	non-compiled	[CE]  incompatible  types	31	None	replace
72	[BUG]  [BUGGY]  Integer  n  =  source.length();  String  ret  =  source.charAt(index++);  [CE]  incompatible  types  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length();  String  ret  =  source.charAt(index++);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer  n  =  source.length();  String  ret  =  source.charAt(index++);	  int    n    =    source.length()    +    1;    char    ret    =    source.charAt(index++);    	non-compiled	[CE]  incompatible  types	31	None	replace
73	[BUG]  [BUGGY]  String  ret  =  parseNextCharacter(source,  index);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  ret  =  parseNextCharacter(source,  index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  ret  =  parseNextCharacter(source,  index);	  char    ret    =    parseNextCharacter(source,    index);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	32	None	replace
74	[BUG]  [BUGGY]  char  ret  =  source.charAt(index  +  1,  index);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index  +  1,  index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index  +  1,  index);	  char    ret    =    source.charAt(index    +    2);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	41	None	replace
75	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  Integer  n  =  source.lastIndexOf('.');  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  Integer  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  index);  Integer  n  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    Integer    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	replace
76	[BUG]  [BUGGY]  char  ret  =  source.charAt(index,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(index,    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	40	None	replace
77	[BUG]  [BUGGY]  char  ret  =  source.charAt(index,  pos,  n);  [CE]  cannot  find  symbol  n  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index,  pos,  n);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index,  pos,  n);	  char    ret    =    source.charAt(index,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	40	None	replace
78	[BUG]  [BUGGY]  char  ret  =  source.charAt(index,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index,  pos  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index,  pos  +  1);	  char    ret    =    source.charAt(index,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	40	None	replace
79	[BUG]  [BUGGY]  char  ret  =  source.charAt(index,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(index,    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	40	None	replace
80	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(index++,    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	4	None	replace
81	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  pos,  n);  [CE]  cannot  find  symbol  n  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  pos,  n);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  pos,  n);	  char    ret    =    source.charAt(index++,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	4	None	replace
82	[BUG]  [BUGGY]  int  n  =  source.length();  char  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length();  char  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length();  char  n  =  source.length();	  int    n    =    source.length()    +    1;    char    n    =    source.length()    +    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	30	None	replace
83	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index  +  1);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.lastIndexOf('.',  index  +  1);	  int    n    =    source.lastIndexOf('.',    index);    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	26	replace
84	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index  +  1);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  index  +  1);	  int    n    =    source.lastIndexOf('.',    index);    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	26	replace
85	[BUG]  [BUGGY]  char  n  =  source.lastIndexOf('.',  index);  [CE]  possible  loss  of  precision  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  n  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  n  =  source.lastIndexOf('.',  index);	  int    n    =    source.lastIndexOf('.',    index);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
86	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.indexOf('.',  index);	  int    n    =    source.lastIndexOf('.',    index);    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	18	replace
87	[BUG]  [BUGGY]  int  n  =  source.indexOf('.',  index);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.indexOf('.',  index);	  int    n    =    source.lastIndexOf('.',    index);    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	18	replace
88	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  int  n  =  source.lastIndexOf('.')-  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  int  n  =  source.lastIndexOf('.')-  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.')-    1;    int  n  =  source.lastIndexOf('.')-  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	18	None	add
89	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  char  n  =  source.lastIndexOf('.')-  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  char  n  =  source.lastIndexOf('.')-  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.')-    1;    char  n  =  source.lastIndexOf('.')-  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	18	None	add
90	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  char  ret  =  source.lastIndexOf('.')-  1;  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  char  ret  =  source.lastIndexOf('.')-  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.')-    1;    char  ret  =  source.lastIndexOf('.')-  1;	  	non-compiled	[CE]  possible  loss  of  precision	18	None	add
91	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  Int  n  =  source.lastIndexOf('.')-  1;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  Int  n  =  source.lastIndexOf('.')-  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.')-    1;    Int  n  =  source.lastIndexOf('.')-  1;	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
92	[BUG]  [BUGGY]  n  =  source.length()  +  1;  [CE]  cannot  find  symbol  n  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  n  =  source.length()  +  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	n  =  source.length()  +  1;	  n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol  n	35	None	replace
93	[BUG]  [BUGGY]  pos.length();  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  pos.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	pos.length();	  n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
94	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  index  +  1);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(0,  index  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(0,  index  +  1);	  char    ret    =    source.charAt(0,    index++);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	55	None	replace
95	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  index);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(0,  index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(0,  index);	  char    ret    =    source.charAt(0,    index++);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	55	None	replace
96	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  index,  pos.length());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(0,  index,  pos.length());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(0,  index,  pos.length());	  char    ret    =    source.charAt(0,    index++);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
97	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.')/  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.lastIndexOf('.')/  1;	  int    n    =    source.lastIndexOf('.')-    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	18	replace
98	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.')/  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.')/  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.')/  1;	  int    n    =    source.lastIndexOf('.')-    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	18	replace
99	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index)-  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.lastIndexOf('.',  index)-  1;	  int    n    =    source.lastIndexOf('.')-    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	26	replace
100	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index)-  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index)-  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  index)-  1;	  int    n    =    source.lastIndexOf('.')-    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	26	replace
101	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.')-  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.indexOf('.')-  1;	  int    n    =    source.lastIndexOf('.')-    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	25	replace
102	[BUG]  [BUGGY]  int  n  =  source.indexOf('.')-  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.')-  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.indexOf('.')-  1;	  int    n    =    source.lastIndexOf('.')-    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	25	replace
103	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  *  index;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.length()  *  index;	  int    n    =    source.length()    +    index;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
104	[BUG]  [BUGGY]  int  n  =  source.length()  *  index;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  *  index;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length()  *  index;	  int    n    =    source.length()    +    index;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
105	[BUG]  [BUGGY]  String  ret  =  parseNextCharacter(source,  pos)+  1;  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  ret  =  parseNextCharacter(source,  pos)+  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  ret  =  parseNextCharacter(source,  pos)+  1;	  char    ret    =    parseNextCharacter(source,    pos)+    1;    	non-compiled	[CE]  incompatible  types	45	None	replace
106	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos)+  2;  [CE]  possible  loss  of  precision  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  pos)+  2;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos)+  2;	  char    ret    =    parseNextCharacter(source,    pos)+    1;    	non-compiled	[CE]  possible  loss  of  precision	45	None	replace
107	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  index)+  1;  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  index)+  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  index)+  1;	  char    ret    =    parseNextCharacter(source,    pos)+    1;    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	45	None	replace
108	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index;  }  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index;  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index;  }	          pos.setIndex(index);    pos.setIndex(index;    	non-compiled	[CE]  ')'  expected	54	None	replace
109	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(index);    pos.setIndex(index;    	non-compiled	[CE]  	54	None	replace
110	[BUG]  [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos,  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index  +  1,  pos,  pos);	  char    ret    =    source.charAt(index    +    1,    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	42	None	replace
111	[BUG]  [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index  +  1,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(index    +    1,    pos);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	42	None	replace
112	[BUG]  [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos,  n);  [CE]  cannot  find  symbol  n  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos,  n);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index  +  1,  pos,  n);	  char    ret    =    source.charAt(index    +    1,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	42	None	replace
113	[BUG]  [BUGGY]  char  ret  =  source.charAt(index  +  1,  n);  [CE]  cannot  find  symbol  n  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index  +  1,  n);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index  +  1,  n);	  char    ret    =    source.charAt(index    +    1,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	42	None	replace
114	[BUG]  [BUGGY]  char  n  =  source.indexOf('.');  [CE]  possible  loss  of  precision  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  n  =  source.indexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  n  =  source.indexOf('.');	  int    n    =    source.indexOf('.');    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
115	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.',  index  +  1);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.indexOf('.',  index  +  1);	  int    n    =    source.indexOf('.');    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	18	replace
116	[BUG]  [BUGGY]  int  n  =  source.indexOf('.',  index  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.',  index  +  1);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.indexOf('.',  index  +  1);	  int    n    =    source.indexOf('.');    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	18	replace
117	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index);  }  [CE]  cannot  find  symbol  n  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index);  }	          pos.setIndex(index);    pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  n	21	None	replace
118	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  n  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(index);    pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  n	21	None	replace
119	[BUG]  [BUGGY]  String  n  =  source.length()  +  1;  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  n  =  source.length()  +  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  n  =  source.length()  +  1;	  String    n    =    source.length();    	non-compiled	[CE]  incompatible  types	26	None	replace
120	[BUG]  [BUGGY]  String  n  =  source.length()  +  index;  [CE]  incompatible  types  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  n  =  source.length()  +  index;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  n  =  source.length()  +  index;	  String    n    =    source.length();    	non-compiled	[CE]  incompatible  types	26	None	replace
121	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  DEFAULT_IMAGINARY_CHARACTER.getIndex());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  DEFAULT_IMAGINARY_CHARACTER.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  DEFAULT_IMAGINARY_CHARACTER.getIndex());	  char    ret    =    source.charAt(index++,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
122	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    source.charAt(index++,    pos.getIndex());    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	48	None	replace
123	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  pos.getIndex()  -  1);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  pos.getIndex()  -  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  pos.getIndex()  -  1);	  char    ret    =    source.charAt(index++,    pos.getIndex());    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	48	None	replace
124	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  DEFAULT_IMAGINARY_CHARACTER,  pos.getIndex());  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  DEFAULT_IMAGINARY_CHARACTER,  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  DEFAULT_IMAGINARY_CHARACTER,  pos.getIndex());	  char    ret    =    source.charAt(index++,    pos.getIndex());    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	48	None	replace
125	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Character  n  =  source.charAt(index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	Character  n  =  source.charAt(index);	  Character    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	27	4	replace
126	[BUG]  [BUGGY]  Character  n  =  source.charAt(index);  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Character  n  =  source.charAt(index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Character  n  =  source.charAt(index);	  Character    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	27	4	replace
127	[BUG]  [BUGGY]  Character  n  =  source.length()  +  1;  [CE]  incompatible  types  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Character  n  =  source.length()  +  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Character  n  =  source.length()  +  1;	  Character    n    =    source.length();    	non-compiled	[CE]  incompatible  types	27	None	replace
128	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  char  n  =  source.lastIndexOf('.');  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  char  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  index);  char  n  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    char    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	12	None	replace
129	[BUG]  [BUGGY]  char  ret  =  source.charAt(++index);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(++index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(++index);	  char    ret    =    source.charAt(index++    +    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	5	None	replace
130	[BUG]  [BUGGY]  Integer  n  =  source.length();  Number  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length();  Number  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer    n    =    source.length();    Number  n  =  source.length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	49	None	add
131	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    parseNextCharacter(source,    pos,    index);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	33	None	replace
132	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index  +  1);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos,  index  +  1);	  char    ret    =    parseNextCharacter(source,    pos,    index);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	33	None	replace
133	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index,  imaginaryCharacter);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index,  imaginaryCharacter);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos,  index,  imaginaryCharacter);	  char    ret    =    parseNextCharacter(source,    pos,    index);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	33	None	replace
134	[BUG]  [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  >=  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }	          pos.setIndex(index);    parseNextCharacter(source,    pos));    	non-compiled	[CE]  ';'  expected	25	None	replace
135	[BUG]  [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  pos.setIndex(index;  }  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  pos.setIndex(index;  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  >=  0)  {  pos.setIndex(index);  pos.setIndex(index;  }	          pos.setIndex(index);    pos.setIndex(index;    	non-compiled	[CE]  ')'  expected	54	None	replace
136	[BUG]  [BUGGY]  if(index  >=  -1)  {  pos.setIndex(index);  pos.setIndex(index;  }  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  >=  -1)  {  pos.setIndex(index);  pos.setIndex(index;  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  >=  -1)  {  pos.setIndex(index);  pos.setIndex(index;  }	          pos.setIndex(index);    pos.setIndex(index;    	non-compiled	[CE]  ')'  expected	54	None	replace
137	[BUG]  [BUGGY]  int  n  =  source.indexOf('.');  Int  n  =  source.lastIndexOf('.');  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.');  Int  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.indexOf('.');  Int  n  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    Int    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
138	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  Int  n  =  source.lastIndexOf('.',  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.');  Int  n  =  source.lastIndexOf('.',  pos);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.');  Int  n  =  source.lastIndexOf('.',  pos);	  int    n    =    source.lastIndexOf('.');    Int    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
139	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  pos.getIndex()  +  1);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  pos.getIndex()  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  pos.getIndex()  +  1);	  char    ret    =    source.charAt(index++,    pos.getIndex());    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	48	None	replace
140	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  String  ret  =  source.lastIndexOf('.',  index);  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  String  ret  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.',    index);    String  ret  =  source.lastIndexOf('.',  index);	  	non-compiled	[CE]  incompatible  types	6	None	add
141	[BUG]  [BUGGY]  if(index  ==  -1)  {  pos.setIndex(index);  int  index  =  source.length();  }  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  ==  -1)  {  pos.setIndex(index);  int  index  =  source.length();  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  ==  -1)  {  pos.setIndex(index);  int  index  =  source.length();  }	          pos.setIndex(index);    int    index    =    source.length();    	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	53	None	replace
142	[BUG]  [BUGGY]  String  n  =  source.charAt(index);  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  n  =  source.charAt(index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  n  =  source.charAt(index);	  String    n    =    source.length();    	non-compiled	[CE]  incompatible  types	26	None	replace
143	[BUG]  [BUGGY]  Char  n  =  source.charAt(0);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Char  n  =  source.charAt(0);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Char  n  =  source.charAt(0);	  Char    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
144	[BUG]  [BUGGY]  int  n  =  source.length()  +  index;  String  n  =  source.length()  +  index;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  +  index;  String  n  =  source.length()  +  index;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    index;    String  n  =  source.length()  +  index;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	1	None	add
145	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  Integer  n  =  source.lastIndexOf('.',  index);  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.');  Integer  n  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.');  Integer  n  =  source.lastIndexOf('.',  index);	  int    n    =    source.lastIndexOf('.');    Integer    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	13	None	replace
146	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(index);  pos.setIndex(index);  }  [CE]  cannot  find  symbol  n  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(source!=  null)  {  pos.setIndex(index);  pos.setIndex(index);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(source!=  null)  {  pos.setIndex(index);  pos.setIndex(index);  }	          pos.setIndex(index);    pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  n	21	None	replace
147	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index);  }  else  {  System.arraycopy(source,  0,  pos.getIndex(),  source.charAt(index++));  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index);  }  else  {  System.arraycopy(source,  0,  pos.getIndex(),  source.charAt(index++));  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  pos.setIndex(index);  }  else  {  System.arraycopy(source,  0,  pos.getIndex(),  source.charAt(index++));  }	          pos.setIndex(index);    pos.setIndex(index);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	21	None	replace
148	[BUG]  [BUGGY]  String  ret  =  source.charAt(index++).replace('n',  'r');  [CE]  char  cannot  be  dereferenced  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  String  ret  =  source.charAt(index++).replace('n',  'r');  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  ret  =  source.charAt(index++).replace('n',  'r');	  char    ret    =    source.charAt(index++).replace('n',    'r');    	non-compiled	[CE]  char  cannot  be  dereferenced	47	None	replace
149	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++).replace('n',  'r')+  1;  [CE]  char  cannot  be  dereferenced  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++).replace('n',  'r')+  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++).replace('n',  'r')+  1;	  char    ret    =    source.charAt(index++).replace('n',    'r');    	non-compiled	[CE]  char  cannot  be  dereferenced	47	None	replace
150	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  Integer  n  =  source.lastIndexOf('.')-  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  Integer  n  =  source.lastIndexOf('.')-  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.')-    1;    Integer  n  =  source.lastIndexOf('.')-  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	18	None	add
151	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index++,  pos  +  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  pos  +  1);	  char    ret    =    source.charAt(index++,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	4	None	replace
152	[BUG]  [BUGGY]  Char  ret  =  parseNextCharacter(source,  pos)+  1;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Char  ret  =  parseNextCharacter(source,  pos)+  1;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Char  ret  =  parseNextCharacter(source,  pos)+  1;	  char    ret    =    parseNextCharacter(source,    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
153	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos.getIndex()  -  1);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  parseNextCharacter(source,  pos.getIndex()  -  1);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos.getIndex()  -  1);	  char    ret    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	46	None	replace
154	[BUG]  [BUGGY]  int  n  =  source.indexOf('.');  Integer  n  =  source.indexOf('.');  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.indexOf('.');  Integer  n  =  source.indexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.indexOf('.');    Integer  n  =  source.indexOf('.');	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	9	None	add
155	[BUG]  [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index;  pos.setIndex(index);  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setIndex(index;  pos.setIndex(index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        pos.setIndex(index);    pos.setIndex(index;  pos.setIndex(index);	  	non-compiled	[CE]  ')'  expected	20	None	add
156	[BUG]  [BUGGY]  Int  n  =  source.length();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Int  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Int  n  =  source.length();	  int    n    =    source.length()    -    1;    Int    n    =    source.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
157	[BUG]  [BUGGY]  Int  n  =  source.length();  Int  n  =  source.length();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Int  n  =  source.length();  Int  n  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Int  n  =  source.length();  Int  n  =  source.length();	  int    n    =    source.length()    -    1;    Int    n    =    source.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
158	[BUG]  [BUGGY]  char  n  =  source.length();  char  ret  =  source.length();  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  n  =  source.length();  char  ret  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  n  =  source.length();  char  ret  =  source.length();	  int    n    =    source.length()    +    1;    char    ret    =    source.length()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
159	[BUG]  [BUGGY]  char  n  =  source.length();  String  ret  =  source.length();  [CE]  possible  loss  of  precision  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  n  =  source.length();  String  ret  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  n  =  source.length();  String  ret  =  source.length();	  int    n    =    source.length()    +    1;    char    ret    =    source.length()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
160	[BUG]  [BUGGY]  int  n  =  source.length();  char  ret  =  source.length();  [CE]  possible  loss  of  precision  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length();  char  ret  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length();  char  ret  =  source.length();	  int    n    =    source.length()    +    1;    char    ret    =    source.length()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
161	[BUG]  [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  pos.setIndex(index);  ParsePosition  pos.setIndex(index);  parseNextCharacter(source,  pos);  [CE]  ';'  expected  [FE]    StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  pos.setIndex(index);  ParsePosition  pos.setIndex(index);  parseNextCharacter(source,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        parseNextCharacter(source,    pos);    pos.setIndex(index);  ParsePosition  pos.setIndex(index);  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  ';'  expected	22	None	add
162	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Character  n  =  source.charAt(0);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	Character  n  =  source.charAt(0);	  Character    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	27	4	replace
163	[BUG]  [BUGGY]  Character  n  =  source.charAt(0);  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Character  n  =  source.charAt(0);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Character  n  =  source.charAt(0);	  Character    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	27	4	replace
164	[BUG]  [BUGGY]  Character  n  =  source.charAtIndex(index);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Character  n  =  source.charAtIndex(index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Character  n  =  source.charAtIndex(index);	  Character    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
165	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  pos);  [CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  pos);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  pos);	  int    n    =    source.lastIndexOf('.',    index);    	non-compiled	[CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)	7	None	replace
166	[BUG]  [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  int  pos.setIndex(index);  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  int  pos.setIndex(index);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  >=  0)  {  pos.setIndex(index);  int  pos.setIndex(index);  }	          pos.setIndex(index);    int    pos.setIndex(index);    	non-compiled	[CE]  ';'  expected	24	None	replace
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length()  -  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	Integer  n  =  source.length()  -  1;	  Integer    n    =    source.length();    	compilable	  [FE]  AssertionFailedError  	50	2	replace
168	[BUG]  [BUGGY]  Integer  n  =  source.length()  -  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length()  -  1;  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer  n  =  source.length()  -  1;	  Integer    n    =    source.length();    	compilable	  [FE]  AssertionFailedError  	50	2	replace
169	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  pos);  Integer  n  =  source.lastIndexOf('.');  [CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  pos);  Integer  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  pos);  Integer  n  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    Integer    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  no  suitable  method  found  for  lastIndexOf(char,ParsePosition)	13	None	replace
170	[BUG]  [BUGGY]  char  ret  =  source.charAt(index,  index++);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index,  index++);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index,  index++);	  char    ret    =    source.charAt(0,    index++);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	55	None	replace
171	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(index);  pos.setIndex(index;  }  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(index);  pos.setIndex(index;  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(!Character.isWhitespace(source))  {  pos.setIndex(index);  pos.setIndex(index;  }	          pos.setIndex(index);    pos.setIndex(index;    	non-compiled	[CE]  ')'  expected	54	None	replace
172	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(index);  pos.setIndex(index);  }  [CE]  no  suitable  method  found  for  isWhitespace(String)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(index);  pos.setIndex(index);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(!Character.isWhitespace(source))  {  pos.setIndex(index);  pos.setIndex(index);  }	          pos.setIndex(index);    pos.setIndex(index;    	non-compiled	[CE]  no  suitable  method  found  for  isWhitespace(String)	54	None	replace
173	[BUG]  [BUGGY]  int  n  =  source.length()  +  index;  Int  n  =  source.length()  +  index;  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length()  +  index;  Int  n  =  source.length()  +  index;  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    index;    Int  n  =  source.length()  +  index;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
174	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  char  ret  =  source.lastIndexOf('.',  index);  [CE]  possible  loss  of  precision  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  char  ret  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.',    index);    char  ret  =  source.lastIndexOf('.',  index);	  	non-compiled	[CE]  possible  loss  of  precision	6	None	add
175	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.lastIndexOf( ". ");  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	Integer  n  =  source.lastIndexOf( ". ");	  Integer    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	50	18	replace
176	[BUG]  [BUGGY]  Integer  n  =  source.lastIndexOf( ". ");  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.lastIndexOf( ". ");  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer  n  =  source.lastIndexOf( ". ");	  Integer    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	50	18	replace
177	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(!Character.isWhitespace(source))  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }	          pos.setIndex(index);    parseNextCharacter(source,    pos));    	non-compiled	[CE]  ';'  expected	25	None	replace
178	[BUG]  [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  >=  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(index);    parseNextCharacter(source,    pos));    	non-compiled	[CE]  	25	None	replace
179	[BUG]  [BUGGY]  int  n  =  source.length();  char  n  =  source.lastIndexOf('.');  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.length();  char  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length();  char  n  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    char    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	12	None	replace
180	[BUG]  [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  pos.setIndex(index);  ParseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  pos.setIndex(index);  ParseNextCharacter(source,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        parseNextCharacter(source,    pos);    pos.setIndex(index);  ParseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
181	[BUG]  [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  pos.setIndex(index);  parseNextCharacter(Source,  pos);  [CE]  cannot  find  symbol  Source  [FE]      StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    parseNextCharacter(source,  pos);  pos.setIndex(index);  parseNextCharacter(Source,  pos);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        parseNextCharacter(source,    pos);    pos.setIndex(index);  parseNextCharacter(Source,  pos);	  	non-compiled	[CE]  cannot  find  symbol  Source	22	None	add
182	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  int  n  =  source.length();  }  [CE]  cannot  find  symbol  n  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  int  n  =  source.length();  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  int  n  =  source.length();  }	          pos.setIndex(index);    int    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol  n	52	None	replace
183	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  int  n  =  source.length();  }  else  {  parseNextCharacter(source,  pos);  }  [CE]  cannot  find  symbol  n  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  int  n  =  source.length();  }  else  {  parseNextCharacter(source,  pos);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  int  n  =  source.length();  }  else  {  parseNextCharacter(source,  pos);  }	          pos.setIndex(index);    int    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol  n	52	None	replace
184	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  int  n  =  source.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  n  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  int  n  =  source.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  int  n  =  source.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(index);    int    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol  n	52	None	replace
185	[BUG]  [BUGGY]  pos.setIndex(index  +  1,  source.charAt(0));  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  pos.setIndex(index  +  1,  source.charAt(0));  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	pos.setIndex(index  +  1,  source.charAt(0));	  pos.setIndex(index    +    1);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	15	None	replace
186	[BUG]  [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setPosition(index);  pos.setPosition(index);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setPosition(index);  pos.setPosition(index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        pos.setIndex(index);    pos.setPosition(index);  pos.setPosition(index);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
187	[BUG]  [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setIndent(index);  pos.setIndex(index);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]          pos.setIndex(index);    pos.setIndex(index);  pos.setIndent(index);  pos.setIndex(index);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	                pos.setIndex(index);        pos.setIndex(index);    pos.setIndent(index);  pos.setIndex(index);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
188	[BUG]  [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos.getIndex());  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos.getIndex());  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index  +  1,  pos.getIndex());	  char    ret    =    source.charAt(index    +    2);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	41	None	replace
189	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  Int  n  =  source.lastIndexOf('.');  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  Int  n  =  source.lastIndexOf('.');  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  index);  Int  n  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    Int    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
190	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  Int  n  =  source.lastIndexOf('.',  index);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.');  Int  n  =  source.lastIndexOf('.',  index);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.');  Int  n  =  source.lastIndexOf('.',  index);	  int    n    =    source.lastIndexOf('.');    Int    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
191	[BUG]  [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  }  else  {  pos.setIndex(index);  }  [CE]  cannot  find  symbol  n  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  >=  0)  {  pos.setIndex(index);  }  else  {  pos.setIndex(index);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  >=  0)  {  pos.setIndex(index);  }  else  {  pos.setIndex(index);  }	          pos.setIndex(index);    int    pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  n	24	None	replace
192	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(index);  pos.setIndex(index);  }  [CE]  cannot  find  symbol  n  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(source  ==  null)  {  pos.setIndex(index);  pos.setIndex(index);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(source  ==  null)  {  pos.setIndex(index);  pos.setIndex(index);  }	          pos.setIndex(index);    pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  n	21	None	replace
193	[BUG]  [BUGGY]  double  n  =  source.length();  char  ret  =  source.length();  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  double  n  =  source.length();  char  ret  =  source.length();  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	double  n  =  source.length();  char  ret  =  source.length();	  int    n    =    source.length()    +    1;    char    ret    =    source.length()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
194	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  0);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.lastIndexOf('.',  0);	  int    n    =    source.lastIndexOf('.',    index);    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	26	replace
195	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  0);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  int  n  =  source.lastIndexOf('.',  0);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  0);	  int    n    =    source.lastIndexOf('.',    index);    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	26	replace
196	[BUG]  [BUGGY]  Integer  n  =  source.length();  char  ret  =  source.charAt(index++);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Integer  n  =  source.length();  char  ret  =  source.charAt(index++);  [BUGGY]      char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer  n  =  source.length();  char  ret  =  source.charAt(index++);	  int    n    =    source.length()    +    1;    char    ret    =    source.charAt(index++);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	31	None	replace
197	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }  [CE]  no  suitable  method  found  for  isWhitespace(String)  [FE]    StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(!Character.isWhitespace(source))  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }	          pos.setIndex(index);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  no  suitable  method  found  for  isWhitespace(String)	23	None	replace
198	[BUG]  [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  n  [FE]      StackOverflowError    [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	if(index  <  0)  {  pos.setIndex(index);  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(index);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	23	None	replace
199	[BUG]  [BUGGY]  Char  ret  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();      [BUGGY]  Char  ret  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Char  ret  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  char    ret    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
