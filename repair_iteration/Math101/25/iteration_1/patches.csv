bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  +  index;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.length()  +  index;	      int    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	4	replace
2	[BUG]  [BUGGY]  int  n  =  source.length()  +  index;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  +  index;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.length()  +  index;	      int    n    =    source.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	4	replace
3	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  index);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(index++,  index);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  index);	      char    ret    =    source.charAt(index++);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	2	None	replace
4	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(index++,  pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  pos);	      char    ret    =    source.charAt(index++);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	2	None	replace
5	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++  +  1);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(index++  +  1);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++  +  1);	      char    ret    =    source.charAt(index++);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	2	None	replace
6	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.lastIndexOf('.',  index);	  int    n    =    source.lastIndexOf('.');    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	26	replace
7	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.lastIndexOf('.',  index);  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.',  index);	  int    n    =    source.lastIndexOf('.');    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	26	replace
8	[BUG]  [BUGGY]  char  n  =  source.lastIndexOf('.');  [CE]  possible  loss  of  precision  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  n  =  source.lastIndexOf('.');  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  n  =  source.lastIndexOf('.');	  int    n    =    source.lastIndexOf('.');    	non-compiled	[CE]  possible  loss  of  precision	13	None	replace
9	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.indexOf('.');  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.indexOf('.');	  int    n    =    source.lastIndexOf('.');    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	25	replace
10	[BUG]  [BUGGY]  int  n  =  source.indexOf('.');  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.indexOf('.');  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.indexOf('.');	  int    n    =    source.lastIndexOf('.');    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	25	replace
11	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  int  n  =  source.lastIndexOf('.');  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.lastIndexOf('.');  int  n  =  source.lastIndexOf('.');  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.');    int  n  =  source.lastIndexOf('.');	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	12	None	add
12	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  char  n  =  source.lastIndexOf('.');  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.lastIndexOf('.');  char  n  =  source.lastIndexOf('.');  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.');    char  n  =  source.lastIndexOf('.');	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	12	None	add
13	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  Integer  n  =  source.lastIndexOf('.');  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.lastIndexOf('.');  Integer  n  =  source.lastIndexOf('.');  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.');    Integer  n  =  source.lastIndexOf('.');	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	12	None	add
14	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  Int  n  =  source.lastIndexOf('.');  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.lastIndexOf('.');  Int  n  =  source.lastIndexOf('.');  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.');    Int  n  =  source.lastIndexOf('.');	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
15	[BUG]  [BUGGY]  pos.setIndex(index  +  1);  [CE]  cannot  find  symbol  n  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  pos.setIndex(index  +  1);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	pos.setIndex(index  +  1);	      pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  n	6	None	replace
16	[BUG]  [BUGGY]  pos.setIndex(index++);  [CE]  cannot  find  symbol  n  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  pos.setIndex(index++);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	pos.setIndex(index++);	      pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  n	6	None	replace
17	[BUG]  [BUGGY]  pos.setIndex(index  +  2);  [CE]  cannot  find  symbol  n  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  pos.setIndex(index  +  2);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	pos.setIndex(index  +  2);	      pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  n	6	None	replace
18	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	int  n  =  source.lastIndexOf('.')-  1;	  int    n    =    source.length()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	25	replace
19	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.lastIndexOf('.')-  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int  n  =  source.lastIndexOf('.')-  1;	  int    n    =    source.length()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	25	replace
20	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]      pos.setIndex(index);  pos.setIndex(index);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	        pos.setIndex(index);    pos.setIndex(index);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
21	[BUG]  [BUGGY]      pos.setIndex(index);  pos.setIndex(index);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]      pos.setIndex(index);  pos.setIndex(index);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	        pos.setIndex(index);    pos.setIndex(index);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
22	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]      pos.setIndex(index);  parseNextCharacter(source,  pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	        pos.setIndex(index);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	5	26	add
23	[BUG]  [BUGGY]      pos.setIndex(index);  parseNextCharacter(source,  pos);  [FE]  StackOverflowError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]      pos.setIndex(index);  parseNextCharacter(source,  pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	        pos.setIndex(index);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	5	26	add
24	[BUG]  [BUGGY]      pos.setIndex(index);  int  pos.setIndex(index);  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]      pos.setIndex(index);  int  pos.setIndex(index);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	        pos.setIndex(index);    int  pos.setIndex(index);	  	non-compiled	[CE]  ';'  expected	5	None	add
25	[BUG]  [BUGGY]      pos.setIndex(index);  parseNextCharacter(source,  pos));  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]      pos.setIndex(index);  parseNextCharacter(source,  pos));  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	        pos.setIndex(index);    parseNextCharacter(source,  pos));	  	non-compiled	[CE]  ';'  expected	5	None	add
26	[BUG]  [BUGGY]  String  n  =  source.length();  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  String  n  =  source.length();  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  n  =  source.length();	  char    n    =    source.length();    	non-compiled	[CE]  incompatible  types	11	None	replace
27	[BUG]  [BUGGY]  Character  n  =  source.length();  [CE]  incompatible  types  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  Character  n  =  source.length();  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Character  n  =  source.length();	  char    n    =    source.length();    	non-compiled	[CE]  incompatible  types	11	None	replace
28	[BUG]  [BUGGY]  int  n  =  source.length()  +  1;  int  n  =  source.length()  +  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  +  1;  int  n  =  source.length()  +  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    1;    int  n  =  source.length()  +  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
29	[BUG]  [BUGGY]  int  n  =  source.length()  +  1;  Integer  n  =  source.length()  +  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  +  1;  Integer  n  =  source.length()  +  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    1;    Integer  n  =  source.length()  +  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
30	[BUG]  [BUGGY]  int  n  =  source.length()  +  1;  char  n  =  source.length()  +  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  +  1;  char  n  =  source.length()  +  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    1;    char  n  =  source.length()  +  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
31	[BUG]  [BUGGY]  int  n  =  source.length()  +  1;  char  ret  =  source.charAt(index++);  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  +  1;  char  ret  =  source.charAt(index++);  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    1;    char  ret  =  source.charAt(index++);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	7	None	add
32	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  index);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  parseNextCharacter(source,  index);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  index);	      char    ret    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	14	None	replace
33	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  parseNextCharacter(source,  pos,  index);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos,  index);	      char    ret    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	14	None	replace
34	[BUG]  [BUGGY]  String  ret  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  String  ret  =  parseNextCharacter(source,  pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	String  ret  =  parseNextCharacter(source,  pos);	      char    ret    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  incompatible  types	14	None	replace
35	[BUG]  [BUGGY]  n  =  source.length();  [CE]  cannot  find  symbol  n  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  n  =  source.length();  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	n  =  source.length();	  int    n    =    source.length()    +    1;    	non-compiled	[CE]  cannot  find  symbol  n	8	None	replace
36	[BUG]  [BUGGY]  int  n  =  source.length()  -  1;  int  n  =  source.length()  -  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  -  1;  int  n  =  source.length()  -  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    -    1;    int  n  =  source.length()  -  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	9	None	add
37	[BUG]  [BUGGY]  int  n  =  source.length()  -  1;  Integer  n  =  source.length()  -  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  -  1;  Integer  n  =  source.length()  -  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    -    1;    Integer  n  =  source.length()  -  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	9	None	add
38	[BUG]  [BUGGY]  int  n  =  source.length()  -  1;  char  n  =  source.length()  -  1;  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  -  1;  char  n  =  source.length()  -  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    -    1;    char  n  =  source.length()  -  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	9	None	add
39	[BUG]  [BUGGY]  int  n  =  source.length()  -  1;  Int  n  =  source.length()  -  1;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  -  1;  Int  n  =  source.length()  -  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    -    1;    Int  n  =  source.length()  -  1;	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
40	[BUG]  [BUGGY]  char  ret  =  source.charAt(index,  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(index,  pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index,  pos);	      char    ret    =    source.charAt(index);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	1	None	replace
41	[BUG]  [BUGGY]  char  ret  =  source.charAt(index  +  2);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(index  +  2);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index  +  2);	      char    ret    =    source.charAt(index    +    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	4	None	replace
42	[BUG]  [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(index  +  1,  pos);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index  +  1,  pos);	      char    ret    =    source.charAt(index    +    1);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	4	None	replace
43	[BUG]  [BUGGY]  int  n  =  source.lastIndexOf('.');  String  ret  =  source.lastIndexOf('.');  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.lastIndexOf('.');  String  ret  =  source.lastIndexOf('.');  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.lastIndexOf('.');    String  ret  =  source.lastIndexOf('.');	  	non-compiled	[CE]  incompatible  types	12	None	add
44	[BUG]  [BUGGY]  Char  n  =  source.length();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  Char  n  =  source.length();  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Char  n  =  source.length();	  char    n    =    source.length();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
45	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos)+  1;  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  parseNextCharacter(source,  pos)+  1;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos)+  1;	      char    ret    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
46	[BUG]  [BUGGY]  char  ret  =  parseNextCharacter(source,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  parseNextCharacter(source,  pos.getIndex());	      char    ret    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	14	None	replace
47	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++).replace('n',  'r');  [CE]  char  cannot  be  dereferenced  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(index++).replace('n',  'r');  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++).replace('n',  'r');	      char    ret    =    source.charAt(index++);    	non-compiled	[CE]  char  cannot  be  dereferenced	2	None	replace
48	[BUG]  [BUGGY]  char  ret  =  source.charAt(index++,  pos.getIndex());  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(index++,  pos.getIndex());  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index++,  pos.getIndex());	      char    ret    =    source.charAt(index++);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	2	None	replace
49	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  Integer  n  =  source.length();  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	Integer  n  =  source.length();	  int    n    =    source.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	replace
50	[BUG]  [BUGGY]  Integer  n  =  source.length();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  Integer  n  =  source.length();  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	Integer  n  =  source.length();	  int    n    =    source.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	replace
51	[BUG]  [BUGGY]  char  ret  =  source.charAt(index  +  3);  [CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(index  +  3);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(index  +  3);	      char    ret    =    source.charAt(index    +    1);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	4	None	replace
52	[BUG]  [BUGGY]      pos.setIndex(index);  int  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]      pos.setIndex(index);  int  n  =  source.length();  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	        pos.setIndex(index);    int  n  =  source.length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	5	None	add
53	[BUG]  [BUGGY]      pos.setIndex(index);  int  index  =  source.length();  [CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]      pos.setIndex(index);  int  index  =  source.length();  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	        pos.setIndex(index);    int  index  =  source.length();	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  parseNextCharacter(String,ParsePosition)	5	None	add
54	[BUG]  [BUGGY]      pos.setIndex(index);  pos.setIndex(index;  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]      pos.setIndex(index);  pos.setIndex(index;  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	        pos.setIndex(index);    pos.setIndex(index;	  	non-compiled	[CE]  ')'  expected	5	None	add
55	[BUG]  [BUGGY]  char  ret  =  source.charAt(0,  index++);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  char  ret  =  source.charAt(0,  index++);  [BUGGY]    int  n  =  source.length();  char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	char  ret  =  source.charAt(0,  index++);	      char    ret    =    source.charAt(index++);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	2	None	replace
56	[BUG]  [BUGGY]  int  n  =  source.length()  +  1;  char  ret  =  source.length()  +  1;  [CE]  possible  loss  of  precision  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  char  parseNextCharacter(String  source,  ParsePosition  pos)  {  int  index  =  pos.getIndex();    [BUGGY]  int  n  =  source.length()  +  1;  char  ret  =  source.length()  +  1;  [BUGGY]    char  ret  =  0;  if  (index  <  n)  {  char  c;  do  {  c  =  source.charAt(index++);  }  while  (Character.isWhitespace(c)  &&  index  <  n);  pos.setIndex(index);  if  (index  <  n)  {  [CLASS]  ComplexFormat  [METHOD]  parseNextCharacter  [RETURN_TYPE]  char  String  source  ParsePosition  pos  [VARIABLES]  boolean  char  c  ret  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  index  n  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	int    n    =    source.length()    +    1;    char  ret  =  source.length()  +  1;	  	non-compiled	[CE]  possible  loss  of  precision	7	None	add
