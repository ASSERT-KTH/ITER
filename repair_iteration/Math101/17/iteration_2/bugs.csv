bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	7	26	add
2	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	7	26	add
3	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	add
4	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	add
5	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	add
6	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	add
7	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  int  startIndex  =  pos.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  int  startIndex  =  pos.getIndex()  +  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    +    1;    int  startIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
8	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    +    1;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
9	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  Integer  startIndex  =  pos.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  Integer  startIndex  =  pos.getIndex()  +  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    +    1;    Integer  startIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
10	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  int  initialIndex  =  pos.getIndex()  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  int  initialIndex  =  pos.getIndex()  +  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    +    1;    int  initialIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
11	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  int  pos  =  pos.getIndex()  +  1;  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  int  pos  =  pos.getIndex()  +  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    +    1;    int  pos  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
12	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  int  startIndex  =  pos.getIndex()  -  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  int  startIndex  =  pos.getIndex()  -  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    -    1;    int  startIndex  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
13	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    -    1;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
14	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  Integer  startIndex  =  pos.getIndex()  -  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  Integer  startIndex  =  pos.getIndex()  -  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    -    1;    Integer  startIndex  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
15	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  int  initialIndex  =  pos.getIndex()  -  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  int  initialIndex  =  pos.getIndex()  -  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    -    1;    int  initialIndex  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
16	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  int  pos  =  pos.getIndex()  -  1;  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  int  pos  =  pos.getIndex()  -  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    -    1;    int  pos  =  pos.getIndex()  -  1;	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
17	[BUG]  [BUGGY]  int  startIndex  =  source.getEndIndex();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  source.getEndIndex();  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getEndIndex();	  int    startIndex    =    pos.getEndIndex();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
18	[BUG]  [BUGGY]  int  startIndex  =  source.getStartIndex();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  source.getStartIndex();  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getStartIndex();	  int    startIndex    =    pos.getEndIndex();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
19	[BUG]  [BUGGY]  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  pos.setIndex(endIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(endIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	8	None	replace
20	[BUG]  [BUGGY]  pos.setIndex(startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]      AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  pos.setIndex(startIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	8	None	replace
21	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  startIndex  [FE]        AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(initialIndex  +  1);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	8	None	replace
22	[BUG]  [BUGGY]  int  startIndex  =  pos.getStartIndex()  +  1;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getStartIndex()  +  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getStartIndex()  +  1;	  int    startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
23	[BUG]  [BUGGY]  pos.setIndex(startIndex);  return  null;  [CE]  cannot  find  symbol  startIndex  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  pos.setIndex(startIndex);  return  null;  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex);  return  null;	      pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  startIndex	11	None	replace
24	[BUG]  [BUGGY]  pos.setIndex(endIndex);  return  null;  [CE]  cannot  find  symbol  endIndex  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  pos.setIndex(endIndex);  return  null;  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(endIndex);  return  null;	      pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  endIndex	11	None	replace
25	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  return  this;  [CE]  incompatible  types  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  pos.setIndex(initialIndex);  return  this;  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(initialIndex);  return  this;	      pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  incompatible  types	11	None	replace
26	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;	  int    startIndex    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
27	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  source.getIndex()  +  1;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  +  1;	  int    startIndex    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
28	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos.getIndex());	  int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	4	None	replace
29	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  getIndex());  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  n  =  parseNextCharacter(source,  getIndex());  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  getIndex());	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
30	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  startIndex);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  startIndex	9	None	replace
31	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  char  n  =  parseNextCharacter(source,  pos);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	char  n  =  parseNextCharacter(source,  pos);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  startIndex	9	None	replace
32	[BUG]  [BUGGY]  int  initialIndex  =  source.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  initialIndex  =  source.getIndex();  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  source.getIndex();	      int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
33	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  initialIndex  =  pos.getIndex()  +  1;  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  pos.getIndex()  +  1;	      int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
34	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  initialIndex  =  pos.getIndex()  -  1;  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  pos.getIndex()  -  1;	      int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
35	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  initialIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  initialIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  initialIndex);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	10	None	replace
36	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	10	None	replace
37	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  false);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  false);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  false);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	10	None	replace
38	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition());  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getPosition());	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
39	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  initialIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  initialIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  initialIndex);	      Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	15	None	replace
40	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getIndex());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Integer  n  =  parseNextCharacter(source,  getIndex());  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getIndex());	      Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
41	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Integer  n  =  parseNextCharacter(source,  startIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  startIndex);	      Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  startIndex	15	None	replace
42	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getPosition());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Integer  n  =  parseNextCharacter(source,  getPosition());  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getPosition());	      Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
43	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  return  null;  [CE]  cannot  find  symbol  startIndex  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  pos.setIndex(initialIndex  +  1);  return  null;  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(initialIndex  +  1);  return  null;	      pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  startIndex	11	None	replace
44	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	10	None	replace
45	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  Integer.MAX_VALUE);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  Integer.MAX_VALUE);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  Integer.MAX_VALUE);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	10	None	replace
46	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	ParsePosition  pos  =  parsePosition(source,  pos);	      	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
47	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  ParsePosition  pos  =  parsePosition(source);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	ParsePosition  pos  =  parsePosition(source);	      	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
48	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  Integer  n  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  Integer  n  =  parseNextCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    -    1;    Integer  n  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  incompatible  types	12	None	add
49	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  Integer  n  =  parseNextInt(source,  pos);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  Integer  n  =  parseNextInt(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    -    1;    Integer  n  =  parseNextInt(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
50	[BUG]  [BUGGY]  int  startIndex  =  re.getStartIndex();  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  re.getStartIndex();  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  re.getStartIndex();	  int    startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
51	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos)+  1;  [CE]  cannot  find  symbol  startIndex  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  n  =  parseNextCharacter(source,  pos)+  1;  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  pos)+  1;	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  startIndex	9	None	replace
52	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos.intValue());  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos.intValue());  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos.intValue());	      Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
53	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  pos);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  pos);	      Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	15	None	replace
54	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  Integer  n  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  Integer  n  =  parseNextCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int    startIndex    =    pos.getIndex()    +    1;    Integer  n  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  incompatible  types	3	None	add
55	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]      pos.setIndex(initialIndex);  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	        pos.setIndex(initialIndex);    Integer  initialIndex  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	add
56	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  pos.getIndex();  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	add
57	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  pos.getIndex());	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	9	None	replace
58	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  re);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	10	None	replace
59	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	      Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	15	None	replace
60	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source);  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }      [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source);  pos.setIndex(initialIndex);  [BUGGY]    int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  parseNextCharacter(source);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	add
