bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [CE]  cannot  find  symbol  startIndex  [FE]                AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    return    new    Complex(re.doubleValue(),    0.0);    	non-compiled	[CE]  cannot  find  symbol  startIndex	6	None	replace
2	[BUG]  [BUGGY]  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    return    new    Complex(re.doubleValue(),    0.0);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
3	[BUG]  [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    return    new    Complex(re.doubleValue(),    0.0);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
4	[BUG]  [BUGGY]  pos.setIndex(endIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [CE]  cannot  find  symbol  endIndex  [FE]                      AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(endIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    return    new    Complex(re.doubleValue(),    0.0);    	non-compiled	[CE]  cannot  find  symbol  endIndex	6	None	replace
5	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  startIndex,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  startIndex,  initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  startIndex,  initialIndex);	  Integer    n    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	39	None	replace
6	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  startIndex,  pos);	  Integer    n    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	39	None	replace
7	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  endIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  endIndex);	  Integer    n    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	39	None	replace
8	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  initialIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  initialIndex,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  initialIndex,  pos);	  Integer    n    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	39	None	replace
9	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    +    1;    int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	replace
10	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    +    1;    int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	replace
11	[BUG]  [BUGGY]  char  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [CE]  possible  loss  of  precision  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  char  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	char  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    +    1;    int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
12	[BUG]  [BUGGY]  Integer  n  =  parseNextInt(source,  pos);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextInt(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextInt(source,  pos);	  int    startIndex    =    pos.getIndex()    -    1;    Integer    n    =    parseNextInt(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
13	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextInt(source,  pos);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextInt(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextInt(source,  pos);	  int    startIndex    =    pos.getIndex()    -    1;    Integer    n    =    parseNextInt(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
14	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextInt(pos,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextInt(pos,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextInt(pos,  pos);	  int    startIndex    =    pos.getIndex()    -    1;    Integer    n    =    parseNextInt(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
15	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  Integer  n  =  parseNextInt(source,  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  pos.getIndex();  Integer  n  =  parseNextInt(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex();  Integer  n  =  parseNextInt(source,  pos);	  int    startIndex    =    pos.getIndex()    -    1;    Integer    n    =    parseNextInt(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
16	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	add	Integer  startIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    Integer    startIndex    =    pos.getIndex()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
17	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex();  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  startIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    Integer    startIndex    =    pos.getIndex()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
18	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  Integer  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  pos.getIndex();  Integer  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex();  Integer  startIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    Integer    startIndex    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
19	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  initialIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  initialIndex);	  Integer    n    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	41	None	replace
20	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  endIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  endIndex);	  Integer    n    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	41	None	replace
21	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  n);  [CE]  cannot  find  symbol  n  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  n);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  n);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  n	44	None	replace
22	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  startIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  startIndex	44	None	replace
23	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	44	None	replace
24	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [CE]  cannot  find  symbol  c  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  c	44	None	replace
25	[BUG]  [BUGGY]  int  pos  =  pos.getIndex();  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  pos  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  pos  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    int    pos    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	16	None	replace
26	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  int  pos  =  pos.getIndex();  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  pos.getIndex();  int  pos  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex();  int  pos  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    int    pos    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	16	None	replace
27	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  int  pos  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex();  int  pos  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex();  int  pos  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    int    pos    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
28	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  int  pos  =  pos.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  int  pos  =  pos.getIndex()  -  1;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  int  pos  =  pos.getIndex()  -  1;	  int    startIndex    =    pos.getIndex()    -    1;    int    pos    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
29	[BUG]  [BUGGY]  int  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	5	None	replace
30	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(endIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(endIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	5	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	add	int  startIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(startIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	5	24	replace
32	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(startIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	5	24	replace
33	[BUG]  [BUGGY]  int  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	3	None	replace
34	[BUG]  [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  startIndex	3	None	replace
35	[BUG]  [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  initialIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	3	None	replace
36	[BUG]  [BUGGY]  pos.setIndex(endIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]                AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(endIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	3	None	replace
37	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getIndex(),  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getIndex(),  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getIndex(),  pos);	  Integer    n    =    parseNextCharacter(source,    pos,    pos);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
38	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getInitialIndex(),  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getInitialIndex(),  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getInitialIndex(),  pos);	  Integer    n    =    parseNextCharacter(source,    pos,    pos);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
39	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getPosition(),  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getPosition(),  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getPosition(),  pos);	  Integer    n    =    parseNextCharacter(source,    pos,    pos);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
40	[BUG]  [BUGGY]  pos.setIndex(endIndex);  int  initialIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  endIndex  [FE]          AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  int  initialIndex  =  pos.getIndex();  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(endIndex);  int  initialIndex  =  pos.getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  endIndex	56	None	replace
41	[BUG]  [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  startIndex  [FE]            AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  pos.getIndex();  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex);  int  initialIndex  =  pos.getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  startIndex	56	None	replace
42	[BUG]  [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  initialIndex  =  pos.getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	56	None	replace
43	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  Integer  n  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex();  Integer  n  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex();  Integer  n  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    +    1;    Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
44	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getPosition()  -  1);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getPosition()  -  1);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getPosition()  -  1);	  Integer    n    =    parseNextCharacter(source,    getPosition());    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
45	[BUG]  [BUGGY]  Integer  n  =  parsePreviousCharacter(source,  getPosition());  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parsePreviousCharacter(source,  getPosition());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parsePreviousCharacter(source,  getPosition());	  Integer    n    =    parseNextCharacter(source,    getPosition());    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
46	[BUG]  [BUGGY]  int  startIndex  =  im.getStartIndex();  [CE]  cannot  find  symbol  im  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  im.getStartIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  im.getStartIndex();	  int    startIndex    =    re.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol  im	50	None	replace
47	[BUG]  [BUGGY]  pos.setIndex(endIndex  +  1);  return  null;  [CE]  cannot  find  symbol  endIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex  +  1);  return  null;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(endIndex  +  1);  return  null;	  pos.setIndex(initialIndex    +    1);    return    null;    	non-compiled	[CE]  cannot  find  symbol  endIndex	43	None	replace
48	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  1);  return  null;  [CE]  cannot  find  symbol  startIndex  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex  +  1);  return  null;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex  +  1);  return  null;	  pos.setIndex(initialIndex    +    1);    return    null;    	non-compiled	[CE]  cannot  find  symbol  startIndex	43	None	replace
49	[BUG]  [BUGGY]  int  startIndex  =  re.getIndex();  int  pos  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  re.getIndex();  int  pos  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  re.getIndex();  int  pos  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    +    1;    int    pos    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
50	[BUG]  [BUGGY]  int  initialIndex  =  source.getIndex()  -  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  initialIndex  =  source.getIndex()  -  1;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  source.getIndex()  -  1;	  int    initialIndex    =    source.getIndex();    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
51	[BUG]  [BUGGY]  int  initialIndex  =  source.getIndex()  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  initialIndex  =  source.getIndex()  +  1;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  source.getIndex()  +  1;	  int    initialIndex    =    source.getIndex();    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
52	[BUG]  [BUGGY]  int  initialIndex  =  re.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  initialIndex  =  re.getIndex();  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  re.getIndex();	  int    initialIndex    =    source.getIndex();    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
53	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  pos.getIndex();  int  initialIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex();  int  initialIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    int    initialIndex    =    pos.getIndex()    -    1;    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
54	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  int  initialIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex();  int  initialIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex();  int  initialIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    int    initialIndex    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
55	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  int  initialIndex  =  pos.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  int  initialIndex  =  pos.getIndex()  -  1;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  int  initialIndex  =  pos.getIndex()  -  1;	  int    startIndex    =    pos.getIndex()    -    1;    int    initialIndex    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
56	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos)/  1;  [CE]  cannot  find  symbol  startIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  pos)/  1;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  pos)/  1;	  int    n    =    parseNextCharacter(source,    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  startIndex	51	None	replace
57	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos)+  2;  [CE]  cannot  find  symbol  startIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  pos)+  2;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  pos)+  2;	  int    n    =    parseNextCharacter(source,    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  startIndex	51	None	replace
58	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos)-  1;  [CE]  cannot  find  symbol  startIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  pos)-  1;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  pos)-  1;	  int    n    =    parseNextCharacter(source,    pos)+    1;    	non-compiled	[CE]  cannot  find  symbol  startIndex	51	None	replace
59	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getIndex()  -  1);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getIndex()  -  1);	  Integer    n    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
60	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getIndex(),  initialIndex);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getIndex(),  initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getIndex(),  initialIndex);	  Integer    n    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
61	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  n  [FE]    AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	n.setIndex(initialIndex);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	2	None	replace
62	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]      AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	2	None	replace
63	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  initialIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  initialIndex);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	36	None	replace
64	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  infinity);  [CE]  cannot  find  symbol  infinity  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  infinity);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  infinity);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  cannot  find  symbol  infinity	36	None	replace
65	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  pos);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	36	None	replace
66	[BUG]  [BUGGY]  int  startIndex  =  source.getStartIndex()  +  1;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getStartIndex()  +  1;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getStartIndex()  +  1;	  int    startIndex    =    pos.getStartIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
67	[BUG]  [BUGGY]  int  startIndex  =  re.getStartIndex()  +  1;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  re.getStartIndex()  +  1;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  re.getStartIndex()  +  1;	  int    startIndex    =    pos.getStartIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
68	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	char  c  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    +    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	8	None	replace
69	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    +    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	8	None	replace
70	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex();  char  c  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    +    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
71	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  String  c  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  pos.getIndex();  String  c  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex();  String  c  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    +    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  incompatible  types	8	None	replace
72	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  int    startIndex    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	28	None	replace
73	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex()  -  1);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex()  -  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos.getIndex()  -  1);	  int    startIndex    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	28	None	replace
74	[BUG]  [BUGGY]  char  startIndex  =  parseNextCharacter(source,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  char  startIndex  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	char  startIndex  =  parseNextCharacter(source,  pos.getIndex());	  int    startIndex    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	28	None	replace
75	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos,  source.getIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos,  source.getIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos,  source.getIndex());	  int    startIndex    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
77	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
78	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    int  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	1	None	add
79	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    int  initialIndex  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	1	None	add
80	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
81	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    Integer  initialIndex  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	1	None	add
82	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  int    n    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	57	None	replace
83	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  char  n  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	char  n  =  parseNextCharacter(source,  pos.getIndex());	  int    n    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	57	None	replace
84	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex(),  re);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex(),  re);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  pos.getIndex(),  re);	  int    n    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	57	None	replace
85	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex(),  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex(),  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  pos.getIndex(),  pos);	  int    n    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	57	None	replace
86	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  true);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  true);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  true);	  Number    im    =    parseNextCharacter(source,    pos,    false);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	37	None	replace
87	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);	  Number    im    =    parseNextCharacter(source,    pos,    false);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	37	None	replace
88	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition(),  false);  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition(),  false);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getPosition(),  false);	  Number    im    =    parseNextCharacter(source,    pos,    false);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
89	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  false);  [CE]  cannot  find  symbol  startIndex  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  false);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  false);	  Number    im    =    parseNextCharacter(source,    pos,    false);    	non-compiled	[CE]  cannot  find  symbol  startIndex	37	None	replace
90	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  endIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  endIndex);	  int    n    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	30	None	replace
91	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  im);  [CE]  cannot  find  symbol  im  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  im);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  im);	  Integer    n    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  im	59	None	replace
92	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  startIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Integer    n    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  startIndex	59	None	replace
93	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  initialIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  initialIndex);	  Integer    n    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	59	None	replace
94	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  DEFAULT_IMAGINARY_CHARACTER,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  DEFAULT_IMAGINARY_CHARACTER,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  DEFAULT_IMAGINARY_CHARACTER,  pos);	  Integer    n    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	59	None	replace
95	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition(),  pos);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition(),  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getPosition(),  pos);	  Number    im    =    parseNextCharacter(source,    getPosition());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
96	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex());  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getIndex());	  Number    im    =    parseNextCharacter(source,    getPosition());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
97	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition()  -  1);  [CE]  cannot  find  symbol  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition()  -  1);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getPosition()  -  1);	  Number    im    =    parseNextCharacter(source,    getPosition());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
98	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getIndex());  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	ParsePosition  pos  =  parsePosition(source,  getIndex());	  ParsePosition    pos    =    parsePosition(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
99	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getInitialIndex());  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getInitialIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	ParsePosition  pos  =  parsePosition(source,  getInitialIndex());	  ParsePosition    pos    =    parsePosition(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
100	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  startIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parsePosition(source,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	ParsePosition  pos  =  parsePosition(source,  startIndex);	  ParsePosition    pos    =    parsePosition(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
101	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getRealFormat());  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getRealFormat());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	ParsePosition  pos  =  parsePosition(source,  getRealFormat());	  ParsePosition    pos    =    parsePosition(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
102	[BUG]  [BUGGY]  pos.setIndex(endIndex  +  1);  [CE]  cannot  find  symbol  endIndex  [FE]            AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex  +  1);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(endIndex  +  1);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  endIndex	21	None	replace
103	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  1);  [CE]  cannot  find  symbol  startIndex  [FE]              AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex  +  1);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex  +  1);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  startIndex	21	None	replace
104	[BUG]  [BUGGY]  int  startIndex  =  source.getStartIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getStartIndex()  -  1;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getStartIndex()  -  1;	  int    startIndex    =    source.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
105	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  char  c  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  char  c  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    -    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
106	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  String  c  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  String  c  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  String  c  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    -    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
107	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  initialIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parsePosition(source,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	ParsePosition  pos  =  parsePosition(source,  initialIndex);	  ParsePosition    pos    =    parsePosition(source);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	47	None	replace
108	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  getIndex(),  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  getIndex(),  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  getIndex(),  pos);	  int    n    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
109	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  getIndex()  -  1);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  getIndex()  -  1);	  int    n    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
110	[BUG]  [BUGGY]  int  n  =  parsePreviousCharacter(source,  getIndex());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parsePreviousCharacter(source,  getIndex());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parsePreviousCharacter(source,  getIndex());	  int    n    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
111	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex);	  Number    im    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	35	None	replace
112	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  initialIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex,  initialIndex);	  Number    im    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	35	None	replace
113	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  pos);	  Number    im    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	35	None	replace
114	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  endIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  endIndex);	  Number    im    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	35	None	replace
115	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  int  initialIndex  =  pos.getIndex()  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  pos.getIndex();  int  initialIndex  =  pos.getIndex()  +  1;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex();  int  initialIndex  =  pos.getIndex()  +  1;	  int    startIndex    =    pos.getIndex()    +    1;    int    initialIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	10	None	replace
116	[BUG]  [BUGGY]  pos.setIndex(startIndex);  return  this;  [CE]  cannot  find  symbol  startIndex  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  return  this;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex);  return  this;	  pos.setIndex(initialIndex);    return    this;    	non-compiled	[CE]  cannot  find  symbol  startIndex	25	None	replace
117	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  Integer.MAX_VALUE,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  Integer.MAX_VALUE,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  Integer.MAX_VALUE,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    Integer.MAX_VALUE);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	45	None	replace
118	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  Integer.MAX_VALUE);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  Integer.MAX_VALUE);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  Integer.MAX_VALUE);	  Number    im    =    parseNextCharacter(source,    pos,    Integer.MAX_VALUE);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	45	None	replace
119	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  Integer.MIN_VALUE,  Integer.MAX_VALUE);	  Number    im    =    parseNextCharacter(source,    pos,    Integer.MAX_VALUE);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	45	None	replace
120	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  Integer.MAX_VALUE,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  Integer.MAX_VALUE,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  Integer.MAX_VALUE,  pos);	  Number    im    =    parseNextCharacter(source,    pos,    Integer.MAX_VALUE);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	45	None	replace
121	[BUG]  [BUGGY]  String  n  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  String  n  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	String  n  =  parseNextCharacter(source,  pos);	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  incompatible  types	31	None	replace
122	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos)+  1;  [CE]  possible  loss  of  precision  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  char  n  =  parseNextCharacter(source,  pos)+  1;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	char  n  =  parseNextCharacter(source,  pos)+  1;	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  possible  loss  of  precision	31	None	replace
123	[BUG]  [BUGGY]  int  startIndex  =  source.getEndIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getEndIndex()  -  1;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getEndIndex()  -  1;	  int    startIndex    =    source.getEndIndex();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
124	[BUG]  [BUGGY]  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(InitialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(InitialIndex);	  pos.setIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	19	None	replace
125	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(re,  pos,  source);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(re,  pos,  source);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(re,  pos,  source);	  Number    im    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	58	None	replace
126	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getIndex(),  pos);	  Number    im    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
127	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  /  1;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  /  1;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  /  1;	  int    startIndex    =    source.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
128	[BUG]  [BUGGY]  int  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    source.getIndex();    pos.setIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	replace
129	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos.intValue(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos.intValue(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos.intValue(),  DEFAULT_IMAGINARY_CHARACTER);	  Integer    n    =    parseNextCharacter(source,    pos.intValue());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
130	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos.intValue(),  pos.intValue());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos.intValue(),  pos.intValue());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos.intValue(),  pos.intValue());	  Integer    n    =    parseNextCharacter(source,    pos.intValue());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
131	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos.intValue()  -  1);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos.intValue()  -  1);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos.intValue()  -  1);	  Integer    n    =    parseNextCharacter(source,    pos.intValue());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
132	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Number  im  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Number  im  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    Number  im  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  incompatible  types	1	None	add
133	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  int  initialIndex  =  pos.getIndex();  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    int  initialIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	1	None	add
134	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Integer  pos  =  getRealFormat().parseInt(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Integer  pos  =  getRealFormat().parseInt(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    Integer  pos  =  getRealFormat().parseInt(source,  pos);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	1	None	add
135	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re,  sign);  [CE]  cannot  find  symbol  sign  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re,  sign);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  re,  sign);	  Number    im    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  cannot  find  symbol  sign	58	None	replace
136	[BUG]  [BUGGY]  pos.setIndex(n);  return  null;  [CE]  cannot  find  symbol  n  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(n);  return  null;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(n);  return  null;	  pos.setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  n	23	None	replace
137	[BUG]  [BUGGY]  int  initialIndex  =  parseNextCharacter(source);  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  initialIndex  =  parseNextCharacter(source);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  parseNextCharacter(source);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source);    pos.setIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	60	None	replace
138	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  getRealFormat());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  getRealFormat());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  getRealFormat());	  int    n    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	29	None	replace
139	[BUG]  [BUGGY]  pos.setIndex(endIndex);  return  this;  [CE]  cannot  find  symbol  endIndex  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  return  this;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(endIndex);  return  this;	  pos.setIndex(initialIndex);    return    this;    	non-compiled	[CE]  cannot  find  symbol  endIndex	25	None	replace
140	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  Integer  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex();  Integer  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex();  Integer  startIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    Integer    startIndex    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
141	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos.initialIndex);  [CE]  cannot  find  symbol  initialIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  char  n  =  parseNextCharacter(source,  pos.initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	char  n  =  parseNextCharacter(source,  pos.initialIndex);	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  initialIndex	31	None	replace
142	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getRealFormat());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getRealFormat());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getRealFormat());	  Integer    n    =    parseNextCharacter(source,    getPosition());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	42	None	replace
143	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  sign);  [CE]  cannot  find  symbol  sign  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  sign);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  sign);	  Integer    n    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  sign	59	None	replace
144	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex(),  im);  [CE]  cannot  find  symbol  im  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  pos.getIndex(),  im);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  pos.getIndex(),  im);	  int    n    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  im	57	None	replace
145	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  int  initialIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  int  initialIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  int  initialIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    int    initialIndex    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
146	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	36	None	replace
147	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  realFormat);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  realFormat);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  realFormat);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	36	None	replace
148	[BUG]  [BUGGY]  pos.setIndex(ignore);  [CE]  cannot  find  symbol  ignore  [FE]          AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(ignore);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(ignore);	  pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  ignore	20	None	replace
149	[BUG]  [BUGGY]  pos.setIndex(definableIndex);  [CE]  cannot  find  symbol  definableIndex  [FE]            AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(definableIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(definableIndex);	  pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  definableIndex	20	None	replace
150	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  re.intValue());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  re.intValue());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  re.intValue());	  Integer    n    =    parseNextCharacter(source,    pos.intValue());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	52	None	replace
151	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  source.intValue());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  source.intValue());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  source.intValue());	  Integer    n    =    parseNextCharacter(source,    pos.intValue());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
152	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  Integer  n  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  pos.getIndex();  Integer  n  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex();  Integer  n  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    +    1;    Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  incompatible  types	54	None	replace
153	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex();  int  pos  =  pos.getIndex();  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  startIndex  =  pos.getIndex();  int  pos  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  startIndex  =  pos.getIndex();  int  pos  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    +    1;    int    pos    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
154	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  getIndex(),  pos);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  getIndex(),  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  getIndex(),  pos);	  int    startIndex    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
155	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex(),  defULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  defULT_IMAGINARY_CHARACTER  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex(),  defULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos.getIndex(),  defULT_IMAGINARY_CHARACTER);	  int    startIndex    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  defULT_IMAGINARY_CHARACTER	28	None	replace
156	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    -    1;    Integer    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
157	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  sign);  [CE]  cannot  find  symbol  sign  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  sign);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  sign);	  Number    im    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  sign	35	None	replace
158	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  initialIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  initialIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  initialIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	35	None	replace
159	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getRealFormat(),  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getRealFormat(),  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getRealFormat(),  pos);	  Integer    n    =    parseNextCharacter(source,    pos,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	53	None	replace
160	[BUG]  [BUGGY]  pos.setIndex(startIndex);  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  startIndex  [FE]        AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(startIndex);  Integer  initialIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(initialIndex);    Integer    initialIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  startIndex	55	None	replace
161	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  Integer.MAX_VALUE,  def);  [CE]  cannot  find  symbol  def  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  Integer.MAX_VALUE,  def);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  Integer.MAX_VALUE,  def);	  Number    im    =    parseNextCharacter(source,    pos,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  def	45	None	replace
162	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat());	  Number    im    =    parseNextCharacter(source,    getPosition());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	38	None	replace
163	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  sign);  [CE]  cannot  find  symbol  sign  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  sign);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  sign);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  sign	44	None	replace
164	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	44	None	replace
165	[BUG]  [BUGGY]  n  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  n  [FE]    AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  n  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	n  =  parseNextCharacter(source,  pos);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	2	None	replace
166	[BUG]  [BUGGY]  n.setIndex(initialIndex);  [CE]  cannot  find  symbol  n  [FE]      AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  n.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	n.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	2	None	replace
167	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getPrefix());  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getPrefix());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	ParsePosition  pos  =  parsePosition(source,  getPrefix());	  ParsePosition    pos    =    parsePosition(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
168	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  false);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  false);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  false);	  Number    im    =    parseNextCharacter(source,    pos,    false);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	37	None	replace
169	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  false);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  false);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getIndex(),  false);	  Number    im    =    parseNextCharacter(source,    pos,    false);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
170	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  sign);  [CE]  cannot  find  symbol  sign  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  sign);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  sign);	  Integer    n    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  sign	39	None	replace
171	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  cannot  find  symbol  startIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  startIndex);	  Integer    n    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	39	None	replace
172	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  initialIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  initialIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  initialIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Integer    n    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	39	None	replace
173	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  String  c  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex();  String  c  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex();  String  c  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    -    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
174	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  int  pos  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  int  pos  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  int  pos  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    int    pos    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
175	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  int  pos  =  source.getIndex();  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex();  int  pos  =  source.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex();  int  pos  =  source.getIndex();	  int    startIndex    =    pos.getIndex()    -    1;    int    pos    =    pos.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
176	[BUG]  [BUGGY]  pos.setIndex(index  +  1);  return  null;  [CE]  cannot  find  symbol  index  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(index  +  1);  return  null;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(index  +  1);  return  null;	  pos.setIndex(initialIndex    +    1);    return    null;    	non-compiled	[CE]  cannot  find  symbol  index	43	None	replace
177	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getInitialIndex());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getInitialIndex());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getInitialIndex());	  Integer    n    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
178	[BUG]  [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  initialIndex  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source);    pos.setIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	60	None	replace
179	[BUG]  [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source);  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  initialIndex  =  parseNextCharacter(source);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source);    pos.setIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	60	None	replace
180	[BUG]  [BUGGY]  pos.setIndex(deFAULT_IMAGINARY_CHARACTER);  return  null;  [CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(deFAULT_IMAGINARY_CHARACTER);  return  null;  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(deFAULT_IMAGINARY_CHARACTER);  return  null;	  pos.setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER	23	None	replace
181	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  getPosition(),  im);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  getPosition(),  im);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  getPosition(),  im);	  Integer    n    =    parseNextCharacter(source,    getPosition());    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
182	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  n);  [CE]  cannot  find  symbol  n  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  n);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  n);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  cannot  find  symbol  n	36	None	replace
183	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition(),  initialIndex);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  getPosition(),  initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  getPosition(),  initialIndex);	  Number    im    =    parseNextCharacter(source,    getPosition());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	add	int  startIndex  =  parseNextCharacter(source,  pos);	  int    n    =    parseNextCharacter(source,    startIndex);    	compilable	  [FE]  AssertionFailedError  	30	24	replace
185	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos);	  int    n    =    parseNextCharacter(source,    startIndex);    	compilable	  [FE]  AssertionFailedError  	30	24	replace
186	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  false,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  false,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  false,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    false);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	37	None	replace
187	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getFormat());  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parsePosition(source,  getFormat());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	ParsePosition  pos  =  parsePosition(source,  getFormat());	  ParsePosition    pos    =    parsePosition(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
188	[BUG]  [BUGGY]  pos.setIndex(deFAULT_IMAGINARY_CHARACTER  +  1);  [CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER  [FE]            AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(deFAULT_IMAGINARY_CHARACTER  +  1);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(deFAULT_IMAGINARY_CHARACTER  +  1);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER	21	None	replace
189	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  startIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	35	None	replace
190	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  getInitialIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  n  =  parseNextCharacter(source,  getInitialIndex());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  n  =  parseNextCharacter(source,  getInitialIndex());	  int    n    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
191	[BUG]  [BUGGY]  pos.setIndex(deFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER  [FE]        AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  pos.setIndex(deFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	pos.setIndex(deFAULT_IMAGINARY_CHARACTER);	  pos.setIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER	19	None	replace
192	[BUG]  [BUGGY]  Integer  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    source.getIndex();    pos.setIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	replace
193	[BUG]  [BUGGY]  int  initialIndex  =  source.getIndex()  -  1;  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  initialIndex  =  source.getIndex()  -  1;  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  initialIndex  =  source.getIndex()  -  1;  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    source.getIndex();    pos.setIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	replace
194	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	44	None	replace
195	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  def);  [CE]  cannot  find  symbol  def  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  def);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  def);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  def	44	None	replace
196	[BUG]  [BUGGY]  Int  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Int  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Int  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();	  int    startIndex    =    pos.getIndex()    +    1;    int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
197	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);	  int    startIndex    =    pos.getIndex()    +    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	8	None	replace
198	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  +  1;  int  pos  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  +  1;  int  pos  =  pos.getIndex()  +  1;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  +  1;  int  pos  =  pos.getIndex()  +  1;	  int    startIndex    =    pos.getIndex()    +    1;    int    pos    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
199	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.intValue());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.intValue());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.intValue());	  Integer    n    =    parseNextCharacter(source,    pos.intValue());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
200	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  def.intValue());  [CE]  cannot  find  symbol  def  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  def.intValue());  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  def.intValue());	  Integer    n    =    parseNextCharacter(source,    pos.intValue());    	non-compiled	[CE]  cannot  find  symbol  def	52	None	replace
201	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re,  n);  [CE]  cannot  find  symbol  n  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re,  n);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  re,  n);	  Number    im    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  cannot  find  symbol  n	58	None	replace
202	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re,  realFormat);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re,  realFormat);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Number  im  =  parseNextCharacter(source,  pos,  re,  realFormat);	  Number    im    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	58	None	replace
203	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos);  return  new  Complex(re.doubleValue(),  0.0);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    return    new    Complex(re.doubleValue(),    0.0);    	non-compiled	[CE]  unreachable  statement	6	None	replace
204	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  inverted);  [CE]  cannot  find  symbol  inverted  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  inverted);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  inverted);	  Integer    n    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  inverted	59	None	replace
205	[BUG]  [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	Integer  n  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);	  Integer    n    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	59	None	replace
206	[BUG]  [BUGGY]  n  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  n  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	n  =  parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	5	None	replace
207	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  startIndex  [FE]    AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	2	None	replace
208	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  startIndex  [FE]      AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	2	None	replace
209	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  startIndex  [FE]        AssertionFailedError    [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  startIndex	2	None	replace
210	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex(),  im);  [CE]  cannot  find  symbol  im  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex(),  im);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos.getIndex(),  im);	  int    startIndex    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  im	28	None	replace
211	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex()  -  1,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos.getIndex()  -  1,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  parseNextCharacter(source,  pos.getIndex()  -  1,  DEFAULT_IMAGINARY_CHARACTER);	  int    startIndex    =    parseNextCharacter(source,    pos.getIndex());    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	28	None	replace
212	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextInt(initialIndex,  pos);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextInt(initialIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex()  -  1;  Integer  n  =  parseNextInt(initialIndex,  pos);	  int    startIndex    =    pos.getIndex()    -    1;    Integer    n    =    parseNextInt(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
213	[BUG]  [BUGGY]  int  startIndex  =  initialIndex.getEndIndex();  [CE]  int  cannot  be  dereferenced  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  initialIndex.getEndIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  initialIndex.getEndIndex();	  int    startIndex    =    source.getEndIndex();    	non-compiled	[CE]  int  cannot  be  dereferenced	17	None	replace
214	[BUG]  [BUGGY]  int  startIndex  =  input.getEndIndex();  [CE]  cannot  find  symbol  input  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }        [BUGGY]  int  startIndex  =  input.getEndIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  input.getEndIndex();	  int    startIndex    =    source.getEndIndex();    	non-compiled	[CE]  cannot  find  symbol  input	17	None	replace
