bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]  int  startIndex  =  source.getIndex();  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  source.getIndex();	int  startIndex  =  pos.getIndex();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
2	[BUG]  [BUGGY]  int  startIndex  =  pos.getStartIndex();  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]  int  startIndex  =  pos.getStartIndex();  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getStartIndex();	int  startIndex  =  pos.getIndex();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
3	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	add	int  startIndex  =  pos.getIndex()  +  1;	int  startIndex  =  pos.getIndex();  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	2	replace
4	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex()  +  1;	int  startIndex  =  pos.getIndex();  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	2	replace
5	[BUG]  [BUGGY]  int  startIndex  =  pos.getEndIndex();  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]  int  startIndex  =  pos.getEndIndex();  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getEndIndex();	int  startIndex  =  pos.getIndex();  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
6	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  startIndex  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	  	int  startIndex  =  pos.getIndex();  	non-compiled	[CE]  cannot  find  symbol  startIndex	33	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	add	    pos.setIndex(initialIndex);		compilable	  [FE]  AssertionFailedError  	34	26	add
8	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	    pos.setIndex(initialIndex);		compilable	  [FE]  AssertionFailedError  	34	26	add
9	[BUG]  [BUGGY]    int  n  =  parseNextCharacter(source,  pos);  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    int  n  =  parseNextCharacter(source,  pos);  [BUGGY]  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	    int  n  =  parseNextCharacter(source,  pos);		non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	34	None	add
10	[BUG]  [BUGGY]    Number  im  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    Number  im  =  parseNextCharacter(source,  pos);  [BUGGY]  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	    Number  im  =  parseNextCharacter(source,  pos);		non-compiled	[CE]  incompatible  types	34	None	add
11	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  return  null;  [CE]  unreachable  statement  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    pos.setIndex(initialIndex);  return  null;  [BUGGY]  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	    pos.setIndex(initialIndex);  return  null;		non-compiled	[CE]  unreachable  statement	34	None	add
12	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	add	int  startIndex  =  pos.getIndex()  -  1;	int  startIndex  =  pos.getIndex();  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	2	replace
13	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]  int  startIndex  =  pos.getIndex()  -  1;  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	int  startIndex  =  pos.getIndex()  -  1;	int  startIndex  =  pos.getIndex();  	compilable	  [FE]  StringIndexOutOfBoundsException  	33	2	replace
14	[BUG]  [BUGGY]    int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    int  initialIndex  =  pos.getIndex();  [BUGGY]  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	    int  initialIndex  =  pos.getIndex();		non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	34	None	add
15	[BUG]  [BUGGY]    Integer  n  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    Integer  n  =  parseNextCharacter(source,  pos);  [BUGGY]  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	    Integer  n  =  parseNextCharacter(source,  pos);		non-compiled	[CE]  incompatible  types	34	None	add
