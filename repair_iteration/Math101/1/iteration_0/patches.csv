bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  =  0;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	sign  =  0;	sign  =  1;  	compilable	  [FE]  AssertionFailedError  	1	12	replace
2	[BUG]  [BUGGY]  sign  =  0;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  =  0;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	sign  =  0;	sign  =  1;  	compilable	  [FE]  AssertionFailedError  	1	12	replace
3	[BUG]  [BUGGY]  sign  =  0.0;  [CE]  possible  loss  of  precision  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  =  0.0;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	sign  =  0.0;	sign  =  1;  	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  =  '+';  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	sign  =  '+';	sign  =  1;  	compilable	  [FE]  AssertionFailedError  	1	10	replace
5	[BUG]  [BUGGY]  sign  =  '+';  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  =  '+';  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	sign  =  '+';	sign  =  1;  	compilable	  [FE]  AssertionFailedError  	1	10	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  =  -1;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	sign  =  -1;	sign  =  1;  	compilable	  [FE]  AssertionFailedError  	1	12	replace
7	[BUG]  [BUGGY]  sign  =  -1;  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  =  -1;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	sign  =  -1;	sign  =  1;  	compilable	  [FE]  AssertionFailedError  	1	12	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	  	sign  =  1;  	compilable	  [FE]  AssertionFailedError  	1	12	replace
9	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	  	sign  =  1;  	compilable	  [FE]  AssertionFailedError  	1	12	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	    pos.setIndex(initialIndex);		compilable	  [FE]  AssertionFailedError  	2	14	add
11	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    pos.setIndex(initialIndex);		compilable	  [FE]  AssertionFailedError  	2	14	add
12	[BUG]  [BUGGY]    re.setIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    re.setIndex(initialIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    re.setIndex(initialIndex);		non-compiled	[CE]  cannot  find  symbol	2	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	    pos.setIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	2	14	add
14	[BUG]  [BUGGY]    pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    pos.setIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	2	14	add
15	[BUG]  [BUGGY]    pos.setStartIndex(startIndex);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setStartIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    pos.setStartIndex(startIndex);		non-compiled	[CE]  cannot  find  symbol	2	None	add
16	[BUG]  [BUGGY]    pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(endIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    pos.setIndex(endIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	2	None	add
17	[BUG]  [BUGGY]    int  initialIndex  =  re.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    int  initialIndex  =  re.getIndex();  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    int  initialIndex  =  re.getIndex();		non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
18	[BUG]  [BUGGY]    int  initialIndex  =  re.initialIndex;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    int  initialIndex  =  re.initialIndex;  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    int  initialIndex  =  re.initialIndex;		non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
19	[BUG]  [BUGGY]  sign  = "+ "+ ";  [CE]  unclosed  string  literal  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  = "+ "+ ";  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	sign  = "+ "+ ";	sign  =  1;  	non-compiled	[CE]  unclosed  string  literal	1	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	2	14	add
21	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	2	14	add
22	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	2	None	add
23	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(Integer.MAX_VALUE);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	    pos.setIndex(Integer.MAX_VALUE);		compilable	  [FE]  StringIndexOutOfBoundsException  	2	14	add
24	[BUG]  [BUGGY]    pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(Integer.MAX_VALUE);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    pos.setIndex(Integer.MAX_VALUE);		compilable	  [FE]  StringIndexOutOfBoundsException  	2	14	add
25	[BUG]  [BUGGY]  sign  = "+ "  +  im.getCharacter().toLowerCase();  [CE]  cannot  find  symbol  im  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  = "+ "  +  im.getCharacter().toLowerCase();  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	sign  = "+ "  +  im.getCharacter().toLowerCase();	sign  =  1;  	non-compiled	[CE]  cannot  find  symbol  im	1	None	replace
26	[BUG]  [BUGGY]  sign  = "+ "  +  im.getCharacter().toUpperCase();  [CE]  cannot  find  symbol  im  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  = "+ "  +  im.getCharacter().toUpperCase();  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	sign  = "+ "  +  im.getCharacter().toUpperCase();	sign  =  1;  	non-compiled	[CE]  cannot  find  symbol  im	1	None	replace
27	[BUG]  [BUGGY]  sign  = "+ "  +  im.getCharacter().doubleValue();  [CE]  cannot  find  symbol  im  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  = "+ "  +  im.getCharacter().doubleValue();  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	sign  = "+ "  +  im.getCharacter().doubleValue();	sign  =  1;  	non-compiled	[CE]  cannot  find  symbol  im	1	None	replace
