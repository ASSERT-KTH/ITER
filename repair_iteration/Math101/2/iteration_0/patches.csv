bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	add	    pos.setIndex(initialIndex);		compilable	  [FE]  AssertionFailedError  	4	14	add
2	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setIndex(initialIndex);		compilable	  [FE]  AssertionFailedError  	4	14	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	add	    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	4	14	add
4	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	4	14	add
5	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	4	None	add
6	[BUG]  [BUGGY]    pos.setCharacterIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setCharacterIndex(initialIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setCharacterIndex(initialIndex);		non-compiled	[CE]  cannot  find  symbol	4	None	add
7	[BUG]  [BUGGY]    pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(endIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setIndex(endIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	4	None	add
8	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  [CE]  incomparable  types:  char  and  String  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }	break;  	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
9	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  [CE]  incomparable  types:  char  and  String  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }	break;  	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
10	[BUG]  [BUGGY]  if(c!=  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  [CE]  incomparable  types:  char  and  String  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  if(c!=  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	if(c!=  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }	break;  	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
11	[BUG]  [BUGGY]  if(c!=  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  [CE]  incomparable  types:  char  and  String  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  if(c!=  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	if(c!=  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }	break;  	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(startIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	add	    pos.setIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	4	14	add
13	[BUG]  [BUGGY]    pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(startIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setIndex(startIndex);		compilable	  [FE]  AssertionFailedError  	4	14	add
14	[BUG]  [BUGGY]    int  initialIndex  =  re.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    int  initialIndex  =  re.getIndex();  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    int  initialIndex  =  re.getIndex();		non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	add
15	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	add	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	add
16	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	add	parseAndIgnoreWhitespace(source,  pos);	break;  	compilable	  [FE]  AssertionFailedError  	3	14	replace
18	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	parseAndIgnoreWhitespace(source,  pos);	break;  	compilable	  [FE]  AssertionFailedError  	3	14	replace
19	[BUG]  [BUGGY]    if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  Number  im  =  re.getValue();  if(im!=  null)  {  return  new  Complex(im.doubleValue(),  0.0);  }  [CE]  orphaned  default  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  Number  im  =  re.getValue();  if(im!=  null)  {  return  new  Complex(im.doubleValue(),  0.0);  }  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  Number  im  =  re.getValue();  if(im!=  null)  {  return  new  Complex(im.doubleValue(),  0.0);  }		non-compiled	[CE]  orphaned  default	4	None	add
20	[BUG]  [BUGGY]    if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  Number  im  =  re.getValue();  if(im!=  null)  {  return  new  Complex(re.doubleValue(),  0.0);  }  [CE]  orphaned  default  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  Number  im  =  re.getValue();  if(im!=  null)  {  return  new  Complex(re.doubleValue(),  0.0);  }  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  Number  im  =  re.getValue();  if(im!=  null)  {  return  new  Complex(re.doubleValue(),  0.0);  }		non-compiled	[CE]  orphaned  default	4	None	add
21	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  else  {  pos.setIndex(deFAULT_IMAGINARY_CHARACTER);  pos.setErrorIndex(startIndex);  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  else  {  pos.setIndex(deFAULT_IMAGINARY_CHARACTER);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  else  {  pos.setIndex(deFAULT_IMAGINARY_CHARACTER);  pos.setErrorIndex(startIndex);  return  null;  }	break;  	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
22	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  else  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  else  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  break;  }  else  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }	break;  	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
