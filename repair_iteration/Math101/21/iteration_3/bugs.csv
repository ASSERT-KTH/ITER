bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos  +  1,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos  +  1,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos  +  1,  pos);	  ParsePosition    pos    =    parseWhitespace(source,    pos    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	49	None	replace
2	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos  +  1,  pos.getIndex());  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos  +  1,  pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos  +  1,  pos.getIndex());	  ParsePosition    pos    =    parseWhitespace(source,    pos    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	49	None	replace
3	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos  +  2);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos  +  2);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos  +  2);	  ParsePosition    pos    =    parseWhitespace(source,    pos    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	49	None	replace
4	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getIndex()  -  1);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getIndex()  -  1);	  parseNextWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
5	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  pos.getIndex());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  pos.getIndex());	  parseNextWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
6	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getIndex()  +  1);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getIndex()  +  1);	  parseNextWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
7	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  1);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos,  1);	  ParsePosition    pos    =    parseWhitespace(source,    pos,    0);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	84	None	replace
8	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  2);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  2);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos,  2);	  ParsePosition    pos    =    parseWhitespace(source,    pos,    0);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	84	None	replace
9	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  3);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  3);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos,  3);	  ParsePosition    pos    =    parseWhitespace(source,    pos,    0);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	84	None	replace
10	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  4);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  4);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos,  4);	  ParsePosition    pos    =    parseWhitespace(source,    pos,    0);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	84	None	replace
11	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos.getPosition(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos.getPosition(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos.getPosition(),  DEFAULT_IMAGINARY_CHARACTER);	  parsePreviousCharacter(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
12	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  pos.getPosition());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  pos.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  pos.getPosition());	  parsePreviousCharacter(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
13	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos.getPosition()  -  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos.getPosition()  -  1);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos.getPosition()  -  1);	  parsePreviousCharacter(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
14	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.getPosition());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.getPosition());	  parsePreviousCharacter(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	40	24	add
16	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	40	24	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	40	24	add
18	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	40	24	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	40	22	add
20	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	40	22	add
21	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	40	26	add
22	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	40	26	add
23	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  ParsePosition    pos    =    parseWhitespace(source,    pos,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	83	None	replace
24	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex());        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	75	26	add
25	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	75	26	add
26	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  position  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(position.getIndex());  parseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol  position	75	None	add
27	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  ParseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  ParseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());  ParseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	75	None	add
28	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	50	None	replace
29	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);	  parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	50	None	replace
30	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);	  parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	50	None	replace
31	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);	  parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	50	None	replace
32	[BUG]  [BUGGY]  parent.parseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  parent  [FE]    IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parent.parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parent.parseAndIgnoreWhitespace(source,  pos);	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parent	73	None	replace
33	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextPosition(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]      IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseNextPosition(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseNextPosition(source,  pos);	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	73	None	replace
34	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  pos.getPosition());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  pos.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  pos.getPosition());	  parseNextWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
35	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getPosition()  -  1);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getPosition()  -  1);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getPosition()  -  1);	  parseNextWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
36	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getPosition(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getPosition(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getPosition(),  DEFAULT_IMAGINARY_CHARACTER);	  parseNextWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
37	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getPosition(),  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getPosition(),  pos);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getPosition(),  pos);	  parseNextWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
38	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos),  DEFAULT_IMAGINARY_CHARACTER  +  1;  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos),  DEFAULT_IMAGINARY_CHARACTER  +  1;  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos),  DEFAULT_IMAGINARY_CHARACTER  +  1;	  parsePreviousCharacter(source,    pos),    DEFAULT_IMAGINARY_CHARACTER;    	non-compiled	[CE]  ';'  expected	78	None	replace
39	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos)&&  DEFAULT_IMAGINARY_CHARACTER;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos)&&  DEFAULT_IMAGINARY_CHARACTER;  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos)&&  DEFAULT_IMAGINARY_CHARACTER;	  parsePreviousCharacter(source,    pos),    DEFAULT_IMAGINARY_CHARACTER;    	non-compiled	[CE]  not  a  statement	78	None	replace
40	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos)/  2,  DEFAULT_IMAGINARY_CHARACTER;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos)/  2,  DEFAULT_IMAGINARY_CHARACTER;  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos)/  2,  DEFAULT_IMAGINARY_CHARACTER;	  parsePreviousCharacter(source,    pos),    DEFAULT_IMAGINARY_CHARACTER;    	non-compiled	[CE]  not  a  statement	78	None	replace
41	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  1);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex()  -  1);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
42	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  1,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  1,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex()  -  1,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
43	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  +  1);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex()  +  1);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
44	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  2);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  2);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex()  -  2);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
45	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]          StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	12	None	replace
46	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  position,  true);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  position,  true);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  position,  true);	  ParsePosition    pos    =    parseWhitespace(source,    pos,    true);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	47	None	replace
47	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  null);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  null);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos,  null);	  ParsePosition    pos    =    parseWhitespace(source,    pos,    true);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	47	None	replace
48	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	2	replace
49	[BUG]  [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	2	replace
50	[BUG]  [BUGGY]  parseWhitespace(source,  pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos.getIndex()  -  1);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos.getIndex()  -  1);	  parseWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
51	[BUG]  [BUGGY]  parseWhitespace(source,  pos,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos,  pos.getIndex());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos,  pos.getIndex());	  parseWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
52	[BUG]  [BUGGY]  parseWhitespace(source,  pos.getIndex()  -  2);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos.getIndex()  -  2);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos.getIndex()  -  2);	  parseWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
53	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  *  2);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(source.getIndex()  *  2);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(source.getIndex()  *  2);	  pos.setIndex(source.getIndex()    *    1);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	42	24	add
55	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	42	24	add
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	42	26	add
57	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	42	26	add
58	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
59	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(position.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	42	None	add
60	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	add
61	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	add
62	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  position  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  position	15	None	add
63	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
64	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();	  	non-compiled	[CE]  ')'  expected	15	None	add
65	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  [CE]  cannot  find  symbol  position  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  position	15	None	add
66	[BUG]  [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]        AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  -  1);	          parseNextCharacter(source,    pos);    pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  position	60	None	replace
67	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	          parseNextCharacter(source,    pos);    pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
68	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	10	26	add
69	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	10	26	add
70	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	10	26	add
71	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	10	26	add
72	[BUG]  [BUGGY]  pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex());	          pos.setIndex(pos.getIndex());    pos.setIndex(p.getIndex());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	22	26	add
74	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	22	26	add
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	22	26	add
76	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	22	26	add
77	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  parseNextCharacter(nf,  pos);  [CE]  cannot  find  symbol  nf  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  parseNextCharacter(nf,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(nf,  pos);	  	non-compiled	[CE]  cannot  find  symbol  nf	22	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	18	26	add
79	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	18	26	add
80	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex());  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  position  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(position.getIndex());  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol  position	18	None	add
81	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  ParseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  ParseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  ParseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
82	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]        StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	61	None	replace
83	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]          StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex()  -  1);	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  position	61	None	replace
84	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(p.getIndex()  -  1);  [CE]  cannot  find  symbol  p  [FE]            StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(p.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(p.getIndex()  -  1);	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  p	61	None	replace
85	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos.length  -  1);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos.length  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos.length  -  1);	  ParsePosition    pos    =    parseWhitespace(source,    pos.length);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	53	None	replace
86	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos.length  +  1);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos.length  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos.length  +  1);	  ParsePosition    pos    =    parseWhitespace(source,    pos.length);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	53	None	replace
87	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos.length  -  2);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos.length  -  2);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos.length  -  2);	  ParsePosition    pos    =    parseWhitespace(source,    pos.length);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	53	None	replace
88	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos.getIndex()  -  1);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos.getIndex()  -  1);	  parsePreviousCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
89	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  pos.getIndex());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  pos.getIndex());	  parsePreviousCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
90	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos.getIndex()  -  2);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos.getIndex()  -  2);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos.getIndex()  -  2);	  parsePreviousCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
91	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	79	26	add
92	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	79	26	add
93	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parsePreviousCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parsePreviousCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parsePreviousCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
94	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	79	26	add
95	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	79	26	add
96	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	79	26	add
97	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	79	26	add
98	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	26	add
99	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	26	add
100	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  position	1	None	add
101	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
102	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getItemCount()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getItemCount()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getItemCount()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
103	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  position	1	None	add
104	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parsePosition(source);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parsePosition(source);	  if(source!=    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	67	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    if(source!=  null)  {  parseNextCharacter(source,  pos);  }	  	compilable	  [FE]  AssertionFailedError  	64	26	add
106	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    if(source!=  null)  {  parseNextCharacter(source,  pos);  }	  	compilable	  [FE]  AssertionFailedError  	64	26	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    if(source  ==  null)  {  parseNextCharacter(source,  pos);  }	  	compilable	  [FE]  AssertionFailedError  	64	26	add
108	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    if(source  ==  null)  {  parseNextCharacter(source,  pos);  }	  	compilable	  [FE]  AssertionFailedError  	64	26	add
109	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  if(source  >=  null)  {  parseNextCharacter(source,  pos);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  if(source  >=  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    if(source  >=  null)  {  parseNextCharacter(source,  pos);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	64	None	add
110	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  If(source!=  null)  {  parseNextCharacter(source,  pos);  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  If(source!=  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    If(source!=  null)  {  parseNextCharacter(source,  pos);  }	  	non-compiled	[CE]  ';'  expected	64	None	add
111	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	69	26	add
112	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	69	26	add
113	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  ParseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  ParseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    ParseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	69	None	add
114	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	69	None	add
115	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	69	26	add
116	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	69	26	add
117	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	76	26	replace
118	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	76	26	replace
119	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	76	26	replace
120	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	76	26	replace
121	[BUG]  [BUGGY]  parseNextCharacter(source,  pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextCharacter(source,  pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextCharacter(source,  pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(position.getIndex()    -    1);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	56	None	replace
122	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(position.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
123	[BUG]  [BUGGY]  parseWhitespace(source,  pos,  pos.getPosition());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos,  pos.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos,  pos.getPosition());	  parseWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
124	[BUG]  [BUGGY]  parseWhitespace(source,  pos.getPosition(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos.getPosition(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos.getPosition(),  DEFAULT_IMAGINARY_CHARACTER);	  parseWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
125	[BUG]  [BUGGY]  parseWhitespace(source,  pos.getPosition()  -  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos.getPosition()  -  1);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos.getPosition()  -  1);	  parseWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
126	[BUG]  [BUGGY]  parseWhitespace(source,  pos.getPosition(),  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos.getPosition(),  pos);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos.getPosition(),  pos);	  parseWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	45	26	add
128	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	45	26	add
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	45	24	add
130	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	45	24	add
131	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  byseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  byseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  byseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
132	[BUG]  [BUGGY]  parseNextIndex(source,  pos);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextIndex(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextIndex(source,  pos);	          parseNextCharacter(source,    pos);    parseNextIndex(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
133	[BUG]  [BUGGY]  parseNextPosition(source,  pos);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextPosition(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextPosition(source,  pos);	          parseNextCharacter(source,    pos);    parseNextIndex(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
134	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  false);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  false);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  false);	  parseNextWhitespace(source,    pos,    true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
135	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  true);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  true);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos,  true);	  parseNextWhitespace(source,    pos,    true);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	30	None	replace
136	[BUG]  [BUGGY]  ParseNextWhitespace(source,  pos,  false);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParseNextWhitespace(source,  pos,  false);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParseNextWhitespace(source,  pos,  false);	  parseNextWhitespace(source,    pos,    true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
137	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  position,  false);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  position,  false);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  position,  false);	  ParsePosition    pos    =    parseWhitespace(source,    pos,    false);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	48	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	66	26	add
139	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	66	26	add
140	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	66	26	add
141	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	66	26	add
142	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  true);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  true);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  true);	  parsePreviousCharacter(source,    pos,    false);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
143	[BUG]  [BUGGY]  ParsePreviousCharacter(source,  pos,  true);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePreviousCharacter(source,  pos,  true);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePreviousCharacter(source,  pos,  true);	  parsePreviousCharacter(source,    pos,    false);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
144	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  +  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(source.getIndex()  +  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(source.getIndex()  +  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    this.format    =    new    SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
145	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  format  [FE]                AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(pos.getIndex()  -  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    this.format    =    new    SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  format	44	None	replace
146	[BUG]  [BUGGY]  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  format  [FE]                  AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    this.format    =    new    SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  format	44	None	replace
147	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  format  [FE]                    AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(pos.getIndex()  +  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    this.format    =    new    SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  format	44	None	replace
148	[BUG]  [BUGGY]  pos.setIndex(source.getIndex());  pos.setIndex(position.getIndex());  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(source.getIndex());  pos.setIndex(position.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(source.getIndex());  pos.setIndex(position.getIndex());	          pos.setIndex(pos.getIndex());    pos.setIndex(position.getIndex());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
149	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StackOverflowError  	70	26	replace
150	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StackOverflowError  	70	26	replace
151	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StackOverflowError  	70	26	replace
152	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StackOverflowError  	70	26	replace
153	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  parseNextWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
154	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);	  parseNextWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
155	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);	  parseNextWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
156	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);	  parseNextWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
157	[BUG]  [BUGGY]  ParseWhitespace  pos  =  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParseWhitespace  pos  =  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParseWhitespace  pos  =  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  ParseWhitespace    pos    =    parseWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
158	[BUG]  [BUGGY]  ParseWhitespace  pos  =  parseWhitespace(source,  pos,  true);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParseWhitespace  pos  =  parseWhitespace(source,  pos,  true);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParseWhitespace  pos  =  parseWhitespace(source,  pos,  true);	  ParseWhitespace    pos    =    parseWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
159	[BUG]  [BUGGY]  ParseWhitespace  pos  =  parseWhitespace(source,  pos,  false);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParseWhitespace  pos  =  parseWhitespace(source,  pos,  false);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParseWhitespace  pos  =  parseWhitespace(source,  pos,  false);	  ParseWhitespace    pos    =    parseWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
160	[BUG]  [BUGGY]  ParseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParseAndIgnoreWhitespace(source,  pos);	          parseAndIgnoreWhitespace(source,    pos);    ParseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
161	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  pos.getLineno());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  pos.getLineno());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  pos.getLineno());	  parseNextWhitespace(source,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
162	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getLineno(),  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getLineno(),  pos.getIndex());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getLineno(),  pos.getIndex());	  parseNextWhitespace(source,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
163	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getLineno(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getLineno(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getLineno(),  DEFAULT_IMAGINARY_CHARACTER);	  parseNextWhitespace(source,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
164	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getLineno(),  pos.getEndIndex());  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getLineno(),  pos.getEndIndex());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getLineno(),  pos.getEndIndex());	  parseNextWhitespace(source,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
165	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parsePosition(source,  pos);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	7	None	replace
166	[BUG]  [BUGGY]  parseNextCharacter(source,  pos.getIndex()  -  1);  pos.setIndex(parseNextCharacter(source,  pos.getIndex()  -  1);  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextCharacter(source,  pos.getIndex()  -  1);  pos.setIndex(parseNextCharacter(source,  pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextCharacter(source,  pos.getIndex()  -  1);  pos.setIndex(parseNextCharacter(source,  pos.getIndex()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(p.getIndex()    -    1);    	non-compiled	[CE]  ')'  expected	86	None	replace
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	81	26	add
168	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	81	26	add
169	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  ParseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  ParseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    ParseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
170	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  ParsePosition  pos  =  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  ParsePosition  pos  =  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    ParsePosition  pos  =  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	81	None	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	81	26	add
172	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	81	26	add
173	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	46	26	replace
174	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	46	26	replace
175	[BUG]  [BUGGY]  parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  parseIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
176	[BUG]  [BUGGY]  parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);	  parseIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
177	[BUG]  [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  parseIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
178	[BUG]  [BUGGY]  parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);	  parseIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
179	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  parsePreviousCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
180	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);	  parsePreviousCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
181	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);	  parsePreviousCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
182	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
183	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
184	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
185	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
186	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(position.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  position	5	None	add
187	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
188	[BUG]  [BUGGY]  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
189	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getItemCount()  -  1);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getItemCount()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getItemCount()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getItemCount()    -    1);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
190	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getItemCount());  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getItemCount());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(pos.getIndex());  pos.setIndex(pos.getItemCount());	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getItemCount()    -    1);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
191	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	2	add
192	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	2	add
193	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
194	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	25	26	add
195	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	25	26	add
196	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	26	add
197	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	26	add
198	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  position	25	None	add
199	[BUG]  [BUGGY]  parent  ==  null  ||  source!=  null)  {  parseNextCharacter(source,  pos);  }  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parent  ==  null  ||  source!=  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parent  ==  null  ||  source!=  null)  {  parseNextCharacter(source,  pos);  }	  if(source!=    null)    {    parseNextCharacter(source,    pos);    }    	non-compiled	[CE]  not  a  statement	65	None	replace
200	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
201	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
202	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
203	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
204	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
205	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
206	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
207	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
208	[BUG]  [BUGGY]  ParsePosition  pos  =  getPosition();  parseAndIgnoreWhitespace(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]              StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  getPosition();  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  getPosition();  parseAndIgnoreWhitespace(source,  pos);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    getPosition();    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	14	None	replace
209	[BUG]  [BUGGY]  pos  =  getPosition();  parseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos  =  getPosition();  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos  =  getPosition();  parseAndIgnoreWhitespace(source,  pos);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    getPosition();    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
210	[BUG]  [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);	  parseWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
211	[BUG]  [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);	  parseWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
212	[BUG]  [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);	  parseWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	38	26	add
214	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	38	26	add
215	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	38	None	add
216	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(source.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(source.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(source.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
217	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1));  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1));	  	non-compiled	[CE]  ';'  expected	38	None	add
218	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	72	26	add
219	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	72	26	add
220	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	72	26	add
221	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	72	26	add
222	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos));  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos));  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos));	  parsePreviousCharacter(source,    pos),    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  ';'  expected	77	None	replace
223	[BUG]  [BUGGY]  parseWhitespace(source,  pos),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos),  DEFAULT_IMAGINARY_CHARACTER);	  parsePreviousCharacter(source,    pos),    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  ';'  expected	77	None	replace
224	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos)+  2;  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos)+  2;  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos)+  2;	  ParsePosition    pos    =    parseWhitespace(source,    pos)+    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	52	None	replace
225	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos)/  1;  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos)/  1;  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos)/  1;	  ParsePosition    pos    =    parseWhitespace(source,    pos)+    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	52	None	replace
226	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos)+  1L;  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos)+  1L;  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos)+  1L;	  ParsePosition    pos    =    parseWhitespace(source,    pos)+    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	52	None	replace
227	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(source.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(source.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(position.getIndex()    +    1);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
228	[BUG]  [BUGGY]  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
229	[BUG]  [BUGGY]  parseWhitespace(source,  pos,  false.getPosition());  [CE]  boolean  cannot  be  dereferenced  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos,  false.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos,  false.getPosition());	  parseWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	68	None	replace
230	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	76	26	replace
231	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	76	26	replace
232	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	76	26	replace
233	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	76	26	replace
234	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	66	None	add
235	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    If(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  	72	None	add
236	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	11	26	replace
237	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	11	26	replace
238	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	11	26	replace
239	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	11	26	replace
240	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	11	26	replace
241	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	11	26	replace
242	[BUG]  [BUGGY]  pos.setIndex(SourceUtilities.getIndex(source));  [CE]  cannot  find  symbol  SourceUtilities  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(SourceUtilities.getIndex(source));  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(SourceUtilities.getIndex(source));	  pos.setIndex(position.getIndex());    	non-compiled	[CE]  cannot  find  symbol  SourceUtilities	31	None	replace
243	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1));    	non-compiled	[CE]  ';'  expected	57	None	replace
244	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1));    	non-compiled	[CE]  ';'  expected	57	None	replace
245	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1));    	non-compiled	[CE]  ';'  expected	57	None	replace
246	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1));  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1));  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1));  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1));    	non-compiled	[CE]  ';'  expected	63	None	replace
247	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1));  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1));  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1));  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1));    	non-compiled	[CE]  ';'  expected	63	None	replace
248	[BUG]  [BUGGY]  ParsePosition  pos  =  getPosition();  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]              StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  getPosition();  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  getPosition();	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    getPosition();    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	14	None	replace
249	[BUG]  [BUGGY]  parseNextCharacter(source,  pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextCharacter(source,  pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextCharacter(source,  pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(position.getIndex()    -    1);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	56	None	replace
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	18	26	add
251	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	18	26	add
252	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	79	26	add
253	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	79	26	add
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	43	24	replace
255	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	43	24	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	43	26	replace
257	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	43	26	replace
258	[BUG]  [BUGGY]  ParseWhitespace  pos  =  parseWhitespace(source,  pos.length);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParseWhitespace  pos  =  parseWhitespace(source,  pos.length);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParseWhitespace  pos  =  parseWhitespace(source,  pos.length);	  ParseWhitespace    pos    =    parseWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
259	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
260	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
261	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
262	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
263	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
264	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
265	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
266	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
267	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	26	replace
268	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	26	replace
269	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
270	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
271	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
272	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	41	24	replace
274	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	41	24	replace
275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	41	24	replace
276	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	41	24	replace
277	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  ')'  expected	41	None	replace
278	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter);	  parsePreviousCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
279	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
280	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
281	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNext(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNext(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseNext(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
282	[BUG]  [BUGGY]  parseWhitespace(source,  pos),  DEFAULT_IMAGINARY_CHARACTER;  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos),  DEFAULT_IMAGINARY_CHARACTER;  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos),  DEFAULT_IMAGINARY_CHARACTER;	  parsePreviousCharacter(source,    pos),    DEFAULT_IMAGINARY_CHARACTER;    	non-compiled	[CE]  ';'  expected	78	None	replace
283	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
284	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
285	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
286	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
287	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
288	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
289	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  imaginaryCharacter,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  imaginaryCharacter,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos,  imaginaryCharacter,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	50	None	replace
290	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  imaginaryCharacter);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  imaginaryCharacter);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos,  imaginaryCharacter);	  parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	50	None	replace
291	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePreviousWhitespace(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parsePreviousWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parsePreviousWhitespace(source,  pos);	  if(source!=    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	67	None	replace
292	[BUG]  [BUGGY]  pos.setIndex(SourceUtil.getIndex(source),  pos.getIndex());  [CE]  cannot  find  symbol  SourceUtil  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(SourceUtil.getIndex(source),  pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(SourceUtil.getIndex(source),  pos.getIndex());	          pos.setIndex(pos.getIndex());    pos.setIndex(position.getIndex());    	non-compiled	[CE]  cannot  find  symbol  SourceUtil	17	None	replace
293	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getLineno(),  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getLineno(),  pos);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getLineno(),  pos);	  parseNextWhitespace(source,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
294	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  source.getLineno());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  source.getLineno());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  source.getLineno());	  parseNextWhitespace(source,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	42	26	add
296	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	42	26	add
297	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	80	26	replace
298	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StackOverflowError  	80	26	replace
299	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	80	2	replace
300	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	80	2	replace
301	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	45	None	add
302	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	45	26	add
303	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	45	26	add
304	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	26	replace
305	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	26	replace
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	22	26	add
307	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	22	26	add
308	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.getIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.getIndex());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.getIndex());	  parsePreviousCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
309	[BUG]  [BUGGY]  parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);	  parseIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
310	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1;  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1;	  	non-compiled	[CE]  ')'  expected	38	None	add
311	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	26	replace
312	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	26	replace
313	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	26	replace
314	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	26	replace
315	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos),  DEFAULT_IMAGINARY_CHARACTER  +  1);  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos),  DEFAULT_IMAGINARY_CHARACTER  +  1);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos),  DEFAULT_IMAGINARY_CHARACTER  +  1);	  parsePreviousCharacter(source,    pos),    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  ';'  expected	77	None	replace
316	[BUG]  [BUGGY]  parent  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parent  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parent  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	73	None	replace
317	[BUG]  [BUGGY]  parent  ==  null)  {  parseNextCharacter(source,  pos);  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parent  ==  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parent  ==  null)  {  parseNextCharacter(source,  pos);  }	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	73	None	replace
318	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
319	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
320	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
321	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
322	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
323	[BUG]  [BUGGY]  pos  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  incompatible  types  [FE]          StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos  =  parseAndIgnoreWhitespace(source,  pos);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  incompatible  types	12	None	replace
324	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	replace
325	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	replace
326	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	replace
327	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	replace
328	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos)-  1;  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos)-  1;  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos)-  1;	  ParsePosition    pos    =    parseWhitespace(source,    pos)+    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	52	None	replace
329	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos  +  3);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos  +  3);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos  +  3);	  ParsePosition    pos    =    parseWhitespace(source,    pos    +    1);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	49	None	replace
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	82	26	replace
331	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	82	26	replace
332	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	82	26	replace
333	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	82	26	replace
334	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  source.getPosition());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  source.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  source.getPosition());	  parseNextWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
335	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  pos.getIndex());  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos,  pos.getIndex());	  ParsePosition    pos    =    parseWhitespace(source,    pos,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	83	None	replace
336	[BUG]  [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  nf);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  ParsePosition  pos  =  parseWhitespace(source,  pos,  nf);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	ParsePosition  pos  =  parseWhitespace(source,  pos,  nf);	  ParsePosition    pos    =    parseWhitespace(source,    pos,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	83	None	replace
337	[BUG]  [BUGGY]  pos.setIndex(SourceUtil.getIndex(source));  [CE]  cannot  find  symbol  SourceUtil  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(SourceUtil.getIndex(source));  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(SourceUtil.getIndex(source));	          pos.setIndex(pos.getIndex());    pos.setIndex(p.getIndex());    	non-compiled	[CE]  cannot  find  symbol  SourceUtil	74	None	replace
338	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  def.getPosition());  [CE]  cannot  find  symbol  def  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  def.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  def.getPosition());	  parsePreviousCharacter(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol  def	54	None	replace
339	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  ParseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  ParseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    ParseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
340	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	10	26	add
341	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	10	26	add
342	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  ')'  expected	7	None	replace
343	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
344	[BUG]  [BUGGY]  pos.setIndex(position.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]        AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(position.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(position.getIndex()  +  1);	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(position.getIndex()    +    1);    	non-compiled	[CE]  cannot  find  symbol  position	62	None	replace
345	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	40	None	add
346	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	40	26	add
347	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	40	26	add
348	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
349	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
350	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  position	3	None	add
351	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(source.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
352	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
353	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
354	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  parseNextCharacter(source,  pos);  }	          parseNextCharacter(source,    pos);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	26	replace
355	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  parseNextCharacter(source,  pos);  }	          parseNextCharacter(source,    pos);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	26	replace
356	[BUG]  [BUGGY]  pos.setIndex(SourceUtilities.getIndex(source),  pos.getIndex()  -  1);  [CE]  cannot  find  symbol  SourceUtilities  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(SourceUtilities.getIndex(source),  pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(SourceUtilities.getIndex(source),  pos.getIndex()  -  1);	  pos.setIndex(position.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  SourceUtilities	55	None	replace
357	[BUG]  [BUGGY]  pos.setIndex(SourceUtilities.getIndex(source)-  1);  [CE]  cannot  find  symbol  SourceUtilities  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(SourceUtilities.getIndex(source)-  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(SourceUtilities.getIndex(source)-  1);	  pos.setIndex(position.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  SourceUtilities	55	None	replace
358	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	26	replace
359	[BUG]  [BUGGY]  if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	26	replace
360	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	73	26	replace
361	[BUG]  [BUGGY]  if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	73	26	replace
362	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
363	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
364	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
365	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	26	replace
366	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(p.getIndex());  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  p  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(p.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(p.getIndex());  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  p	15	None	add
367	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(null);  pos.setIndex(pos.getIndex());  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(null);  pos.setIndex(pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(null);  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	15	None	add
368	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	42	26	add
369	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	42	26	add
370	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }	  if(source!=    null)    {    parseNextCharacter(source,    pos);    }    	compilable	  [FE]  StackOverflowError  	65	26	replace
371	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StackOverflowError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }	  if(source!=    null)    {    parseNextCharacter(source,    pos);    }    	compilable	  [FE]  StackOverflowError  	65	26	replace
372	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	replace
373	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	replace
374	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	replace
375	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	replace
376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	41	24	replace
377	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  AssertionFailedError  	41	24	replace
378	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	26	replace
379	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	26	replace
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  2);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  2);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	38	26	add
381	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  2);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  2);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  2);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	38	26	add
382	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1,  pos.setIndex(pos.getIndex()  +  1);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1,  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1,  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  ')'  expected	38	None	add
383	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	80	26	replace
384	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	80	26	replace
385	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	80	26	replace
386	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	80	26	replace
387	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
388	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	26	replace
389	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
390	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	26	replace
391	[BUG]  [BUGGY]  pos.setIndex(p.getIndex()  -  1);  [CE]  cannot  find  symbol  p  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(p.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(p.getIndex()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(p.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  p	86	None	replace
392	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	82	26	replace
393	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	82	26	replace
394	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	82	26	replace
395	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	82	26	replace
396	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	70	26	replace
397	[BUG]  [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	70	26	replace
398	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  /  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(source.getIndex()  /  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(source.getIndex()  /  1);	  pos.setIndex(source.getIndex()    *    1);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
399	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	79	26	add
400	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	79	26	add
401	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextPosition(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextPosition(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextPosition(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
402	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
403	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
404	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
405	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	26	add
406	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  parsePreviousCharacter(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
407	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	72	26	add
408	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source    ==    null)    {    parseNextCharacter(source,    pos);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(source  ==  null)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	72	26	add
409	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setPosition(pos.getPosition()  -  1);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setPosition(pos.getPosition()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setPosition(pos.getPosition()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
410	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	3	None	add
411	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
412	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	26	add
413	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES);  [CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES  [FE]        StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES);	  parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES	50	None	replace
414	[BUG]  [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.getPosition());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER.getPosition());	  parseWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
415	[BUG]  [BUGGY]  parseWhitespace(source,  pos,  this.pos.getPosition());  [CE]  cannot  find  symbol  pos  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos,  this.pos.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos,  this.pos.getPosition());	  parseWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol  pos	68	None	replace
416	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);	  parsePreviousCharacter(source,    pos,    false);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
417	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }	          parseNextCharacter(source,    pos);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	26	replace
418	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }	          parseNextCharacter(source,    pos);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	26	replace
419	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  ==  -1)  {  parseNextCharacter(source,  pos);  }	          parseNextCharacter(source,    pos);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	26	replace
420	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  ==  -1)  {  parseNextCharacter(source,  pos);  }	          parseNextCharacter(source,    pos);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	26	replace
421	[BUG]  [BUGGY]  parseWhitespace(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseWhitespace(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseWhitespace(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  parseWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
422	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(null);  pos.setIndex(pos.getIndex()  -  1);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(null);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(null);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	1	None	add
423	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  parseNextWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
424	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  source.getIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  source.getIndex());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  source.getIndex());	  parseNextWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
425	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	46	26	replace
426	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	46	26	replace
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    	compilable	  [FE]  AssertionFailedError  	46	24	replace
428	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    	compilable	  [FE]  AssertionFailedError  	46	24	replace
429	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	26	replace
430	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	26	replace
431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	11	26	replace
432	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	11	26	replace
433	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	11	26	replace
434	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	11	26	replace
435	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	40	None	add
436	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos)-  1,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos)-  1,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos)-  1,  DEFAULT_IMAGINARY_CHARACTER);	  parsePreviousCharacter(source,    pos),    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  not  a  statement	77	None	replace
437	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos)-  1,  DEFAULT_IMAGINARY_CHARACTER;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parsePreviousCharacter(source,  pos)-  1,  DEFAULT_IMAGINARY_CHARACTER;  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parsePreviousCharacter(source,  pos)-  1,  DEFAULT_IMAGINARY_CHARACTER;	  parsePreviousCharacter(source,    pos),    DEFAULT_IMAGINARY_CHARACTER;    	non-compiled	[CE]  not  a  statement	78	None	replace
438	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  parsePreviousCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  parsePreviousCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
439	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1));    	non-compiled	[CE]  ';'  expected	57	None	replace
440	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  true,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  true,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  true,  DEFAULT_IMAGINARY_CHARACTER);	  parseNextWhitespace(source,    pos,    true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
441	[BUG]  [BUGGY]  pos.setIndex(p.getIndex());  [CE]  cannot  find  symbol  p  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(p.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(p.getIndex());	          pos.setIndex(pos.getIndex());    pos.setIndex(p.getIndex());    	non-compiled	[CE]  cannot  find  symbol  p	74	None	replace
442	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	26	replace
443	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	26	replace
444	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	26	replace
445	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	26	replace
446	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	19	26	replace
447	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	19	26	replace
448	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
449	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
450	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  position  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(position.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol  position	45	None	add
451	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
452	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	2	add
453	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	2	add
454	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  this.pos.getPosition());  [CE]  cannot  find  symbol  pos  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  this.pos.getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  this.pos.getPosition());	  parseNextWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol  pos	71	None	replace
455	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  getPosition());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  getPosition());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  getPosition());	  parseNextWhitespace(source,    pos.getPosition());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
456	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	10	None	add
457	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  }  [CE]  cannot  find  symbol  format  [FE]              AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  this.format  =  new  SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  }	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    this.format    =    new    SimpleFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  format	44	None	replace
458	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	26	replace
459	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	26	replace
460	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	26	replace
461	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	26	replace
462	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	76	26	replace
463	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  IllegalArgumentException  	76	26	replace
464	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	26	replace
465	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	26	replace
466	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1));  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getIndex()  +  1));  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(pos.getIndex()  +  1));	          pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1));    	non-compiled	[CE]  ';'  expected	63	None	replace
467	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	81	26	add
468	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	81	26	add
469	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
470	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	26	replace
471	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	26	replace
472	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parsePreviousCharacter(source,  pos);  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parsePreviousCharacter(source,  pos);  parsePreviousCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parsePreviousCharacter(source,  pos);  parsePreviousCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
473	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	22	26	add
474	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	22	26	add
475	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	22	26	add
476	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	22	26	add
477	[BUG]  [BUGGY]  pos.setIndex(pos.getItemCount()  -  1);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  pos.setIndex(pos.getItemCount()  -  1);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	pos.setIndex(pos.getItemCount()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getItemCount()    -    1);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
478	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
479	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  pos.getIndex());  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  pos.getIndex());  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseAndIgnoreWhitespace(source,  pos,  pos.getIndex());	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
480	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos,  this.nf.getLineno());  [CE]  cannot  find  symbol  nf  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {      [BUGGY]  parseNextWhitespace(source,  pos,  this.nf.getLineno());  [BUGGY]      pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	parseNextWhitespace(source,  pos,  this.nf.getLineno());	  parseNextWhitespace(source,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol  nf	59	None	replace
