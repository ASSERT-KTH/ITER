bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(initialIndex  +  1);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(initialIndex  +  1);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	52	None	replace
2	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  startIndex);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  startIndex);	  parseAndIgnoreWhitespace(source,    pos,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	17	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setErrorIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	pos.setErrorIndex(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(endIndex);    	compilable	  [FE]  AssertionFailedError  	14	24	replace
4	[BUG]  [BUGGY]  pos.setErrorIndex(initialIndex);  [FE]  AssertionFailedError  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setErrorIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setErrorIndex(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(endIndex);    	compilable	  [FE]  AssertionFailedError  	14	24	replace
5	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex);  pos.setErrorIndex(endIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex);  pos.setErrorIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  startIndex);  pos.setErrorIndex(endIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(endIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	14	None	replace
6	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(endIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
7	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(endIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
8	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    realFormat);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	59	None	replace
9	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  c);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  c);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  c);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    realFormat);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	59	None	replace
10	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  nf);  [CE]  cannot  find  symbol  nf  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  nf);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  nf);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    realFormat);    	non-compiled	[CE]  cannot  find  symbol  nf	59	None	replace
11	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  realFormat,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  realFormat,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  realFormat,  pos);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    realFormat);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	59	None	replace
12	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex);  pos.setIndex(initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  startIndex);  pos.setIndex(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	replace
13	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(endIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	12	None	replace
14	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  endIndex);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    realIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	63	None	replace
15	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  startIndex,  pos);	  parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	20	None	replace
16	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	20	None	replace
17	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos,  startIndex);	  parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	20	None	replace
18	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	1	None	replace
19	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  def);  [CE]  cannot  find  symbol  def  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  def);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  def);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  def	1	None	replace
20	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  sign);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  sign);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  sign);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	1	None	replace
21	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  n);  [CE]  cannot  find  symbol  n  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  n);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  n);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  n	1	None	replace
22	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    startIndex);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
23	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  startIndex,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  startIndex,  pos);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  startIndex,  pos);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    startIndex);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
24	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  endIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  endIndex);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  endIndex);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    startIndex);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
25	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(Integer.MIN_VALUE);  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(endIndex);  pos.setIndex(Integer.MIN_VALUE);	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  endIndex	32	None	replace
26	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  startIndex);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  startIndex);	  parseAndIgnoreWhitespace(source,    pos,    getRealFormat(),    n);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	19	None	replace
27	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  startIndex);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  startIndex);	  parseAndIgnoreWhitespace(source,    pos,    getRealFormat(),    n);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	19	None	replace
28	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  sign);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  sign);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  sign);	  parseAndIgnoreWhitespace(source,    pos,    getRealFormat(),    n);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	19	None	replace
29	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setStartIndex(initialIndex);  [CE]  cannot  find  symbol  endIndex  [FE]              AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  pos.setStartIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(endIndex);  pos.setStartIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	33	None	replace
30	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setStartIndex(startIndex);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(initialIndex);  pos.setStartIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(initialIndex);  pos.setStartIndex(startIndex);	          pos.setIndex(initialIndex);    pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
31	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setStartIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                  AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  pos.setStartIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(endIndex);  pos.setStartIndex(startIndex);	          pos.setIndex(initialIndex);    pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	33	None	replace
32	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setStartIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setStartIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(startIndex);  pos.setStartIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	27	24	add
34	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	27	24	add
35	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
36	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setStartIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setStartIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setStartIndex(initialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
37	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]          AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	27	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	27	24	add
39	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	27	24	add
40	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	24	add
41	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	24	add
42	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	24	add
43	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	24	add
44	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	24	add
45	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	24	add
46	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	24	add
47	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	29	24	add
48	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(endIndex);  pos.setIndex(endIndex);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	28	None	replace
49	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(endIndex);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	28	None	replace
50	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	2	add
51	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	2	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	45	24	add
53	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	45	24	add
54	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  Number  source  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  variable  source  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  Number  source  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    Number  source  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  variable  source  is  already  defined  in  method  parse(String,ParsePosition)	45	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	45	24	add
56	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	45	24	add
57	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(endIndex);  return  null;  }  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(endIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(endIndex);  return  null;  }	  	non-compiled	[CE]  cannot  find  symbol  endIndex	45	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	34	24	add
59	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	34	24	add
60	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  ParseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  ParseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  ParseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
61	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setIgnoreWhitespace(initialIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  pos.setIgnoreWhitespace(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(endIndex);  pos.setIgnoreWhitespace(initialIndex);	          pos.setIndex(initialIndex);    pos.setIgnoreWhitespace(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	64	None	replace
62	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  nf);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  nf);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  nf);	  ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    getRealFormat());    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	61	None	replace
63	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  0);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  0);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  0);	  ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    getRealFormat());    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	61	None	replace
64	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setStartIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setStartIndex(startIndex);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
65	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parsePosition(source);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parsePosition(source);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parsePosition(source);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
66	[BUG]  [BUGGY]  pos  =  parsePosition(source);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos  =  parsePosition(source);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos  =  parsePosition(source);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parsePosition(source);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }	  if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    	compilable	  [FE]  AssertionFailedError  	42	24	replace
68	[BUG]  [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }	  if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    	compilable	  [FE]  AssertionFailedError  	42	24	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	55	24	add
70	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	55	24	add
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	55	24	add
72	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	55	24	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	55	24	add
74	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	55	24	add
75	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setInitialIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
76	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	2	add
77	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	2	add
78	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	2	add
79	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	2	add
80	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source  >=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source  >=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    if(source  >=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	41	None	add
81	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(startIndex),  Integer.toHexString(initialIndex));  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toHexString(startIndex),  Integer.toHexString(initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toHexString(startIndex),  Integer.toHexString(initialIndex));	  pos.setIndex(Integer.toHexString(initialIndex));    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	40	None	replace
82	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(initialIndex),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toHexString(initialIndex),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toHexString(initialIndex),  DEFAULT_IMAGINARY_CHARACTER);	  pos.setIndex(Integer.toHexString(initialIndex));    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	40	None	replace
83	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(startIndex,  initialIndex));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toHexString(startIndex,  initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toHexString(startIndex,  initialIndex));	  pos.setIndex(Integer.toHexString(initialIndex));    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	40	None	replace
84	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(startIndex));  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toHexString(startIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toHexString(startIndex));	  pos.setIndex(Integer.toHexString(initialIndex));    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	40	None	replace
85	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  getRealFormat());  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  getRealFormat());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  getRealFormat());	  parseAndIgnoreWhitespace(source,    pos,    realFormat,    getRealFormat());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	47	None	replace
86	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  realFormat,  getRealFormat(),  nf);  [CE]  cannot  find  symbol  nf  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  realFormat,  getRealFormat(),  nf);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos,  realFormat,  getRealFormat(),  nf);	  parseAndIgnoreWhitespace(source,    pos,    realFormat,    getRealFormat());    	non-compiled	[CE]  cannot  find  symbol  nf	47	None	replace
87	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  true);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  true);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  true);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    false);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	3	None	replace
88	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    false);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	3	None	replace
89	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  false,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  false,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  false,  pos);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    false);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	3	None	replace
90	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  false,  true);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  false,  true);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  false,  true);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    false);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	3	None	replace
91	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
92	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
93	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  DEFAULT_IMAGINARY_CHARACTER,  c);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  DEFAULT_IMAGINARY_CHARACTER,  c);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  DEFAULT_IMAGINARY_CHARACTER,  c);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
94	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	53	None	replace
95	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat);	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	53	None	replace
96	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  c);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  c);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  c);	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	53	None	replace
97	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  n);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  n);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  n);	  ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
98	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  startIndex);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  startIndex);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  startIndex);	  ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
99	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  DEFAULT_IMAGINARY_CHARACTER);	  ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
100	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  c);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  c);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  c);	  ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
101	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  endIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  endIndex);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  endIndex);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    c);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
102	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    c);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
103	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	15	None	add
104	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	add
105	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	add
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	15	24	add
107	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	15	24	add
108	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  pos.setEndIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  pos.setEndIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    pos.setEndIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	15	None	add
109	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	add
110	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	add
111	[BUG]  [BUGGY]  pos.setIndex(definableIndex);  [CE]  cannot  find  symbol  definableIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(definableIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(definableIndex);	  pos.setIndex(id);    	non-compiled	[CE]  cannot  find  symbol  definableIndex	65	None	replace
112	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	2	add
113	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	2	add
114	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	2	add
115	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	2	add
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	9	24	add
117	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	9	24	add
118	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setEndIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	9	None	add
119	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	9	None	add
120	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  sign,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  sign,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  sign,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    sign);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	58	None	replace
121	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  sign,  c);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  sign,  c);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  sign,  c);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    sign);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	58	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    	compilable	  [FE]  AssertionFailedError  	44	24	replace
123	[BUG]  [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    	compilable	  [FE]  AssertionFailedError  	44	24	replace
124	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    def);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
125	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  def,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  def,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  def,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    def);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
126	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(Integer.MAX_VALUE);  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(endIndex);  pos.setIndex(Integer.MAX_VALUE);	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  endIndex	30	None	replace
127	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(startIndex);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(startIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setEndIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
128	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(initialIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setEndIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
129	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(startIndex),  Integer.toString(initialIndex));  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toString(startIndex),  Integer.toString(initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toString(startIndex),  Integer.toString(initialIndex));	  pos.setIndex(Integer.toString(initialIndex));    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	39	None	replace
130	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(initialIndex),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toString(initialIndex),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toString(initialIndex),  DEFAULT_IMAGINARY_CHARACTER);	  pos.setIndex(Integer.toString(initialIndex));    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	39	None	replace
131	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(endIndex),  Integer.toString(initialIndex));  [CE]  cannot  find  symbol  endIndex  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toString(endIndex),  Integer.toString(initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toString(endIndex),  Integer.toString(initialIndex));	  pos.setIndex(Integer.toString(initialIndex));    	non-compiled	[CE]  cannot  find  symbol  endIndex	39	None	replace
132	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(startIndex,  initialIndex));  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toString(startIndex,  initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toString(startIndex,  initialIndex));	  pos.setIndex(Integer.toString(initialIndex));    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	39	None	replace
133	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    p);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	25	None	replace
134	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  true);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  true);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  true);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    false);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
135	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  startIndex,  false);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  startIndex,  false);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  startIndex,  false);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    false);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
136	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	24	add
137	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	24	add
138	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	24	add
139	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	24	add
140	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	24	add
141	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	24	add
142	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setStartIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setStartIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setStartIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
143	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
144	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	43	24	add
146	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	43	24	add
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	43	24	add
148	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	43	24	add
149	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
150	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
151	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  return  null;  }  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  return  null;  }	  	non-compiled	[CE]  cannot  find  symbol  endIndex	43	None	add
152	[BUG]  [BUGGY]  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setErrorIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setErrorIndex(endIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	16	None	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	pos.setIndex(startIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	21	24	add
154	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(startIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	21	24	add
155	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(startIndex);    pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	21	None	add
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	pos.setIndex(startIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	21	24	add
157	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(startIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	21	24	add
158	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(getRealFormat());  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(getRealFormat());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(startIndex);    pos.setIndex(getRealFormat());	  	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	21	None	add
159	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(n);  [CE]  cannot  find  symbol  n  [FE]            AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(n);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(startIndex);    pos.setIndex(n);	  	non-compiled	[CE]  cannot  find  symbol  n	21	None	add
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	11	24	add
161	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	11	24	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	11	24	add
163	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	11	24	add
164	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	11	24	add
166	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	11	24	add
167	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setEndIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	11	None	add
168	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  sign);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  sign);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  sign);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    n);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	24	None	replace
169	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  pos.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  pos.getCharacterIndex());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  pos.getCharacterIndex());	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
170	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos.getCharacterIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos.getCharacterIndex(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos.getCharacterIndex(),  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
171	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  startIndex.getCharacterIndex());  [CE]  int  cannot  be  dereferenced  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  startIndex.getCharacterIndex());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  startIndex.getCharacterIndex());	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos.getCharacterIndex());    	non-compiled	[CE]  int  cannot  be  dereferenced	66	None	replace
172	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  source.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  source.getCharacterIndex());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  source.getCharacterIndex());	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
173	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	54	None	replace
174	[BUG]  [BUGGY]  pos.setIndex(initialIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(initialIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(initialIndex,  DEFAULT_IMAGINARY_CHARACTER);	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	54	None	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	  if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    	compilable	  [FE]  AssertionFailedError  	46	24	replace
176	[BUG]  [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	  if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    	compilable	  [FE]  AssertionFailedError  	46	24	replace
177	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    c);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	2	None	replace
178	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(startIndex));  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toString(startIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toString(startIndex));	  pos.setIndex(Integer.toString(initialIndex));    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	39	None	replace
179	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(startIndex),  Integer.toString(endIndex));  [CE]  cannot  find  symbol  endIndex  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toString(startIndex),  Integer.toString(endIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toString(startIndex),  Integer.toString(endIndex));	  pos.setIndex(Integer.toString(initialIndex));    	non-compiled	[CE]  cannot  find  symbol  endIndex	39	None	replace
180	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	15	None	add
181	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  ParsePosition  pos  =  parsePosition(source,  getRealFormat());  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  ParsePosition  pos  =  parsePosition(source,  getRealFormat());  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    ParsePosition  pos  =  parsePosition(source,  getRealFormat());	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	15	None	add
182	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	24	add
183	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	24	add
184	[BUG]  [BUGGY]  n.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [CE]  cannot  find  symbol  n  [FE]        AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  n.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	n.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  cannot  find  symbol  n	52	None	replace
185	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setStartIndex(initialIndex);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  n.setIndex(initialIndex);  pos.setStartIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	n.setIndex(initialIndex);  pos.setStartIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	33	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=  null)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
187	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=  null)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
188	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(initialIndex);  }  else  {  parseWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  pos.setIndex(initialIndex);  }  else  {  parseWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=  null)  {  pos.setIndex(initialIndex);  }  else  {  parseWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
189	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(source,  initialIndex));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toHexString(source,  initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toHexString(source,  initialIndex));	  pos.setIndex(Integer.toHexString(initialIndex));    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	40	None	replace
190	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  realFormat,  pos,  getRealFormat());  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  realFormat,  pos,  getRealFormat());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  realFormat,  pos,  getRealFormat());	  parseAndIgnoreWhitespace(source,    pos,    realFormat,    getRealFormat());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	47	None	replace
191	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  realFormat,  getRealFormat(),  n);  [CE]  cannot  find  symbol  n  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  realFormat,  getRealFormat(),  n);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos,  realFormat,  getRealFormat(),  n);	  parseAndIgnoreWhitespace(source,    pos,    realFormat,    getRealFormat());    	non-compiled	[CE]  cannot  find  symbol  n	47	None	replace
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
193	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
195	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
197	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
198	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(startIndex);    pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	21	None	add
199	[BUG]  [BUGGY]  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(startIndex);    parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	21	None	add
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	pos.setIndex(startIndex);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	21	24	add
201	[BUG]  [BUGGY]  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(startIndex);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	21	24	add
202	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parse(source,  getRealFormat(),  pos);  [CE]  no  suitable  method  found  for  parse(String,NumberFormat,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parse(source,  getRealFormat(),  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parse(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  no  suitable  method  found  for  parse(String,NumberFormat,ParsePosition)	9	None	add
203	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  true);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
204	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos.getErrorIndex());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos.getErrorIndex());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos.getErrorIndex());	  parseAndIgnoreWhitespace(source,    getRealPosition(),    startIndex);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
205	[BUG]  [BUGGY]  ParseAndIgnoreWhitespace(source,  getRealPosition(),  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParseAndIgnoreWhitespace(source,  getRealPosition(),  pos);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParseAndIgnoreWhitespace(source,  getRealPosition(),  pos);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    startIndex);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
206	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos.getStartIndex());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos.getStartIndex());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos.getStartIndex());	  parseAndIgnoreWhitespace(source,    getRealPosition(),    startIndex);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
207	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  p);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  p);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  p);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    p);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	25	None	replace
208	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  imaginaryCharacter);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  imaginaryCharacter);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  imaginaryCharacter);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    def);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	60	None	replace
209	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  n);  [CE]  cannot  find  symbol  n  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  n);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  n);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    realFormat);    	non-compiled	[CE]  cannot  find  symbol  n	59	None	replace
210	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  def);  [CE]  cannot  find  symbol  def  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  def);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat,  def);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    realFormat);    	non-compiled	[CE]  cannot  find  symbol  def	59	None	replace
211	[BUG]  [BUGGY]  if(source!=  null)  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=  null)  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
212	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	2	replace
213	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	2	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	34	24	add
215	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	34	24	add
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	pos.setErrorIndex(startIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(endIndex);    	compilable	  [FE]  AssertionFailedError  	14	24	replace
217	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setErrorIndex(startIndex);	          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(endIndex);    	compilable	  [FE]  AssertionFailedError  	14	24	replace
218	[BUG]  [BUGGY]  n  =  getRealFormat().length();  [CE]  cannot  find  symbol  n  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  n  =  getRealFormat().length();  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	n  =  getRealFormat().length();	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	56	None	replace
219	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source!=  null)  {  ParseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  if(source!=  null)  {  ParseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    if(source!=  null)  {  ParseAndIgnoreWhitespace(source,  pos);  }	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
220	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex,  sign);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex,  sign);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  startIndex,  sign);	  parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	20	None	replace
221	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	27	24	add
223	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	27	24	add
224	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setIgnoreWhitespace(initialIndex);  [CE]  cannot  find  symbol  n  [FE]        AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  n.setIndex(initialIndex);  pos.setIgnoreWhitespace(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	n.setIndex(initialIndex);  pos.setIgnoreWhitespace(initialIndex);	          pos.setIndex(initialIndex);    pos.setIgnoreWhitespace(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	64	None	replace
225	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	43	None	add
226	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  Number  source  =  parseNumber(source,  getRealFormat(),  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  Number  source  =  parseNumber(source,  getRealFormat(),  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  Number  source  =  parseNumber(source,  getRealFormat(),  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
227	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  return  null;  }  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	43	None	add
228	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  Number  source  =  parseNumber(source,  getRealFormat(),  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  Number  source  =  parseNumber(source,  getRealFormat(),  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  Number  source  =  parseNumber(source,  getRealFormat(),  pos);  if(source!=  null)  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
229	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  }  else  {  return  null;  }  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  }  else  {  return  null;  }	  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	45	None	add
230	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  return  null;  }  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  return  null;  }	  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	45	None	add
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	45	24	add
232	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  return  null;  }  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	45	24	add
233	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  sign,  def);  [CE]  cannot  find  symbol  def  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  sign,  def);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  sign,  def);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    sign);    	non-compiled	[CE]  cannot  find  symbol  def	58	None	replace
234	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    pos.setErrorIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	11	None	add
235	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setInitialIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	11	24	add
237	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	11	24	add
238	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	  ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
239	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  null);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  null);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  null);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    false);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	3	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	27	24	add
241	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	27	24	add
242	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	12	None	replace
243	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	12	None	replace
244	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	12	None	replace
245	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  graph);  [CE]  cannot  find  symbol  graph  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  graph);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  graph);	  parseAndIgnoreWhitespace(source,    pos,    getRealFormat(),    n);    	non-compiled	[CE]  cannot  find  symbol  graph	19	None	replace
246	[BUG]  [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  }  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  }  else  {  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	54	None	replace
247	[BUG]  [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  }  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex!=  -1)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	54	None	replace
248	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER.getCharacterIndex());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER.getCharacterIndex());	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
249	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat.getCharacterIndex());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  realFormat.getCharacterIndex());	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
250	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  def.getCharacterIndex());  [CE]  cannot  find  symbol  def  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  def.getCharacterIndex());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  def.getCharacterIndex());	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol  def	66	None	replace
251	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	  parseAndIgnoreWhitespace(source,    pos,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	17	None	replace
252	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  c);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  c);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  c);	  ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
253	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos.getLineNumber());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos.getLineNumber());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos.getLineNumber());	  parseAndIgnoreWhitespace(source,    getRealPosition(),    startIndex);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
254	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  startIndex,  sign);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  startIndex,  sign);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  startIndex,  sign);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    sign);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	58	None	replace
255	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  realCharacter);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  realCharacter);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  realCharacter);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
256	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(!Character.isDigit(c))  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(!Character.isDigit(c))  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	2	replace
257	[BUG]  [BUGGY]  if(!Character.isDigit(c))  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(!Character.isDigit(c))  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(!Character.isDigit(c))  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	2	replace
258	[BUG]  [BUGGY]  if(!Character.isDigit(c))  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(!Character.isDigit(c))  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(!Character.isDigit(c))  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
259	[BUG]  [BUGGY]  pos.setStartIndex(Integer.toHexString(initialIndex));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setStartIndex(Integer.toHexString(initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setStartIndex(Integer.toHexString(initialIndex));	  pos.setStartIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
260	[BUG]  [BUGGY]  pos.setStartIndex(Integer.toString(initialIndex));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setStartIndex(Integer.toString(initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setStartIndex(Integer.toString(initialIndex));	  pos.setStartIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
261	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos.getIndex(),  pos);  }  else  {  return  null;  }  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos.getIndex(),  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos.getIndex(),  pos);  }  else  {  return  null;  }	  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	45	None	add
262	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source);  }  else  {  return  null;  }  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source);  }  else  {  return  null;  }	  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	45	None	add
263	[BUG]  [BUGGY]  ParseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParseAndIgnoreWhitespace(source,  getRealFormat(),  pos);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    n);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
264	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(c,  initialIndex));  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toString(c,  initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toString(c,  initialIndex));	  pos.setIndex(Integer.toString(initialIndex));    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	39	None	replace
265	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  ')'  expected	43	None	add
266	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
267	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(Integer.MAX_VALUE);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(Integer.MAX_VALUE);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
268	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(Integer.MAX_VALUE);  return  null;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(initialIndex);  return  null;  }  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(Integer.MAX_VALUE);  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    else    {    pos.setIndex(initialIndex);    return    null;    }    if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(Integer.MAX_VALUE);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	43	2	add
269	[BUG]  [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealPosition());  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealPosition());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  getRealPosition());	  ParsePosition    pos    =    parseAndIgnoreWhitespace(source,    getRealFormat());    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	61	None	replace
270	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  getRealFormat());  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  getRealFormat());  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  getRealFormat());	  parseAndIgnoreWhitespace(source,    pos,    realFormat,    getRealFormat());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	47	None	replace
271	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  realFormat,  getRealFormat(),  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  realFormat,  getRealFormat(),  pos);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos,  realFormat,  getRealFormat(),  pos);	  parseAndIgnoreWhitespace(source,    pos,    realFormat,    getRealFormat());    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	47	None	replace
272	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	56	None	replace
273	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	56	None	replace
274	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	56	None	replace
275	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]          AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	56	None	replace
276	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  re);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  re);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  re);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    c);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
278	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
280	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
282	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
284	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    pos);    	compilable	  [FE]  AssertionFailedError  	35	24	replace
285	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  }  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  }	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	53	None	replace
286	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  def);  [CE]  cannot  find  symbol  def  [FE]            AssertionFailedError      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  def);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(initialIndex);  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  def);	          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  cannot  find  symbol  def	53	None	replace
287	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  byseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          pos.setIndex(initialIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  byseAndIgnoreWhitespace(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                pos.setIndex(initialIndex);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  byseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
288	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  def,  c);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  def,  c);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  def,  c);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    def);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
289	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [CE]  incomparable  types:  char  and  String  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	30	None	replace
290	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [CE]  incomparable  types:  char  and  String  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	30	None	replace
291	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	30	None	replace
292	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setEndIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setEndIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(initialIndex);    pos.setEndIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	11	None	add
293	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(initialIndex,  DEFAULT_IMAGINARY_CHARACTER));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toHexString(initialIndex,  DEFAULT_IMAGINARY_CHARACTER));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toHexString(initialIndex,  DEFAULT_IMAGINARY_CHARACTER));	  pos.setIndex(Integer.toHexString(initialIndex));    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	40	None	replace
294	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(c,  initialIndex));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  pos.setIndex(Integer.toHexString(c,  initialIndex));  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	pos.setIndex(Integer.toHexString(c,  initialIndex));	  pos.setIndex(Integer.toHexString(initialIndex));    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	40	None	replace
295	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);  [BUGGY]        Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealPosition(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  false);	  parseAndIgnoreWhitespace(source,    getRealPosition(),    pos,    false);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
296	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	ParsePosition  pos  =  parsePosition(source,  pos);	  if(source!=    null)    {    parseAndIgnoreWhitespace(source,    pos);    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	42	None	replace
297	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [CE]  incomparable  types:  char  and  String  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	32	None	replace
298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	compilable	  [FE]  AssertionFailedError  	32	24	replace
299	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	compilable	  [FE]  AssertionFailedError  	32	24	replace
300	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [CE]  incomparable  types:  char  and  String  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	32	None	replace
301	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setWarningIndex(startIndex);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setErrorIndex(startIndex);  parseAndIgnoreWhitespace(source,  pos);  pos.setWarningIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setErrorIndex(startIndex);    parseAndIgnoreWhitespace(source,  pos);  pos.setWarningIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	9	24	add
303	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	9	24	add
304	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	9	None	add
305	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  symbol);  [CE]  cannot  find  symbol  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  symbol);  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  symbol);	  parseAndIgnoreWhitespace(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  symbol	1	None	replace
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
307	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
309	[BUG]  [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
311	[BUG]  [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }        [BUGGY]  if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	if(initialIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	28	24	replace
