bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	8	24	add
2	[BUG]  [BUGGY]      pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	8	24	add
3	[BUG]  [BUGGY]      pos.setIndex(initialIndex  +  n);  pos.setIndex(InitialIndex  +  n);  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex  +  n);  pos.setIndex(InitialIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setIndex(initialIndex    +    n);    pos.setIndex(InitialIndex  +  n);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	8	None	add
4	[BUG]  [BUGGY]      pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n;	  	non-compiled	[CE]  ')'  expected	8	None	add
5	[BUG]  [BUGGY]  startIndex  =  n.getIndex()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  n.getIndex()  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  n.getIndex()  +  1;	  startIndex    =    n.getIndex();    	non-compiled	[CE]  int  cannot  be  dereferenced	21	None	replace
6	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.getIndex();  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.getIndex();	  startIndex    =    n.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	21	None	replace
7	[BUG]  [BUGGY]  startIndex  =  im.getIndex();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  im.getIndex();  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  im.getIndex();	  startIndex    =    n.getIndex();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
8	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	add
9	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	add
10	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n;  int  startIndex  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n;  int  startIndex  =  pos.getIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n;    int  startIndex  =  pos.getIndex()  +  n;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	14	None	add
11	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n;    pos  =  pos.getIndex()  +  n;	  	non-compiled	[CE]  incompatible  types	14	None	add
12	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  pos.getIndex()  +  n;  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  pos.getIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  pos.getIndex()  +  n;	  	non-compiled	[CE]  ')'  expected	14	None	add
13	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  [CE]  cannot  find  symbol  StartIndex  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n;    StartIndex  =  pos.getIndex()  +  n;	  	non-compiled	[CE]  cannot  find  symbol  StartIndex	14	None	add
14	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	add
15	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	add
16	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	4	None	add
17	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex;	  	non-compiled	[CE]  ')'  expected	4	None	add
18	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex  =  pos.getIndex()  +  n  +  1;	  startIndex    =    pos.getIndex()    +    n;    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	24	replace
19	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getIndex()  +  n  +  1;	  startIndex    =    pos.getIndex()    +    n;    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	24	replace
20	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  +  n;  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  source.getIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
21	[BUG]  [BUGGY]  startIndex  =  im.getIndex()  +  n;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  im.getIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  im.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setErrorIndex(n  +  1);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(n  +  1);	      pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	7	24	replace
23	[BUG]  [BUGGY]  pos.setErrorIndex(n  +  1);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setErrorIndex(n  +  1);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(n  +  1);	      pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	7	24	replace
24	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setStartIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setStartIndex(initialIndex);	      pos.setErrorIndex(n);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
25	[BUG]  [BUGGY]  int  startIndex  =  source.length()  -  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.length()  -  1;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.length()  -  1;	      int    startIndex    =    source.length();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	17	None	replace
26	[BUG]  [BUGGY]  int  startIndex  =  source.length()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.length()  +  1;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.length()  +  1;	      int    startIndex    =    source.length();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	17	None	replace
27	[BUG]  [BUGGY]  int  startIndex  =  source.length()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.length()  +  n;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.length()  +  n;	      int    startIndex    =    source.length();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	17	None	replace
28	[BUG]  [BUGGY]  int  startIndex  =  n.length();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  n.length();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  n.length();	      int    startIndex    =    source.length();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	17	None	replace
29	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  source.getIndex()  -  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  -  1;	  startIndex    =    source.getIndex();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
30	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  +  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf('n',  n  +  1);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  +  1);	      int    startIndex    =    source.indexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	19	None	replace
31	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  *  n);	      int    startIndex    =    source.indexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	19	None	replace
32	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('n',  n);	      int    startIndex    =    source.indexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	19	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setIndex(n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(n);	      pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	5	24	replace
34	[BUG]  [BUGGY]  pos.setIndex(n);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setIndex(n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);	      pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	5	24	replace
35	[BUG]  [BUGGY]  Number  im  =  pos.getNumber();  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  Number  im  =  pos.getNumber();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  pos.getNumber();	      Number    im    =    im.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
36	[BUG]  [BUGGY]  Number  im  =  source.getNumber();  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  Number  im  =  source.getNumber();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  source.getNumber();	      Number    im    =    im.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
37	[BUG]  [BUGGY]  Number  im  =  n.getNumber();  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  Number  im  =  n.getNumber();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  n.getNumber();	      Number    im    =    im.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
38	[BUG]  [BUGGY]  Number  im  =  this.source.getNumber();  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  Number  im  =  this.source.getNumber();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  this.source.getNumber();	      Number    im    =    im.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
40	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
41	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	2	24	add
42	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	2	24	add
43	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	2	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
45	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
46	[BUG]  [BUGGY]  startIndex  =  source.getStartIndex();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  source.getStartIndex();  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getStartIndex();	  startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
47	[BUG]  [BUGGY]  startIndex  =  pos.getStartIndex()  +  n;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getStartIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getStartIndex()  +  n;	  startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
48	[BUG]  [BUGGY]  startIndex  =  im.getStartIndex();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  im.getStartIndex();  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  im.getStartIndex();	  startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(initialIndex  +  1);	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	3	24	replace
50	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex  +  1);	      pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	3	24	replace
51	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	2	add
52	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	2	add
53	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  1;  int  startIndex  =  pos.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  1;  int  startIndex  =  pos.getIndex()  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    1;    int  startIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	11	None	add
54	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1;  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1;	  	non-compiled	[CE]  ')'  expected	11	None	add
55	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    1;    pos  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  incompatible  types	11	None	add
56	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  1;  StartIndex  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  StartIndex  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  1;  StartIndex  =  pos.getIndex()  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    1;    StartIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  StartIndex	11	None	add
57	[BUG]  [BUGGY]  startIndex  =  im.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  im.getIndex()  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  im.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
58	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  +  1;  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  source.getIndex()  +  1;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
59	[BUG]  [BUGGY]  int  n  =  im.length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  n  =  im.length();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  im.length();	      int    n    =    source.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	16	None	replace
60	[BUG]  [BUGGY]  int  n  =  source.length()  +  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  n  =  source.length()  +  1;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  source.length()  +  1;	      int    n    =    source.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	16	None	replace
61	[BUG]  [BUGGY]  int  n  =  source.length()  -  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  n  =  source.length()  -  1;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  source.length()  -  1;	      int    n    =    source.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	16	None	replace
62	[BUG]  [BUGGY]  int  n  =  getImaginaryCharacter().length()  +  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  n  =  getImaginaryCharacter().length()  +  1;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  getImaginaryCharacter().length()  +  1;	      int    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	1	None	replace
63	[BUG]  [BUGGY]  int  n  =  getImaginaryCharacter().length()  -  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  n  =  getImaginaryCharacter().length()  -  1;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  getImaginaryCharacter().length()  -  1;	      int    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	1	None	replace
64	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf(n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(n);	      int    startIndex    =    source.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	20	None	replace
65	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf(c);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  im.indexOf(c);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf(c);	      int    startIndex    =    source.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	20	None	replace
66	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(c,  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf(c,  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(c,  n);	      int    startIndex    =    source.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	20	None	replace
67	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(n,  c);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf(n,  c);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(n,  c);	      int    startIndex    =    source.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	20	None	replace
68	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(n);  pos.setErrorIndex(n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	        pos.setErrorIndex(n);    pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	2	add
69	[BUG]  [BUGGY]      pos.setErrorIndex(n);  pos.setErrorIndex(n);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(n);  pos.setErrorIndex(n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(n);    pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	2	add
70	[BUG]  [BUGGY]      pos.setErrorIndex(n);  int  n  =  getImaginaryCharacter().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(n);  int  n  =  getImaginaryCharacter().length();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(n);    int  n  =  getImaginaryCharacter().length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	6	None	add
71	[BUG]  [BUGGY]      pos.setErrorIndex(n);  pos.setErrorIndex(n;  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(n);  pos.setErrorIndex(n;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(n);    pos.setErrorIndex(n;	  	non-compiled	[CE]  ')'  expected	6	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setIndex(startIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(startIndex  +  n);	      pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	9	24	replace
73	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setIndex(startIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(startIndex  +  n);	      pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	9	24	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setIndex(n  +  initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(n  +  initialIndex);	      pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	9	24	replace
75	[BUG]  [BUGGY]  pos.setIndex(n  +  initialIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setIndex(n  +  initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n  +  initialIndex);	      pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	9	24	replace
76	[BUG]  [BUGGY]  pos.setIndex(endIndex  +  n);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setIndex(endIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(endIndex  +  n);	      pos.setIndex(initialIndex    +    n);    	non-compiled	[CE]  cannot  find  symbol  endIndex	9	None	replace
77	[BUG]  [BUGGY]  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setErrorIndex(endIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(endIndex);	      pos.setErrorIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	5	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setErrorIndex(startIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(startIndex);	      pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	7	24	replace
79	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setErrorIndex(startIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(startIndex);	      pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	7	24	replace
80	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  pos.length);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf('n',  pos.length);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  pos.length);	      int    startIndex    =    source.indexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	19	None	replace
81	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  0);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf('n',  0);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  0);	      int    startIndex    =    source.indexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	19	None	replace
82	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex;	  	non-compiled	[CE]  ')'  expected	2	None	add
83	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  int  initialIndex  =  source.indexOf('n');  pos.setErrorIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(initialIndex);  int  initialIndex  =  source.indexOf('n');  pos.setErrorIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(initialIndex);    int  initialIndex  =  source.indexOf('n');  pos.setErrorIndex(initialIndex);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	add
84	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(initialIndex);  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(initialIndex);    int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	add
85	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  int  initialIndex  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(initialIndex);  int  initialIndex  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(initialIndex);    int  initialIndex  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	add
86	[BUG]  [BUGGY]  Number  im  =  re.getNumber();  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  Number  im  =  re.getNumber();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  re.getNumber();	      Number    im    =    im.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
87	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(re);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf(re);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(re);	      int    startIndex    =    source.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	20	None	replace
88	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(c,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf(c,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(c,  DEFAULT_IMAGINARY_CHARACTER);	      int    startIndex    =    source.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	20	None	replace
89	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  int  n  =  getImaginaryCharacter().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(initialIndex);  int  n  =  getImaginaryCharacter().length();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(initialIndex);    int  n  =  getImaginaryCharacter().length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	4	None	add
90	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setErrorIndex(initialIndex);    pos.setWarningIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
91	[BUG]  [BUGGY]  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setInitialIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setInitialIndex(initialIndex);	      pos.setErrorIndex(n);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
92	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n;  pointIndex  =  pos.getIndex()  +  n;  [CE]  cannot  find  symbol  pointIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n;  pointIndex  =  pos.getIndex()  +  n;  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n;    pointIndex  =  pos.getIndex()  +  n;	  	non-compiled	[CE]  cannot  find  symbol  pointIndex	14	None	add
93	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	14	24	add
94	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	14	24	add
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(initialIndex  +  n);	      pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	5	24	replace
96	[BUG]  [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(initialIndex  +  n);	      pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	5	24	replace
97	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	24	add
98	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [BUGGY]    int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	24	add
99	[BUG]  [BUGGY]  int  n  =  im.getImaginaryCharacter().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  n  =  im.getImaginaryCharacter().length();  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  im.getImaginaryCharacter().length();	      int    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	1	None	replace
100	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('/',  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]  int  startIndex  =  source.indexOf('/',  n);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('/',  n);	      int    startIndex    =    source.indexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	19	None	replace
101	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();    [BUGGY]      pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]    startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	        pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
