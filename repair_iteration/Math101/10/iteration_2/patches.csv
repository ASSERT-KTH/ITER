bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex  +  2);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(initialIndex  +  2);	          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	2	24	replace
2	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex  +  2);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex  +  2);	          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	2	24	replace
3	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(startIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	78	2	add
4	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(startIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	78	2	add
5	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(startIndex);    pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	78	2	add
6	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(n);  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(startIndex);    pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	78	2	add
7	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(endIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(startIndex);    pos.setErrorIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	78	None	add
8	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(startIndex);    pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	78	2	add
9	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(startIndex);    pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	78	2	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(pos.getIndex()  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(pos.getIndex()  +  n);	  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(    pos.getIndex()    +    n;    	compilable	  [FE]  AssertionFailedError  	12	24	replace
11	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  n);  [FE]  AssertionFailedError  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(pos.getIndex()  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(pos.getIndex()  +  n);	  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(    pos.getIndex()    +    n;    	compilable	  [FE]  AssertionFailedError  	12	24	replace
12	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  n;  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(    pos.getIndex()    +    n;    	non-compiled	[CE]  ')'  expected	12	None	replace
13	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(pos.getIndex()  +  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(pos.getIndex()  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(pos.getIndex()  +  n);	  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(startIndex  +  n);  pos.setIndex(startIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(startIndex    +    n);    pos.setIndex(startIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	72	24	add
15	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  n);  pos.setIndex(startIndex  +  n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(startIndex  +  n);  pos.setIndex(startIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(startIndex    +    n);    pos.setIndex(startIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	72	24	add
16	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  n);  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(startIndex  +  n);  int  startIndex  =  pos.getIndex();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(startIndex    +    n);    int  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	72	None	add
17	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  n);  pos.setIndex(startIndex  +  n;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(startIndex  +  n);  pos.setIndex(startIndex  +  n;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(startIndex    +    n);    pos.setIndex(startIndex  +  n;	  	non-compiled	[CE]  ')'  expected	72	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	39	24	add
19	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	39	24	add
20	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	39	None	add
21	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
22	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex;	  	non-compiled	[CE]  ')'  expected	39	None	add
23	[BUG]  [BUGGY]  pointIndex  =  pos.getIndex()  +  n;  [CE]  cannot  find  symbol  pointIndex  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pointIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pointIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pointIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol  pointIndex	92	None	replace
24	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pointIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
25	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n;  endIndex  =  pos.getIndex()  +  n;  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n;  endIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getIndex()  +  n;  endIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pointIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol  endIndex	92	None	replace
26	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.getIndex()  +  n;	  int    startIndex    =    source.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
27	[BUG]  [BUGGY]  int  startIndex  =  source.getStartIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.getStartIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.getStartIndex();	  int    startIndex    =    source.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
28	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.getIndex()  -  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.getIndex()  -  1;	  int    startIndex    =    source.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
29	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.getIndex()  +  1;	  int    startIndex    =    source.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	6	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex  +  n);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
31	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex  +  n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex  +  n);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  1);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
33	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  1);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
34	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(endIndex  +  n);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(endIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(startIndex);  pos.setIndex(endIndex  +  n);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	non-compiled	[CE]  cannot  find  symbol  endIndex	45	None	replace
35	[BUG]  [BUGGY]  Number  im  =  re.getNumber()  +  1;  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Number  im  =  re.getNumber()  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  re.getNumber()  +  1;	  Number    im    =    re.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	86	None	replace
36	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setStartIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setStartIndex(initialIndex);  pos.setErrorIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
37	[BUG]  [BUGGY]  startIndex  =  n.getStartIndex();  [CE]  int  cannot  be  dereferenced  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  n.getStartIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  n.getStartIndex();	  startIndex    =    im.getStartIndex();    	non-compiled	[CE]  int  cannot  be  dereferenced	48	None	replace
38	[BUG]  [BUGGY]  int  startIndex  =  source.length()  +  n  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.length()  +  n  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.length()  +  n  +  1;	  int    startIndex    =    source.length()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	27	None	replace
39	[BUG]  [BUGGY]  int  startIndex  =  source.length()  /  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.length()  /  n;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.length()  /  n;	  int    startIndex    =    source.length()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	27	None	replace
40	[BUG]  [BUGGY]  int  startIndex  =  source.length()  *  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.length()  *  n;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.length()  *  n;	  int    startIndex    =    source.length()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	27	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(n  +  1);	  pos.setIndex(initialIndex    +    1);    	compilable	  [FE]  AssertionFailedError  	50	24	replace
42	[BUG]  [BUGGY]  pos.setIndex(n  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n  +  1);	  pos.setIndex(initialIndex    +    1);    	compilable	  [FE]  AssertionFailedError  	50	24	replace
43	[BUG]  [BUGGY]  int  startIndex  =  pos.indexOf('n',  source.length);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.indexOf('n',  source.length);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.indexOf('n',  source.length);	  int    startIndex    =    source.indexOf('n',    pos.length);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	80	None	replace
44	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf('n',  pos.length);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf('n',  pos.length);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf('n',  pos.length);	  int    startIndex    =    source.indexOf('n',    pos.length);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	80	None	replace
45	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  pos.length  +  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  pos.length  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  pos.length  +  1);	  int    startIndex    =    source.indexOf('n',    pos.length);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	80	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(initialIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(initialIndex  +  1);	  pos.setErrorIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	96	24	replace
47	[BUG]  [BUGGY]  pos.setErrorIndex(initialIndex  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(initialIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(initialIndex  +  1);	  pos.setErrorIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	96	24	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(startIndex  +  n);	  pos.setErrorIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	96	24	replace
49	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex  +  n);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(startIndex  +  n);	  pos.setErrorIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	96	24	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(n  +  initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(n  +  initialIndex);	  pos.setErrorIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	96	24	replace
51	[BUG]  [BUGGY]  pos.setErrorIndex(n  +  initialIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(n  +  initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(n  +  initialIndex);	  pos.setErrorIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	96	24	replace
52	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf(re);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf(re);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf(re);	  int    startIndex    =    source.indexOf(re);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	87	None	replace
53	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(n,  re);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(n,  re);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(n,  re);	  int    startIndex    =    source.indexOf(re);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	87	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  getImaginaryCharacter().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	n  =  getImaginaryCharacter().length();	          pos.setErrorIndex(initialIndex);    int    n    =    getImaginaryCharacter().length();    	compilable	  [FE]  AssertionFailedError  	89	24	replace
55	[BUG]  [BUGGY]  n  =  getImaginaryCharacter().length();  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  getImaginaryCharacter().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  getImaginaryCharacter().length();	          pos.setErrorIndex(initialIndex);    int    n    =    getImaginaryCharacter().length();    	compilable	  [FE]  AssertionFailedError  	89	24	replace
56	[BUG]  [BUGGY]  startIndex  =  source.getStartIndex()  +  n;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getStartIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getStartIndex()  +  n;	  startIndex    =    source.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
57	[BUG]  [BUGGY]  startIndex  =  source.getStartIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getStartIndex()  -  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getStartIndex()  -  1;	  startIndex    =    source.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
58	[BUG]  [BUGGY]  pos.setInitialIndex(n);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setInitialIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setInitialIndex(n);	  pos.setInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
59	[BUG]  [BUGGY]  pos.setInitialIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setInitialIndex(initialIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setInitialIndex(initialIndex  +  1);	  pos.setInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
60	[BUG]  [BUGGY]  StartIndex  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  StartIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  StartIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	StartIndex  =  pos.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    StartIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol  StartIndex	56	None	replace
61	[BUG]  [BUGGY]  startIndex  =  pos.getIndex();  StartIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  StartIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex();  StartIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getIndex();  StartIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    StartIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol  StartIndex	56	None	replace
62	[BUG]  [BUGGY]  StartIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  StartIndex  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  StartIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	StartIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    StartIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol  StartIndex	56	None	replace
63	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        1;        pos.setIndex(    pos.getIndex()    +    1);    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	97	24	add
64	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        pos.setIndex(    pos.getIndex()    +    1);    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	97	24	add
65	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  pos.setIndex(  pos.getIndex()  +  1);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        1;        pos.setIndex(    pos.getIndex()    +    1);    pos.setIndex(  pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	97	24	add
66	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  pos.setIndex(  pos.getIndex()  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  pos.setIndex(  pos.getIndex()  +  1);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        pos.setIndex(    pos.getIndex()    +    1);    pos.setIndex(  pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	97	24	add
67	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  int  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  int  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        pos.setIndex(    pos.getIndex()    +    1);    int  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	97	None	add
68	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  StartIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [CE]  cannot  find  symbol  StartIndex  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  StartIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        pos.setIndex(    pos.getIndex()    +    1);    StartIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  StartIndex	97	None	add
69	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  Integer  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  pos.getIndex()  +  1);  Integer  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        pos.setIndex(    pos.getIndex()    +    1);    Integer  startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  pos.getIndex()  +  1);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	97	None	add
70	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf(c,  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf(c,  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf(c,  n);	  int    startIndex    =    source.indexOf(c,    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	66	None	replace
71	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(re,  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(re,  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(re,  n);	  int    startIndex    =    source.indexOf(c,    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	66	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  pos.setIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(n);    pos.setIndex(n);	  	compilable	  [FE]  AssertionFailedError  	33	24	add
73	[BUG]  [BUGGY]  pos.setIndex(n);  pos.setIndex(n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  pos.setIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);    pos.setIndex(n);	  	compilable	  [FE]  AssertionFailedError  	33	24	add
74	[BUG]  [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);    int  n  =  getImaginaryCharacter().length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
75	[BUG]  [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().length();  pos.setIndex(n);  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().length();  pos.setIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);    int  n  =  getImaginaryCharacter().length();  pos.setIndex(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
76	[BUG]  [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacterIndex().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacterIndex().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);    int  n  =  getImaginaryCharacterIndex().length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
77	[BUG]  [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().indexOf('n');  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().indexOf('n');  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);    int  n  =  getImaginaryCharacter().indexOf('n');	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
79	[BUG]  [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
80	[BUG]  [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(InitialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(InitialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(InitialIndex  +  n);  pos.setIndex(initialIndex  +  n);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	1	None	add
81	[BUG]  [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  pos.setInitialIndex(initialIndex  +  n);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  pos.setInitialIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setInitialIndex(initialIndex  +  n);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(n  +  n);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(n  +  n);  pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
83	[BUG]  [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(n  +  n);  pos.setIndex(initialIndex  +  n);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(n  +  n);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(n  +  n);  pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
84	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  n  +  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  n  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('n',  n  +  1);	  int    startIndex    =    source.lastIndexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
85	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  pos.length);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  pos.length);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('n',  pos.length);	  int    startIndex    =    source.lastIndexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
86	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  n  *  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  n  *  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('n',  n  *  n);	  int    startIndex    =    source.lastIndexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
87	[BUG]  [BUGGY]  int  startIndex  =  pos.length();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.length();	  int    startIndex    =    n.length();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	28	None	replace
88	[BUG]  [BUGGY]  int  startIndex  =  n.length()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  n.length()  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  n.length()  +  1;	  int    startIndex    =    n.length();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	28	None	replace
89	[BUG]  [BUGGY]  int  startIndex  =  n.length()  -  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  n.length()  -  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  n.length()  -  1;	  int    startIndex    =    n.length();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	28	None	replace
90	[BUG]  [BUGGY]  int  initialIndex  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  initialIndex  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  initialIndex  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n    +    1);    pos.setErrorIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	85	None	replace
91	[BUG]  [BUGGY]  Integer  n  =  getImaginaryCharacter().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Integer  n  =  getImaginaryCharacter().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Integer  n  =  getImaginaryCharacter().length();	          pos.setErrorIndex(n);    int    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	70	None	replace
92	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    int    startIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	10	None	replace
93	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    n;    int    startIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	10	None	replace
94	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Integer  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Integer  startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    int    startIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	10	None	replace
95	[BUG]  [BUGGY]  int  startIndex  =  im.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.getIndex()  +  n;	  startIndex    =    im.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	21	None	replace
96	[BUG]  [BUGGY]  startIndex  =  n.getIndex()  +  im.getIndex();  [CE]  int  cannot  be  dereferenced  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  n.getIndex()  +  im.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  n.getIndex()  +  im.getIndex();	  startIndex    =    im.getIndex()    +    n;    	non-compiled	[CE]  int  cannot  be  dereferenced	21	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	44	24	add
98	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	44	24	add
99	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex  +  n);  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex    +    n);    pos.setIndex(InitialIndex);  pos.setIndex(initialIndex  +  n);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	44	None	add
100	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex  +  n);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex  +  n);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
101	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n;	  	non-compiled	[CE]  ')'  expected	44	None	add
102	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  2);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  2);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  *  2);	  int    startIndex    =    source.indexOf('n',    n    *    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	31	None	replace
103	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  *  1);	  int    startIndex    =    source.indexOf('n',    n    *    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	31	None	replace
104	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  4);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  4);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  *  4);	  int    startIndex    =    source.indexOf('n',    n    *    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	31	None	replace
105	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  10);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  10);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  *  10);	  int    startIndex    =    source.indexOf('n',    n    *    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	31	None	replace
106	[BUG]  [BUGGY]  n.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  [CE]  int  cannot  be  dereferenced  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(InitialIndex);    	non-compiled	[CE]  int  cannot  be  dereferenced	16	None	replace
107	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n.setIndex(initialIndex);  pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  int  cannot  be  dereferenced	43	None	replace
108	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n.setIndex(initialIndex);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  int  cannot  be  dereferenced	43	None	replace
109	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf(c,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf(c,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf(c,  DEFAULT_IMAGINARY_CHARACTER);	  int    startIndex    =    source.indexOf(c,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	88	None	replace
110	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(n,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(n,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(n,  DEFAULT_IMAGINARY_CHARACTER);	  int    startIndex    =    source.indexOf(c,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	88	None	replace
111	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(c,  DEFAULT_IMAGINARY_CHARACTER,  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(c,  DEFAULT_IMAGINARY_CHARACTER,  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(c,  DEFAULT_IMAGINARY_CHARACTER,  n);	  int    startIndex    =    source.indexOf(c,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	88	None	replace
112	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  startIndex  =  pos.getIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex    =    pos.getIndex()    +    n    +    1;    startIndex  =  pos.getIndex()  +  n  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	2	add
113	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  startIndex  =  pos.getIndex()  +  n  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  startIndex  =  pos.getIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n    +    1;    startIndex  =  pos.getIndex()  +  n  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	2	add
114	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  int  startIndex  =  pos.getIndex()  +  n  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  int  startIndex  =  pos.getIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n    +    1;    int  startIndex  =  pos.getIndex()  +  n  +  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
115	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  pos.setIndex(  pos.getIndex()  +  n  +  1;  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  pos.setIndex(  pos.getIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n    +    1;    pos.setIndex(  pos.getIndex()  +  n  +  1;	  	non-compiled	[CE]  ')'  expected	18	None	add
116	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  pos  =  pos.getIndex()  +  n  +  1;  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  pos  =  pos.getIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n    +    1;    pos  =  pos.getIndex()  +  n  +  1;	  	non-compiled	[CE]  incompatible  types	18	None	add
117	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  StartIndex  =  pos.getIndex()  +  n  +  1;  [CE]  cannot  find  symbol  StartIndex  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  StartIndex  =  pos.getIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n    +    1;    StartIndex  =  pos.getIndex()  +  n  +  1;	  	non-compiled	[CE]  cannot  find  symbol  StartIndex	18	None	add
118	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	93	24	add
119	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	93	24	add
120	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	93	None	add
121	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n;  pos.setIndex(  startIndex  +  n);  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n;  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    pos.setIndex(  startIndex  +  n;  pos.setIndex(  startIndex  +  n);	  	non-compiled	[CE]  ')'  expected	93	None	add
122	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	93	24	add
123	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	93	24	add
124	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    pos.setIndex(  startIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	93	24	add
125	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    pos.setIndex(  startIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	93	24	add
126	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('/',  n  +  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('/',  n  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('/',  n  +  1);	  int    startIndex    =    source.indexOf('/',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
127	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('/',  n  *  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('/',  n  *  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('/',  n  *  n);	  int    startIndex    =    source.indexOf('/',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
128	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('/',  n  +  1,  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('/',  n  +  1,  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('/',  n  +  1,  n);	  int    startIndex    =    source.indexOf('/',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
129	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf('/',  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf('/',  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf('/',  n);	  int    startIndex    =    source.indexOf('/',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
130	[BUG]  [BUGGY]  pos  =  pos.getIndex()  +  n;  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pos    =    pos.getIndex()    +    n;    	non-compiled	[CE]  incompatible  types	11	None	replace
131	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pos    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
132	[BUG]  [BUGGY]  pos  =  im.getIndex()  +  n;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos  =  im.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos  =  im.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pos    =    pos.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
133	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  +  1,  pos.getStartIndex());  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  n  +  1,  pos.getStartIndex());  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  +  1,  pos.getStartIndex());	  int    startIndex    =    source.indexOf('n',    n    +    1);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	30	None	replace
134	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  +  1,  pos.getIndex());  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  n  +  1,  pos.getIndex());  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  +  1,  pos.getIndex());	  int    startIndex    =    source.indexOf('n',    n    +    1);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	30	None	replace
135	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setStartIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setStartIndex(initialIndex);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
136	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(n,  pos.getStartIndex());  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(n,  pos.getStartIndex());  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(n,  pos.getStartIndex());	  int    startIndex    =    source.indexOf(n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	64	None	replace
137	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(n,  pos.getEndIndex());  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(n,  pos.getEndIndex());  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(n,  pos.getEndIndex());	  int    startIndex    =    source.indexOf(n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	64	None	replace
138	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(n,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(n,  pos);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(n,  pos);	  int    startIndex    =    source.indexOf(n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	64	None	replace
139	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(startIndex  +  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(startIndex  +  n);	  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(    startIndex    +    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	94	None	replace
140	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex  +  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex  +  n);	  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(    startIndex    +    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	94	None	replace
141	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  /  1;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getIndex()  /  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  /  1;	  startIndex    =    source.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(initialIndex);  pos.setErrorIndex(n);	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	compilable	  [FE]  AssertionFailedError  	42	24	replace
143	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(n);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex);  pos.setErrorIndex(n);	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	compilable	  [FE]  AssertionFailedError  	42	24	replace
144	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	24	add
145	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	24	add
146	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	24	add
147	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	24	add
148	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	24	add
149	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	24	add
150	[BUG]  [BUGGY]  Number  im  =  this.source.getNumber()  -  1;  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Number  im  =  this.source.getNumber()  -  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  this.source.getNumber()  -  1;	  Number    im    =    this.source.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	38	None	replace
151	[BUG]  [BUGGY]  Number  im  =  this.source.getNumber()  +  1;  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Number  im  =  this.source.getNumber()  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  this.source.getNumber()  +  1;	  Number    im    =    this.source.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	38	None	replace
152	[BUG]  [BUGGY]  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n');    pos.setErrorIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	83	None	replace
153	[BUG]  [BUGGY]  int  initialIndex  =  source.indexOf('n',  startIndex);  pos.setErrorIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  initialIndex  =  source.indexOf('n',  startIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  initialIndex  =  source.indexOf('n',  startIndex);  pos.setErrorIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n');    pos.setErrorIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	83	None	replace
154	[BUG]  [BUGGY]  StartIndex  =  pos.getIndex()  +  n;  [CE]  cannot  find  symbol  StartIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  StartIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	StartIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    StartIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol  StartIndex	13	None	replace
155	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    StartIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	13	None	replace
156	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Integer  startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Integer  startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    StartIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	13	None	replace
157	[BUG]  [BUGGY]  Number  im  =  n.getNumber()  +  1;  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Number  im  =  n.getNumber()  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  n.getNumber()  +  1;	  Number    im    =    n.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	37	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(initialIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(initialIndex    +    1);    pos.setIndex(initialIndex  +  1);	  	compilable	  [FE]  AssertionFailedError  	49	24	add
159	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(initialIndex  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(initialIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex    +    1);    pos.setIndex(initialIndex  +  1);	  	compilable	  [FE]  AssertionFailedError  	49	24	add
160	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  int  pos.setIndex(initialIndex  +  1);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex  +  1);  int  pos.setIndex(initialIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex    +    1);    int  pos.setIndex(initialIndex  +  1);	  	non-compiled	[CE]  ';'  expected	49	None	add
161	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  int  initialIndex  =  initialIndex  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex  +  1);  int  initialIndex  =  initialIndex  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex    +    1);    int  initialIndex  =  initialIndex  +  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	49	None	add
162	[BUG]  [BUGGY]  Number  im  =  source.getNumber()  +  1;  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Number  im  =  source.getNumber()  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  source.getNumber()  +  1;	  Number    im    =    source.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	36	None	replace
163	[BUG]  [BUGGY]  Number  im  =  source.getNumber()  -  1;  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Number  im  =  source.getNumber()  -  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  source.getNumber()  -  1;	  Number    im    =    source.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	36	None	replace
164	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  0L);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  0L);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  0L);	  int    startIndex    =    source.indexOf('n',    0);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	81	None	replace
165	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  -1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  -1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  -1);	  int    startIndex    =    source.indexOf('n',    0);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	81	None	replace
166	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  0);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  0);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('n',  0);	  int    startIndex    =    source.indexOf('n',    0);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	81	None	replace
167	[BUG]  [BUGGY]  pos.setIndex(n  +  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  endIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n  +  endIndex);	  pos.setIndex(endIndex    +    n);    	non-compiled	[CE]  cannot  find  symbol  endIndex	76	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  initialIndex);  pos.setIndex(n  +  initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(n    +    initialIndex);    pos.setIndex(n  +  initialIndex);	  	compilable	  [FE]  AssertionFailedError  	74	24	add
169	[BUG]  [BUGGY]  pos.setIndex(n  +  initialIndex);  pos.setIndex(n  +  initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  initialIndex);  pos.setIndex(n  +  initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n    +    initialIndex);    pos.setIndex(n  +  initialIndex);	  	compilable	  [FE]  AssertionFailedError  	74	24	add
170	[BUG]  [BUGGY]  pos.setIndex(n  +  initialIndex);  int  n  =  getImaginaryCharacter().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  initialIndex);  int  n  =  getImaginaryCharacter().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n    +    initialIndex);    int  n  =  getImaginaryCharacter().length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	74	None	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  initialIndex);  pos.setIndex(n  +  startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(n    +    initialIndex);    pos.setIndex(n  +  startIndex);	  	compilable	  [FE]  AssertionFailedError  	74	24	add
172	[BUG]  [BUGGY]  pos.setIndex(n  +  initialIndex);  pos.setIndex(n  +  startIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  initialIndex);  pos.setIndex(n  +  startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n    +    initialIndex);    pos.setIndex(n  +  startIndex);	  	compilable	  [FE]  AssertionFailedError  	74	24	add
173	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf(n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf(n);	  int    startIndex    =    im.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
174	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf(n,  c);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf(n,  c);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf(n,  c);	  int    startIndex    =    im.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
175	[BUG]  [BUGGY]  int  startIndex  =  re.indexOf(c);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  re.indexOf(c);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  re.indexOf(c);	  int    startIndex    =    im.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(pos.getIndex());  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(pos.getIndex());	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1;    	compilable	  [FE]  AssertionFailedError  	54	24	replace
177	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex());  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(pos.getIndex());  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(pos.getIndex());	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1;    	compilable	  [FE]  AssertionFailedError  	54	24	replace
178	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex();  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1;    	non-compiled	[CE]  ')'  expected	54	None	replace
179	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1;  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(pos.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1;    	non-compiled	[CE]  ')'  expected	54	None	replace
180	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex();  [CE]  ')'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1;    	non-compiled	[CE]  ')'  expected	54	None	replace
181	[BUG]  [BUGGY]  pos.setIndex(InitialIndex  +  n);  [CE]  cannot  find  symbol  InitialIndex  [FE]          AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(InitialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(InitialIndex  +  n);	          pos.setIndex(initialIndex    +    n);    pos.setIndex(InitialIndex    +    n);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	3	None	replace
182	[BUG]  [BUGGY]  pos.setErrorIndex(source.substring(startIndex,  n));  [CE]  method  setErrorIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(source.substring(startIndex,  n));  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(source.substring(startIndex,  n));	  pos.setErrorIndex(endIndex);    	non-compiled	[CE]  method  setErrorIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	77	None	replace
183	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex());  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex());  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex());	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	98	None	replace
184	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex());  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex());	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	98	2	replace
185	[BUG]  [BUGGY]  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex());  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex());  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex());	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	98	2	replace
186	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  pos.setIndex(position.getIndex());  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex();  pos.setIndex(position.getIndex());  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex();  pos.setIndex(position.getIndex());	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	98	None	replace
187	[BUG]  [BUGGY]  pos.setErrorIndex(n);  pos.setWarningIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(n);  pos.setWarningIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(n);  pos.setWarningIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    pos.setWarningIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
188	[BUG]  [BUGGY]  n.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [CE]  int  cannot  be  dereferenced  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    pos.setWarningIndex(initialIndex);    	non-compiled	[CE]  int  cannot  be  dereferenced	90	None	replace
189	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  +  n  +  1;  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  +  n  +  1;	  startIndex    =    pos.getIndex()    +    n    +    1;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
190	[BUG]  [BUGGY]  startIndex  =  im.getIndex()  +  n  +  1;  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  im.getIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  im.getIndex()  +  n  +  1;	  startIndex    =    pos.getIndex()    +    n    +    1;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
191	[BUG]  [BUGGY]  pos  =  pos.getIndex()  +  1;  [CE]  incompatible  types  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos  =  pos.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    pos    =    pos.getIndex()    +    1;    	non-compiled	[CE]  incompatible  types	55	None	replace
192	[BUG]  [BUGGY]  pos  =  pos.getIndex();  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    pos    =    pos.getIndex()    +    1;    	non-compiled	[CE]  incompatible  types	55	None	replace
193	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  pos  =  pos.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex();  pos  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex();  pos  =  pos.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    pos    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	55	None	replace
194	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  pos  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex();  pos  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex();  pos  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    pos    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	55	None	replace
195	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Integer  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Integer  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	53	None	replace
196	[BUG]  [BUGGY]  pos.getIndex();  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.getIndex();  int  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.getIndex();  int  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	53	None	replace
197	[BUG]  [BUGGY]  pos.setStartIndex(n);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setStartIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setStartIndex(n);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
198	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setStartIndex(startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setStartIndex(startIndex);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
199	[BUG]  [BUGGY]  pos.setStartIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setStartIndex(endIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setStartIndex(endIndex);	  pos.setStartIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	24	None	replace
200	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  *  n  -  1;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getIndex()  *  n  -  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  *  n  -  1;	  startIndex    =    source.getIndex()    -    1;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
201	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setErrorIndex(n);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setErrorIndex(n);        pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	68	2	add
202	[BUG]  [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setErrorIndex(n);  pos.setErrorIndex(n);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setErrorIndex(n);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(n);        pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	68	2	add
203	[BUG]  [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setWarningIndex(n);  pos.setErrorIndex(n);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setWarningIndex(n);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(n);        pos.setErrorIndex(n);    pos.setWarningIndex(n);  pos.setErrorIndex(n);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
204	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  int  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);    	non-compiled	[CE]  int  cannot  be  dereferenced	101	None	replace
205	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex);  pos.setErrorIndex(n);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setStartIndex(initialIndex);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setStartIndex(initialIndex);  pos.setErrorIndex(n);	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
206	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex;    	non-compiled	[CE]  ')'  expected	82	None	replace
207	[BUG]  [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
208	[BUG]  [BUGGY]  int  n  =  baseUri.length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  n  =  baseUri.length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  baseUri.length();	  int    n    =    source.length()    -    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	61	None	replace
209	[BUG]  [BUGGY]  int  n  =  im.getImaginaryCharacter().length()  +  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  n  =  im.getImaginaryCharacter().length()  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  im.getImaginaryCharacter().length()  +  1;	  int    n    =    im.getImaginaryCharacter().length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	99	None	replace
210	[BUG]  [BUGGY]  int  n  =  source.getImaginaryCharacter().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  n  =  source.getImaginaryCharacter().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  source.getImaginaryCharacter().length();	  int    n    =    im.getImaginaryCharacter().length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	99	None	replace
211	[BUG]  [BUGGY]  int  n  =  im.getImaginaryCharacter().length()  -  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  n  =  im.getImaginaryCharacter().length()  -  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  im.getImaginaryCharacter().length()  -  1;	  int    n    =    im.getImaginaryCharacter().length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	99	None	replace
212	[BUG]  [BUGGY]  if(n  <  =  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  =  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  =  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
213	[BUG]  [BUGGY]  if(n  <  =  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  =  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  =  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
214	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex);  pos.setErrorIndex(initialIndex;  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setStartIndex(initialIndex);  pos.setErrorIndex(initialIndex;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setStartIndex(initialIndex);  pos.setErrorIndex(initialIndex;	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex;    	non-compiled	[CE]  ')'  expected	17	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(n  +  startIndex);	  pos.setIndex(startIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	73	24	replace
216	[BUG]  [BUGGY]  pos.setIndex(n  +  startIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n  +  startIndex);	  pos.setIndex(startIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	73	24	replace
217	[BUG]  [BUGGY]  Number  im  =  pos.getNumber()  +  1;  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Number  im  =  pos.getNumber()  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  pos.getNumber()  +  1;	  Number    im    =    pos.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	35	None	replace
218	[BUG]  [BUGGY]  Number  im  =  pos.getImmediateParent();  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Number  im  =  pos.getImmediateParent();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  pos.getImmediateParent();	  Number    im    =    pos.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	35	None	replace
219	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  /  n;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getIndex()  /  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  /  n;	  startIndex    =    source.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
220	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  +  n  *  2;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getIndex()  +  n  *  2;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  +  n  *  2;	  startIndex    =    source.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
221	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setErrorIndex(initialIndex);        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	add
222	[BUG]  [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(initialIndex);        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	add
223	[BUG]  [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  pos.setErrorIndex(initialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(initialIndex);        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(InitialIndex);  pos.setErrorIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	14	None	add
224	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setErrorIndex(initialIndex);        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(n);  pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	add
225	[BUG]  [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(initialIndex);        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(n);  pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	add
226	[BUG]  [BUGGY]  startIndex  =  im.getStartIndex()  +  n;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  im.getStartIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  im.getStartIndex()  +  n;	  startIndex    =    pos.getStartIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
227	[BUG]  [BUGGY]  startIndex  =  initialIndex.getStartIndex()  +  n;  [CE]  int  cannot  be  dereferenced  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  initialIndex.getStartIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  initialIndex.getStartIndex()  +  n;	  startIndex    =    pos.getStartIndex()    +    n;    	non-compiled	[CE]  int  cannot  be  dereferenced	47	None	replace
228	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	51	2	add
229	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	51	2	add
230	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  int  startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  int  startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    int  startIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	51	None	add
231	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    pos  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  incompatible  types	51	None	add
232	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  StartIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [CE]  cannot  find  symbol  StartIndex  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  StartIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    StartIndex  =  pos.getIndex()  +  1;  startIndex  =  pos.getIndex()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  StartIndex	51	None	add
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  n);  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  n);  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  AssertionFailedError  	51	24	add
234	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  n);  startIndex  =  pos.getIndex()  +  1;  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(  n);  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    pos.setIndex(  n);  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  AssertionFailedError  	51	24	add
235	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	add
236	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	add
237	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  int  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  int  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    int  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
238	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    pos  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;	  	non-compiled	[CE]  incompatible  types	8	None	add
239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(n);  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    pos.setIndex(n);  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  AssertionFailedError  	8	24	add
240	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(n);  startIndex  =  pos.getIndex()  +  n;  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(n);  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    pos.setIndex(n);  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  AssertionFailedError  	8	24	add
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  AssertionFailedError  	8	24	add
242	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  AssertionFailedError  	8	24	add
243	[BUG]  [BUGGY]  int  startIndex  =  im.length()  -  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.length()  -  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.length()  -  1;	  int    startIndex    =    source.length()    -    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	25	None	replace
244	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  pos.setErrorIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(initialIndex    +    n);    pos.setErrorIndex(initialIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	95	2	add
245	[BUG]  [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  pos.setErrorIndex(initialIndex  +  n);  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  pos.setErrorIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(initialIndex    +    n);    pos.setErrorIndex(initialIndex  +  n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	95	2	add
246	[BUG]  [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  pos.setWarningIndex(initialIndex  +  n);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  pos.setWarningIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(initialIndex    +    n);    pos.setWarningIndex(initialIndex  +  n);	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
247	[BUG]  [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  pos.setErrorIndex(initialIndex  +  n;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(initialIndex  +  n);  pos.setErrorIndex(initialIndex  +  n;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(initialIndex    +    n);    pos.setErrorIndex(initialIndex  +  n;	  	non-compiled	[CE]  ')'  expected	95	None	add
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  <  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n;    	compilable	  [FE]  AssertionFailedError  	71	24	replace
249	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n;    	compilable	  [FE]  AssertionFailedError  	71	24	replace
250	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n;  }  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n;  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n;    	non-compiled	[CE]  ')'  expected	71	None	replace
251	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex();  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex();  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	52	None	replace
252	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  pos.getIndex();  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	n  =  pos.getIndex();  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    startIndex    =    pos.getIndex()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	52	24	replace
253	[BUG]  [BUGGY]  n  =  pos.getIndex();  startIndex  =  pos.getIndex();  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  pos.getIndex();  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  pos.getIndex();  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    startIndex    =    pos.getIndex()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	52	24	replace
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    startIndex    =    pos.getIndex()    +    1;    	compilable	  [FE]  AssertionFailedError  	52	24	replace
255	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    startIndex    =    pos.getIndex()    +    1;    	compilable	  [FE]  AssertionFailedError  	52	24	replace
256	[BUG]  [BUGGY]  startIndex  =  im.getIndex()  /  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  im.getIndex()  /  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  im.getIndex()  /  1;	  startIndex    =    im.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
257	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(n  +  1);  pos.setErrorIndex(n  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(n    +    1);    pos.setErrorIndex(n  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	2	add
258	[BUG]  [BUGGY]  pos.setErrorIndex(n  +  1);  pos.setErrorIndex(n  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(n  +  1);  pos.setErrorIndex(n  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(n    +    1);    pos.setErrorIndex(n  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	2	add
259	[BUG]  [BUGGY]  pos.setErrorIndex(n  +  1);  int  n  =  getImaginaryCharacter().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(n  +  1);  int  n  =  getImaginaryCharacter().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(n    +    1);    int  n  =  getImaginaryCharacter().length();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	22	None	add
260	[BUG]  [BUGGY]  int  n  =  im.length()  +  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  n  =  im.length()  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  im.length()  +  1;	  int    n    =    im.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	59	None	replace
261	[BUG]  [BUGGY]  int  n  =  im.length()  -  1;  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  n  =  im.length()  -  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  im.length()  -  1;	  int    n    =    im.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	59	None	replace
262	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.indexOf('n',  n);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	n  =  source.indexOf('n',  n);  pos.setErrorIndex(n);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	84	24	replace
263	[BUG]  [BUGGY]  n  =  source.indexOf('n',  n);  pos.setErrorIndex(n);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.indexOf('n',  n);  pos.setErrorIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  source.indexOf('n',  n);  pos.setErrorIndex(n);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	84	24	replace
264	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    startIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	9	None	replace
265	[BUG]  [BUGGY]  n  =  im.getIndex();  startIndex  =  pos.getIndex()  +  n;  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  im.getIndex();  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  im.getIndex();  startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    startIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    startIndex    =    pos.getIndex()    +    n;    	compilable	  [FE]  AssertionFailedError  	9	24	replace
267	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    startIndex    =    pos.getIndex()    +    n;    	compilable	  [FE]  AssertionFailedError  	9	24	replace
268	[BUG]  [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n;	  	non-compiled	[CE]  ')'  expected	1	None	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
270	[BUG]  [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	40	24	replace
272	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	40	24	replace
273	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  int  startIndex  =  source.substring(startIndex,  endIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  int  startIndex  =  source.substring(startIndex,  endIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  int  startIndex  =  source.substring(startIndex,  endIndex);  pos.setErrorIndex(startIndex);  return  null;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	40	None	replace
274	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  int  startIndex  =  source.substring(startIndex  +  n);  pos.setErrorIndex(startIndex);  return  null;  }  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  int  startIndex  =  source.substring(startIndex  +  n);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  int  startIndex  =  source.substring(startIndex  +  n);  pos.setErrorIndex(startIndex);  return  null;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	40	None	replace
275	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    pos    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	55	None	replace
276	[BUG]  [BUGGY]  startIndex  =  pos.getStartIndex()  +  n  +  1;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getStartIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getStartIndex()  +  n  +  1;	  startIndex    =    pos.getStartIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
277	[BUG]  [BUGGY]  Number  im  =  pos.getImmediateParentPosition();  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Number  im  =  pos.getImmediateParentPosition();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Number  im  =  pos.getImmediateParentPosition();	  Number    im    =    pos.getNumber();    	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	35	None	replace
278	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  n  -  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  n  -  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('n',  n  -  1);	  int    startIndex    =    source.lastIndexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
279	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  pos.getStartIndex());  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.lastIndexOf('n',  pos.getStartIndex());  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('n',  pos.getStartIndex());	  int    startIndex    =    source.lastIndexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
280	[BUG]  [BUGGY]  n  =  initialIndex;  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  initialIndex;  pos.setInitialIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  initialIndex;  pos.setInitialIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
281	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setInitialIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  n);  pos.setInitialIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex    +    n);    pos.setInitialIndex(initialIndex);  pos.setIndex(initialIndex  +  n);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  AssertionFailedError  	51	24	add
283	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  AssertionFailedError  	51	24	add
284	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(startIndex);  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    pos.setIndex(startIndex);  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	51	24	add
285	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(startIndex);  startIndex  =  pos.getIndex()  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  pos.setIndex(startIndex);  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    pos.setIndex(startIndex);  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	51	24	add
286	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(re,  c);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(re,  c);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(re,  c);	  int    startIndex    =    source.indexOf(n,    c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	67	None	replace
287	[BUG]  [BUGGY]  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(endIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(endIndex);	  pos.setErrorIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	79	None	replace
288	[BUG]  [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(initialIndex);        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
290	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
292	[BUG]  [BUGGY]  if(n  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
294	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
295	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  int  n  =  getImaginaryCharacter().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex);  int  n  =  getImaginaryCharacter().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(startIndex);  int  n  =  getImaginaryCharacter().length();	          pos.setErrorIndex(n);    int    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	70	None	replace
296	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  +  n;  pos.setIndex(startIndex  +  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.getIndex()  +  n;  pos.setIndex(startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.getIndex()  +  n;  pos.setIndex(startIndex  +  n);	  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(    startIndex    +    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	94	None	replace
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
298	[BUG]  [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  }  else  {  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  <  0)  {  pos.setErrorIndex(n);  }  else  {  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
300	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  }  else  {  pos.setErrorIndex(n);  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  }  else  {  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setErrorIndex(n);  }  else  {  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  ==  1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	compilable	  [FE]  AssertionFailedError  	42	24	replace
302	[BUG]  [BUGGY]  if(n  ==  1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	compilable	  [FE]  AssertionFailedError  	42	24	replace
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(Integer.MAX_VALUE);	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	compilable	  [FE]  AssertionFailedError  	42	24	replace
304	[BUG]  [BUGGY]  pos.setIndex(Integer.MAX_VALUE);  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(Integer.MAX_VALUE);	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	compilable	  [FE]  AssertionFailedError  	42	24	replace
305	[BUG]  [BUGGY]  pos.setInitialIndex(initialIndex  +  n);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setInitialIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setInitialIndex(initialIndex  +  n);	  pos.setInitialIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
306	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  pos.length  -  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  pos.length  -  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  pos.length  -  1);	  int    startIndex    =    source.indexOf('n',    pos.length);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	80	None	replace
307	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(c,  n  +  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(c,  n  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(c,  n  +  1);	  int    startIndex    =    source.indexOf(c,    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	66	None	replace
308	[BUG]  [BUGGY]  StartIndex  =  pos.getIndex();  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  StartIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  StartIndex  =  pos.getIndex();  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	StartIndex  =  pos.getIndex();  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol  StartIndex	52	None	replace
309	[BUG]  [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n;  }  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n;  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n;    	non-compiled	[CE]  ')'  expected	71	None	replace
310	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n;  }  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n;  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n;    	non-compiled	[CE]  ')'  expected	71	None	replace
311	[BUG]  [BUGGY]  Integer  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Integer  n  =  source.length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Integer  n  =  source.length();	  int    n    =    source.length()    +    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	60	None	replace
312	[BUG]  [BUGGY]  int  n  =  sources.length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  n  =  sources.length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  sources.length();	  int    n    =    source.length()    +    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	60	None	replace
313	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(re,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(re,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(re,  DEFAULT_IMAGINARY_CHARACTER);	  int    startIndex    =    source.indexOf(c,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	88	None	replace
314	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setErrorIndex(startIndex  +  1);	  pos.setErrorIndex(n    +    1);    	compilable	  [FE]  AssertionFailedError  	23	24	replace
315	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(startIndex  +  1);	  pos.setErrorIndex(n    +    1);    	compilable	  [FE]  AssertionFailedError  	23	24	replace
316	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex;    	non-compiled	[CE]  ')'  expected	82	None	replace
317	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  else  {  startIndex  =  source.substring(startIndex  +  n);  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  else  {  startIndex  =  source.substring(startIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  else  {  startIndex  =  source.substring(startIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex;    	non-compiled	[CE]  ')'  expected	82	None	replace
318	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  pos.getIndex();  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	n  =  pos.getIndex();  startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    startIndex    =    pos.getIndex()    +    n;    	compilable	  [FE]  StringIndexOutOfBoundsException  	9	24	replace
319	[BUG]  [BUGGY]  n  =  pos.getIndex();  startIndex  =  pos.getIndex()  +  n;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  pos.getIndex();  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  pos.getIndex();  startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    startIndex    =    pos.getIndex()    +    n;    	compilable	  [FE]  StringIndexOutOfBoundsException  	9	24	replace
320	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex  +  n;  }	          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex    +    n;    	non-compiled	[CE]  ')'  expected	4	None	replace
321	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n;  }	          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex    +    n;    	non-compiled	[CE]  ')'  expected	4	None	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(startIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	compilable	  [FE]  AssertionFailedError  	43	24	replace
323	[BUG]  [BUGGY]  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(startIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	compilable	  [FE]  AssertionFailedError  	43	24	replace
324	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  StartIndex  =  pos.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  StartIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  1;  StartIndex  =  pos.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    StartIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	56	None	replace
325	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(pos.getIndex()  +  n;  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(    pos.getIndex()    +    n;    	non-compiled	[CE]  ')'  expected	12	None	replace
326	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(position.getIndex()  +  n;  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(position.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  n;  pos.setIndex(position.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(    pos.getIndex()    +    n;    	non-compiled	[CE]  ')'  expected	12	None	replace
327	[BUG]  [BUGGY]  pos.setIndex(position.getIndex());  [CE]  cannot  find  symbol  position  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(position.getIndex());  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(position.getIndex());	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1);    	non-compiled	[CE]  cannot  find  symbol  position	98	None	replace
328	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.getIndex()  +  n;  pos  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pos    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
329	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  +  n;  pos  =  im.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.getIndex()  +  n;  pos  =  im.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.getIndex()  +  n;  pos  =  im.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    pos    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
330	[BUG]  [BUGGY]  startIndex  =  re.getStartIndex();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  re.getStartIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  re.getStartIndex();	  startIndex    =    im.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	2	24	replace
332	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	2	24	replace
333	[BUG]  [BUGGY]  char  n  =  im.length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  char  n  =  im.length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	char  n  =  im.length();	  int    n    =    im.length();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	59	None	replace
334	[BUG]  [BUGGY]  pos.setIndex(n  +  initialIndex);  int  pos.setIndex(n  +  initialIndex);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  initialIndex);  int  pos.setIndex(n  +  initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n    +    initialIndex);    int  pos.setIndex(n  +  initialIndex);	  	non-compiled	[CE]  ';'  expected	74	None	add
335	[BUG]  [BUGGY]  pos.setIndex(n  +  initialIndex);  pos.setIndex(N  +  initialIndex);  [CE]  cannot  find  symbol  N  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n  +  initialIndex);  pos.setIndex(N  +  initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n    +    initialIndex);    pos.setIndex(N  +  initialIndex);	  	non-compiled	[CE]  cannot  find  symbol  N	74	None	add
336	[BUG]  [BUGGY]  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex();  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getIndex();  pos.setIndex(pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    pos.setIndex(    pos.getIndex()    +    1;    	non-compiled	[CE]  ')'  expected	54	None	replace
337	[BUG]  [BUGGY]  pos.setErrorIndex(ignore);  [CE]  cannot  find  symbol  ignore  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(ignore);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(ignore);	  pos.setErrorIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol  ignore	77	None	replace
338	[BUG]  [BUGGY]  pos.setErrorIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(InitialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(InitialIndex);	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	16	None	replace
339	[BUG]  [BUGGY]  n  =  source.substring(startIndex,  n);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.substring(startIndex,  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  source.substring(startIndex,  n);	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(InitialIndex);    	non-compiled	[CE]  incompatible  types	16	None	replace
340	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  n);  int  startIndex  =  startIndex  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(startIndex  +  n);  int  startIndex  =  startIndex  +  n;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(startIndex    +    n);    int  startIndex  =  startIndex  +  n;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	72	None	add
341	[BUG]  [BUGGY]  if(n  ==  -1)  {  pos.setErrorIndex(initialIndex);  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  }  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  -1)  {  pos.setErrorIndex(initialIndex);  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  -1)  {  pos.setErrorIndex(initialIndex);  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n);    pos.setErrorIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
342	[BUG]  [BUGGY]  if(n  ==  -1)  {  pos.setErrorIndex(initialIndex);  }  else  {  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  }  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  -1)  {  pos.setErrorIndex(initialIndex);  }  else  {  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  -1)  {  pos.setErrorIndex(initialIndex);  }  else  {  int  initialIndex  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n);    pos.setErrorIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
343	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	n  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	84	24	replace
344	[BUG]  [BUGGY]  n  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  source.indexOf('n',  n);  pos.setErrorIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	84	24	replace
345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	15	24	replace
346	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	15	24	replace
347	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >=  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	15	24	replace
348	[BUG]  [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >=  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	15	24	replace
349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  }  else  {  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  }  else  {  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	15	24	replace
350	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  }  else  {  pos.setErrorIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  }  else  {  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  }  else  {  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	15	24	replace
351	[BUG]  [BUGGY]  int  n  =  getRealFormat().length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  n  =  getRealFormat().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  getRealFormat().length();	  int    n    =    getImaginaryCharacter().length()    -    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	63	None	replace
352	[BUG]  [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().lastIndexOf('n');  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().lastIndexOf('n');  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);    int  n  =  getImaginaryCharacter().lastIndexOf('n');	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
353	[BUG]  [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().indexOf('n',  n);  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().indexOf('n',  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);    int  n  =  getImaginaryCharacter().indexOf('n',  n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
354	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(n,  0);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(n,  0);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(n,  0);	  int    startIndex    =    source.indexOf(n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	64	None	replace
355	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(n  +  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(n  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(n  +  1);	  int    startIndex    =    source.indexOf(n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	64	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(initialIndex  +  n);  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    pos.setIndex(initialIndex  +  n);  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  AssertionFailedError  	8	24	add
357	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(initialIndex  +  n);  startIndex  =  pos.getIndex()  +  n;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  pos.setIndex(initialIndex  +  n);  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    pos.setIndex(initialIndex  +  n);  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  AssertionFailedError  	8	24	add
358	[BUG]  [BUGGY]  n  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  pos.getIndex();  int  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	53	None	replace
359	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Integer  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Integer  startIndex  =  pos.getIndex();  int  startIndex  =  pos.getIndex();	  startIndex    =    pos.getIndex()    +    1;    int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	53	None	replace
360	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  +  n  *  n;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getIndex()  +  n  *  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  +  n  *  n;	  startIndex    =    source.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
361	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('  ',  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('  ',  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('  ',  n);	  int    startIndex    =    source.indexOf(re);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	87	None	replace
362	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf(DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf(DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf(DEFAULT_IMAGINARY_CHARACTER);	  int    startIndex    =    im.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
363	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf(DEFAULT_IMAGINARY_CHARACTER,  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf(DEFAULT_IMAGINARY_CHARACTER,  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf(DEFAULT_IMAGINARY_CHARACTER,  n);	  int    startIndex    =    im.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
364	[BUG]  [BUGGY]  char  startIndex  =  im.indexOf(c);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  char  startIndex  =  im.indexOf(c);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	char  startIndex  =  im.indexOf(c);	  int    startIndex    =    im.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
365	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  *  DateTimeConstants.MILLIS_PER_SECOND);	  int    startIndex    =    source.indexOf('n',    n    *    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	31	None	replace
366	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  pos  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    pos  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);	  	non-compiled	[CE]  incompatible  types	93	None	add
367	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  1);	  int    startIndex    =    source.indexOf('n',    0);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	81	None	replace
368	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex;    	non-compiled	[CE]  ')'  expected	17	None	replace
369	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex;    	non-compiled	[CE]  ')'  expected	17	None	replace
370	[BUG]  [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >=  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex;  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex;    	non-compiled	[CE]  ')'  expected	17	None	replace
371	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  pos.setWarningIndex(startIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(startIndex);  pos.setWarningIndex(startIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(startIndex);    pos.setWarningIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol	78	None	add
372	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('/',  pos.getStartIndex());  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('/',  pos.getStartIndex());  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('/',  pos.getStartIndex());	  int    startIndex    =    source.indexOf('/',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
373	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('/',  pos.getIndex());  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('/',  pos.getIndex());  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('/',  pos.getIndex());	  int    startIndex    =    source.indexOf('/',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
374	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('/',  pos.length);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('/',  pos.length);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('/',  pos.length);	  int    startIndex    =    source.indexOf('/',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
375	[BUG]  [BUGGY]  Integer  startIndex  =  source.length();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Integer  startIndex  =  source.length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Integer  startIndex  =  source.length();	  int    startIndex    =    source.length()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	26	None	replace
376	[BUG]  [BUGGY]  startIndex  =  re.getIndex();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  re.getIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  re.getIndex();	  startIndex    =    im.getIndex();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
377	[BUG]  [BUGGY]  pos.setErrorIndex(endIndex  +  n);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(endIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(endIndex  +  n);	  pos.setErrorIndex(initialIndex    +    n);    	non-compiled	[CE]  cannot  find  symbol  endIndex	96	None	replace
378	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  Integer  initialIndex  =  initialIndex  +  1;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex  +  1);  Integer  initialIndex  =  initialIndex  +  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex    +    1);    Integer  initialIndex  =  initialIndex  +  1;	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	49	None	add
379	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	n  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n    +    1);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	85	24	replace
380	[BUG]  [BUGGY]  n  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  source.indexOf('n',  n  +  1);  pos.setErrorIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n    +    1);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	85	24	replace
381	[BUG]  [BUGGY]  int  startIndex  =  source.length()  -  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.length()  -  n;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.length()  -  n;	  int    startIndex    =    source.length()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	27	None	replace
382	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	16	None	replace
383	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  }  else  {  startIndex  =  source.substring(startIndex  +  n);  pos.setErrorIndex(endIndex);  }  [CE]  cannot  find  symbol  InitialIndex  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  }  else  {  startIndex  =  source.substring(startIndex  +  n);  pos.setErrorIndex(endIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  }  else  {  startIndex  =  source.substring(startIndex  +  n);  pos.setErrorIndex(endIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	16	None	replace
384	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  }  else  {  return  null;  }  [CE]  cannot  find  symbol  InitialIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  }  else  {  return  null;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  }  else  {  return  null;  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	16	None	replace
385	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  int  startIndex  =  source.substring(startIndex  +  1);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex  +  1);  int  startIndex  =  source.substring(startIndex  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex    +    1);    int  startIndex  =  source.substring(startIndex  +  1);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	49	None	add
386	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(initialIndex  +  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(initialIndex  +  1);  pos.setIndex(initialIndex  +  1));  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(initialIndex    +    1);    pos.setIndex(initialIndex  +  1));	  	non-compiled	[CE]  ';'  expected	49	None	add
387	[BUG]  [BUGGY]  pos.setErrorIndex(Integer.toString(n));  [CE]  method  setErrorIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(Integer.toString(n));  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(Integer.toString(n));	  pos.setErrorIndex(endIndex);    	non-compiled	[CE]  method  setErrorIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	77	None	replace
388	[BUG]  [BUGGY]  pos.setErrorIndex(Integer.toHexString(n));  [CE]  method  setErrorIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(Integer.toHexString(n));  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(Integer.toHexString(n));	  pos.setErrorIndex(endIndex);    	non-compiled	[CE]  method  setErrorIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	77	None	replace
389	[BUG]  [BUGGY]  int  startIndex  =  source.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.getIndex()  +  1;  pos  =  pos.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    pos    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	55	None	replace
390	[BUG]  [BUGGY]  startIndex  =  initialIndex  +  im.getIndex()  +  n;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  initialIndex  +  im.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  initialIndex  +  im.getIndex()  +  n;	  startIndex    =    im.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
391	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(n));  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(Integer.toHexString(n));  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(Integer.toHexString(n));	  pos.setIndex(n    +    initialIndex);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	75	None	replace
392	[BUG]  [BUGGY]  startIndex  =  im.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  im.getIndex()  -  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  im.getIndex()  -  1;	  startIndex    =    im.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
393	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  if(n!=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setErrorIndex(n);        pos.setErrorIndex(n);    if(n!=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	68	2	add
394	[BUG]  [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  if(n!=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  if(n!=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(n);        pos.setErrorIndex(n);    if(n!=  0)  {  pos.setErrorIndex(n);  pos.setErrorIndex(n);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	68	2	add
395	[BUG]  [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setErrorIndex(n);  pos.setWarningIndex(n);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setErrorIndex(n);  pos.setWarningIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(n);        pos.setErrorIndex(n);    pos.setErrorIndex(n);  pos.setWarningIndex(n);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
396	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [CE]  cannot  find  symbol  StartIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    StartIndex  =  pos.getIndex()  +  n;  startIndex  =  pos.getIndex()  +  n;	  	non-compiled	[CE]  cannot  find  symbol  StartIndex	8	None	add
397	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	add
398	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  n;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    startIndex  =  pos.getIndex()  +  n;  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        startIndex    =    pos.getIndex()    +    n;    n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  n;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	2	add
399	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	compilable	  [FE]  AssertionFailedError  	42	24	replace
400	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	compilable	  [FE]  AssertionFailedError  	42	24	replace
401	[BUG]  [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
402	[BUG]  [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
403	[BUG]  [BUGGY]  pos.setErrorIndex(n  +  1);  pos.setErrorIndex(N  +  1);  [CE]  cannot  find  symbol  N  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(n  +  1);  pos.setErrorIndex(N  +  1);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(n    +    1);    pos.setErrorIndex(N  +  1);	  	non-compiled	[CE]  cannot  find  symbol  N	22	None	add
404	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  pos.setIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	pos.setIndex(n);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	33	24	add
405	[BUG]  [BUGGY]  pos.setIndex(n);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  pos.setIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	33	24	add
406	[BUG]  [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().lastIndexOf('.');  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(n);  int  n  =  getImaginaryCharacter().lastIndexOf('.');  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(n);    int  n  =  getImaginaryCharacter().lastIndexOf('.');	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
407	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	40	24	replace
408	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	40	24	replace
409	[BUG]  [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
410	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	51	2	add
411	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    1;    startIndex  =  pos.getIndex()  +  1;  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        1;        startIndex    =    pos.getIndex()    +    1;    n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex()  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	51	2	add
412	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(c,  re);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf(c,  re);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf(c,  re);	  int    startIndex    =    source.indexOf(re);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	87	None	replace
413	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  *  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  *  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  *  n;	  startIndex    =    pos.getIndex()    +    n;    int    startIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	10	None	replace
414	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('/',  n);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.lastIndexOf('/',  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('/',  n);	  int    startIndex    =    source.lastIndexOf('n',    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
415	[BUG]  [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(initialIndex);        pos.setErrorIndex(initialIndex);    pos.setWarningIndex(initialIndex);  pos.setWarningIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
416	[BUG]  [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setErrorIndex(initialIndex);        pos.setErrorIndex(initialIndex);    pos.setWarningIndex(initialIndex);  pos.setErrorIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
417	[BUG]  [BUGGY]  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]            AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setIndex(InitialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	43	None	replace
418	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  1;	  startIndex    =    pos.getIndex()    +    1;    int    startIndex    =    pos.getIndex()    +    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	53	None	replace
419	[BUG]  [BUGGY]  int  startIndex  =  im.indexOf('  ',  c);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  im.indexOf('  ',  c);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  im.indexOf('  ',  c);	  int    startIndex    =    im.indexOf(c);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
420	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	2	24	replace
421	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setIndex(initialIndex  +  n);  }  else  {  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	2	24	replace
422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
423	[BUG]  [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex  +  n);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex        +        n);        pos.setIndex(initialIndex    +    n);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex;    	compilable	  [FE]  AssertionFailedError  	17	24	replace
425	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  }	          pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex;    	compilable	  [FE]  AssertionFailedError  	17	24	replace
426	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  this.startIndex  =  pos.getIndex()  +  n;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  pos.getIndex()  +  n;  this.startIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  pos.getIndex()  +  n;  this.startIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    startIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	9	None	replace
427	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex;    	non-compiled	[CE]  ')'  expected	82	None	replace
428	[BUG]  [BUGGY]  if(n  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >=  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex;    	non-compiled	[CE]  ')'  expected	82	None	replace
429	[BUG]  [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  StartIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [CE]  cannot  find  symbol  StartIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex    =    pos.getIndex()    +    n;    pos.setIndex(  startIndex  +  n);  StartIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex        =        pos.getIndex()        +        n;        pos.setIndex(    startIndex    +    n);    StartIndex  =  pos.getIndex()  +  n;  pos.setIndex(  startIndex  +  n);	  	non-compiled	[CE]  cannot  find  symbol  StartIndex	93	None	add
430	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  <  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
431	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >  0)  {  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
433	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(n);  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
434	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  <  0)  {  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
435	[BUG]  [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  }  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  0)  {  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  0)  {  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n);    	compilable	  [FE]  AssertionFailedError  	69	24	replace
436	[BUG]  [BUGGY]  startIndex  =  n.getStartIndex()  +  pos.getStartIndex();  [CE]  int  cannot  be  dereferenced  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  n.getStartIndex()  +  pos.getStartIndex();  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  n.getStartIndex()  +  pos.getStartIndex();	  startIndex    =    pos.getStartIndex()    +    n;    	non-compiled	[CE]  int  cannot  be  dereferenced	47	None	replace
437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
438	[BUG]  [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	compilable	  [FE]  AssertionFailedError  	45	24	replace
439	[BUG]  [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  <  =  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  n);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex    +    n);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
440	[BUG]  [BUGGY]  pos.setErrorIndex(Integer.toString(n  +  1));  [CE]  method  setErrorIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setErrorIndex(Integer.toString(n  +  1));  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setErrorIndex(Integer.toString(n  +  1));	  pos.setErrorIndex(n    +    1);    	non-compiled	[CE]  method  setErrorIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	23	None	replace
441	[BUG]  [BUGGY]  pos.setEndIndex(n);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setEndIndex(n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setEndIndex(n);	  pos.setErrorIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
442	[BUG]  [BUGGY]  Int  n  =  getImaginaryCharacter().length();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  Int  n  =  getImaginaryCharacter().length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	Int  n  =  getImaginaryCharacter().length();	  int    n    =    getImaginaryCharacter().length()    +    1;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
443	[BUG]  [BUGGY]  pos.setWarningIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  pos.setWarningIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	pos.setWarningIndex(initialIndex);	          pos.setErrorIndex(initialIndex);    pos.setWarningIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
444	[BUG]  [BUGGY]  int  n  =  this.source.length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  n  =  this.source.length();  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  n  =  this.source.length();	  int    n    =    source.length()    -    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	61	None	replace
445	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	if(n  >=  0)  {  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n;    	compilable	  [FE]  AssertionFailedError  	71	24	replace
446	[BUG]  [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(n);  }  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  if(n  >=  0)  {  pos.setErrorIndex(n);  }  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	if(n  >=  0)  {  pos.setErrorIndex(n);  }	          pos.setErrorIndex(n);    pos.setErrorIndex(n;    	compilable	  [FE]  AssertionFailedError  	71	24	replace
447	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
448	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  sign);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  sign);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  *  sign);	  int    startIndex    =    source.indexOf('n',    n    *    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	31	None	replace
449	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  DateTimeConstants.MILLIS_PER_START);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.indexOf('n',  n  *  DateTimeConstants.MILLIS_PER_START);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.indexOf('n',  n  *  DateTimeConstants.MILLIS_PER_START);	  int    startIndex    =    source.indexOf('n',    n    *    n);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	31	None	replace
450	[BUG]  [BUGGY]  n  =  source.substring(startIndex,  n);  pos.setInitialIndex(initialIndex);  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.substring(startIndex,  n);  pos.setInitialIndex(initialIndex);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  source.substring(startIndex,  n);  pos.setInitialIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);    	non-compiled	[CE]  incompatible  types	101	None	replace
451	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('.')-  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.lastIndexOf('.')-  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('.')-  1;	  int    startIndex    =    source.length()    -    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	25	None	replace
452	[BUG]  [BUGGY]  int  startIndex  =  source.lastIndexOf('/')-  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  int  startIndex  =  source.lastIndexOf('/')-  1;  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	int  startIndex  =  source.lastIndexOf('/')-  1;	  int    startIndex    =    source.length()    -    1;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	25	None	replace
453	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  pos.setIndex(  pos.getIndex()  +  n  +  1);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	startIndex    =    pos.getIndex()    +    n    +    1;    pos.setIndex(  pos.getIndex()  +  n  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	24	add
454	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  pos.setIndex(  pos.getIndex()  +  n  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  pos.setIndex(  pos.getIndex()  +  n  +  1);  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n    +    1;    pos.setIndex(  pos.getIndex()  +  n  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	24	add
455	[BUG]  [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  pointIndex  =  pos.getIndex()  +  n  +  1;  [CE]  cannot  find  symbol  pointIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  pos.getIndex()  +  n  +  1;  pointIndex  =  pos.getIndex()  +  n  +  1;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex    =    pos.getIndex()    +    n    +    1;    pointIndex  =  pos.getIndex()  +  n  +  1;	  	non-compiled	[CE]  cannot  find  symbol  pointIndex	18	None	add
456	[BUG]  [BUGGY]  startIndex  =  source.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  startIndex  =  source.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;  [BUGGY]      int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  source.getIndex()  +  n;  StartIndex  =  pos.getIndex()  +  n;	  startIndex    =    pos.getIndex()    +    n;    StartIndex    =    pos.getIndex()    +    n;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
457	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.indexOf('n',  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	n  =  source.indexOf('n',  n);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	84	24	replace
458	[BUG]  [BUGGY]  n  =  source.indexOf('n',  n);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();      [BUGGY]  n  =  source.indexOf('n',  n);  [BUGGY]      startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	n  =  source.indexOf('n',  n);	          pos.setErrorIndex(initialIndex);    int    initialIndex    =    source.indexOf('n',    n);    pos.setErrorIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	84	24	replace
