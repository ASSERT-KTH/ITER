bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    pos.setErrorIndex(initialIndex);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	    pos.setErrorIndex(initialIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
2	[BUG]  [BUGGY]    pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    pos.setErrorIndex(initialIndex);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	    pos.setErrorIndex(initialIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
3	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
4	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
5	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	    pos.setIndex(initialIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
6	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	    pos.setIndex(initialIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
7	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    pos.setErrorIndex(endIndex);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	    pos.setErrorIndex(endIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
8	[BUG]  [BUGGY]    pos.setErrorIndex(endIndex);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    pos.setErrorIndex(endIndex);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	    pos.setErrorIndex(endIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
9	[BUG]  [BUGGY]    Number  im  =  im.parse(source);  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    Number  im  =  im.parse(source);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	    Number  im  =  im.parse(source);		non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	24	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {  [BUGGY]  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {	if  (  source.substring(startIndex,  endIndex).compareTo(    getImaginaryCharacter())  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	23	24	replace
11	[BUG]  [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {  [BUGGY]  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {	if  (  source.substring(startIndex,  endIndex).compareTo(    getImaginaryCharacter())  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	23	24	replace
12	[BUG]  [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getRealFormat())!=  0)  {  [CE]  method  compareTo  in  class  String  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getRealFormat())!=  0)  {  [BUGGY]  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(startIndex,  endIndex).compareTo(getRealFormat())!=  0)  {	if  (  source.substring(startIndex,  endIndex).compareTo(    getImaginaryCharacter())  !=  0)  {  	non-compiled	[CE]  method  compareTo  in  class  String  cannot  be  applied  to  given  types;	23	None	replace
13	[BUG]  [BUGGY]    Number  im  =  im.parse(source,  startIndex);  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    Number  im  =  im.parse(source,  startIndex);  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	    Number  im  =  im.parse(source,  startIndex);		non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	24	None	add
14	[BUG]  [BUGGY]    pos.setErrorIndex(initialIndex);  return  null;  [CE]  unreachable  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    pos.setErrorIndex(initialIndex);  return  null;  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	    pos.setErrorIndex(initialIndex);  return  null;		non-compiled	[CE]  unreachable  statement	24	None	add
15	[BUG]  [BUGGY]    Number  im  =  im.getImaginaryCharacter();  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]    Number  im  =  im.getImaginaryCharacter();  [BUGGY]  if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	    Number  im  =  im.getImaginaryCharacter();		non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	24	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]  if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {  [BUGGY]  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {	if  (  source.substring(startIndex,  endIndex).compareTo(    getImaginaryCharacter())  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	23	22	replace
17	[BUG]  [BUGGY]  if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  [BUGGY]  if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {  [BUGGY]  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {	if  (  source.substring(startIndex,  endIndex).compareTo(    getImaginaryCharacter())  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	23	22	replace
