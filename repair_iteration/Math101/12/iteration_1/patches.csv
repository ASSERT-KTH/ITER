bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(source.substring(startIndex,  endIndex),  source.compareTo(getImaginaryCharacter())!=  0)  {  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(startIndex,  endIndex),  source.compareTo(getImaginaryCharacter())!=  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(startIndex,  endIndex),  source.compareTo(getImaginaryCharacter())!=  0)  {	  if(source.substring(startIndex,    endIndex).compareTo(getRealFormat())!=    0)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
2	[BUG]  [BUGGY]  Number  im  =  pos.getImaginaryCharacter();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  pos.getImaginaryCharacter();  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  pos.getImaginaryCharacter();	      Number    im    =    im.getImaginaryCharacter();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  Number  im  =  source.getImaginaryCharacter();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  source.getImaginaryCharacter();  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  source.getImaginaryCharacter();	      Number    im    =    im.getImaginaryCharacter();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  Number  im  =  re.getImaginaryCharacter();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  re.getImaginaryCharacter();  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  re.getImaginaryCharacter();	      Number    im    =    im.getImaginaryCharacter();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  Number  im  =  n.getImaginaryCharacter();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  n.getImaginaryCharacter();  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  n.getImaginaryCharacter();	      Number    im    =    im.getImaginaryCharacter();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {  if(source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {  if(source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  ==  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(startIndex,    endIndex).compareTo(getImaginaryCharacter())    ==    0)    {    if(source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
7	[BUG]  [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {  if(source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {  if(source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(startIndex,    endIndex).compareTo(getImaginaryCharacter())    ==    0)    {    if(source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
8	[BUG]  [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {  if(source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(startIndex,  endIndex).compareTo(getImaginaryCharacter())  ==  0)  {  if(source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  >=  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(startIndex,    endIndex).compareTo(getImaginaryCharacter())    ==    0)    {    if(source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
9	[BUG]  [BUGGY]  pos.setInitialIndex(initialIndex);  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  pos.setInitialIndex(initialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	pos.setInitialIndex(initialIndex);	      pos.setErrorIndex(endIndex);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setErrorIndex(startIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
11	[BUG]  [BUGGY]      pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(startIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
12	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(startIndex);  pos.setErrorIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setErrorIndex(startIndex);    pos.setErrorIndex(endIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
13	[BUG]  [BUGGY]      pos.setErrorIndex(startIndex);  pos.setErrorIndex(endIndex);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(startIndex);  pos.setErrorIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(startIndex);    pos.setErrorIndex(endIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
14	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(startIndex);  pos.setErrorIndex(n);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setErrorIndex(startIndex);    pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
15	[BUG]  [BUGGY]      pos.setErrorIndex(startIndex);  pos.setErrorIndex(n);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(startIndex);  pos.setErrorIndex(n);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(startIndex);    pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
16	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())  ==  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())  ==  0)  {	  if(source.substring(startIndex,    endIndex).compareTo(getImaginaryCharacter())    ==    0)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	2	replace
17	[BUG]  [BUGGY]  if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())  ==  0)  {  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())  ==  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())  ==  0)  {	  if(source.substring(startIndex,    endIndex).compareTo(getImaginaryCharacter())    ==    0)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	2	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {	  if(source.substring(startIndex,    endIndex).compareTo(getImaginaryCharacter())    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	11	24	replace
19	[BUG]  [BUGGY]  if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {	  if(source.substring(startIndex,    endIndex).compareTo(getImaginaryCharacter())    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	11	24	replace
20	[BUG]  [BUGGY]  Number  im  =  pos.parse(source,  startIndex);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  pos.parse(source,  startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  pos.parse(source,  startIndex);	      Number    im    =    im.parse(source,    startIndex);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  Number  im  =  source.parse(startIndex,  endIndex);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  source.parse(startIndex,  endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  source.parse(startIndex,  endIndex);	      Number    im    =    im.parse(source,    startIndex);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  Number  im  =  re.parse(source,  startIndex);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  re.parse(source,  startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  re.parse(source,  startIndex);	      Number    im    =    im.parse(source,    startIndex);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  Number  im  =  parse(source,  startIndex);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  parse(source,  startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  parse(source,  startIndex);	      Number    im    =    im.parse(source,    startIndex);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  pos.setIndex(endIndex);  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  pos.setIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	pos.setIndex(endIndex);	      pos.setErrorIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  pos.setEndIndex(endIndex);  [CE]  <identifier>  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  pos.setEndIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	pos.setEndIndex(endIndex);	      pos.setErrorIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
27	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
28	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(InitialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	1	None	add
29	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
30	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
31	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
32	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(n);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(n);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
33	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(endIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
34	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(endIndex);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(endIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
35	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(endIndex);  pos.setErrorIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setErrorIndex(endIndex);    pos.setErrorIndex(endIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	2	add
36	[BUG]  [BUGGY]      pos.setErrorIndex(endIndex);  pos.setErrorIndex(endIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(endIndex);  pos.setErrorIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(endIndex);    pos.setErrorIndex(endIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	2	add
37	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(endIndex);  pos.setErrorIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setErrorIndex(endIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	2	add
38	[BUG]  [BUGGY]      pos.setErrorIndex(endIndex);  pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(endIndex);  pos.setErrorIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(endIndex);    pos.setErrorIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	2	add
39	[BUG]  [BUGGY]  Number  im  =  pos.parse(source);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  pos.parse(source);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  pos.parse(source);	      Number    im    =    im.parse(source);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
40	[BUG]  [BUGGY]  Number  im  =  re.parse(source);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  re.parse(source);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  re.parse(source);	      Number    im    =    im.parse(source);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
41	[BUG]  [BUGGY]  Number  im  =  parse(source,  pos);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  parse(source,  pos);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  parse(source,  pos);	      Number    im    =    im.parse(source);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
42	[BUG]  [BUGGY]  Number  im  =  source.parse(source);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  source.parse(source);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  source.parse(source);	      Number    im    =    im.parse(source);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
43	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  pos.setStartIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	pos.setStartIndex(startIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  pos.setIndex(startIndex);  [CE]  <identifier>  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  pos.setIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	pos.setIndex(startIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
46	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
47	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setIndex(initialIndex);    pos.setIndex(endIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
48	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(endIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
49	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setIndex(initialIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
50	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
51	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setStartIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setStartIndex(initialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setIndex(initialIndex);    pos.setStartIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
52	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  1);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
53	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex  +  1);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	add
54	[BUG]  [BUGGY]  pos.setErrorIndex(endIndex);  return  null;  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  pos.setErrorIndex(endIndex);  return  null;  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	pos.setErrorIndex(endIndex);  return  null;	      pos.setErrorIndex(initialIndex);    return    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
55	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  return  null;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  pos.setErrorIndex(startIndex);  return  null;  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	pos.setErrorIndex(startIndex);  return  null;	      pos.setErrorIndex(initialIndex);    return    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
56	[BUG]  [BUGGY]  pos.setErrorIndex(n);  return  null;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  pos.setErrorIndex(n);  return  null;  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	pos.setErrorIndex(n);  return  null;	      pos.setErrorIndex(initialIndex);    return    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
57	[BUG]  [BUGGY]  if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {  if(source.substring(0,  n).compareTo(  getImaginaryCharacter())!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {  if(source.substring(0,  n).compareTo(  getImaginaryCharacter())!=  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(0,    n).compareTo(getImaginaryCharacter())!=    0)    {    if(source.substring(0,  n).compareTo(  getImaginaryCharacter())!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
58	[BUG]  [BUGGY]  if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {  if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {  if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(0,    n).compareTo(getImaginaryCharacter())!=    0)    {    if(source.substring(0,  endIndex).compareTo(  getImaginaryCharacter())!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
59	[BUG]  [BUGGY]  if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {  if(source.substring(0,  n).compareTo(  getImaginaryCharacter())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(0,  n).compareTo(getImaginaryCharacter())!=  0)  {  if(source.substring(0,  n).compareTo(  getImaginaryCharacter())  ==  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(0,    n).compareTo(getImaginaryCharacter())!=    0)    {    if(source.substring(0,  n).compareTo(  getImaginaryCharacter())  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
60	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setWarningIndex(initialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(initialIndex);    pos.setWarningIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
61	[BUG]  [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(nitialIndex);  [CE]  cannot  find  symbol  nitialIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(initialIndex);  pos.setErrorIndex(nitialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(initialIndex);    pos.setErrorIndex(nitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  nitialIndex	1	None	add
62	[BUG]  [BUGGY]  if(source.substring(startIndex,  endIndex),  source.compareTo(getRealFormat())!=  0)  {  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(source.substring(startIndex,  endIndex),  source.compareTo(getRealFormat())!=  0)  {  [BUGGY]    source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(source.substring(startIndex,  endIndex),  source.compareTo(getRealFormat())!=  0)  {	  if(source.substring(startIndex,    endIndex).compareTo(getRealFormat())!=    0)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
63	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	5	None	add
64	[BUG]  [BUGGY]      pos.setErrorIndex(startIndex);  pos.setWarningIndex(startIndex);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setErrorIndex(startIndex);  pos.setWarningIndex(startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setErrorIndex(startIndex);    pos.setWarningIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
65	[BUG]  [BUGGY]  if(startIndex!=  endIndex)  {  pos.setErrorIndex(initialIndex);  return  null;  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(startIndex!=  endIndex)  {  pos.setErrorIndex(initialIndex);  return  null;  }  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(startIndex!=  endIndex)  {  pos.setErrorIndex(initialIndex);  return  null;  }	      pos.setErrorIndex(initialIndex);    return    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
66	[BUG]  [BUGGY]  Number  im  =  parse(source,  endIndex);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  parse(source,  endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  parse(source,  endIndex);	      Number    im    =    im.parse(source,    startIndex);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
67	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
68	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setEndIndex(endIndex);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]      pos.setIndex(initialIndex);  pos.setEndIndex(endIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	        pos.setIndex(initialIndex);    pos.setEndIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
69	[BUG]  [BUGGY]  pos.setErrorIndex(initialIndex  +  1);  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  pos.setErrorIndex(initialIndex  +  1);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	pos.setErrorIndex(initialIndex  +  1);	      pos.setErrorIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
70	[BUG]  [BUGGY]  Number  im  =  realFormat.getImaginaryCharacter();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  realFormat.getImaginaryCharacter();  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  realFormat.getImaginaryCharacter();	      Number    im    =    im.getImaginaryCharacter();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
71	[BUG]  [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  return  null;  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  return  null;  }  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	if(n  ==  0)  {  pos.setErrorIndex(initialIndex);  return  null;  }	      pos.setErrorIndex(initialIndex);    return    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
72	[BUG]  [BUGGY]  Number  im  =  source.parse(pos,  startIndex);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;    [BUGGY]  Number  im  =  source.parse(pos,  startIndex);  [BUGGY]    if  (    source.substring(startIndex,  endIndex).compareTo(      getImaginaryCharacter())  !=  0)  {  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  pos.setIndex(endIndex);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	Number  im  =  source.parse(pos,  startIndex);	      Number    im    =    im.parse(source,    startIndex);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
