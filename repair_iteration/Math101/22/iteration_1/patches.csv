bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(source.getIndex()  +  1);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(source.getIndex()  +  1);	      pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
2	[BUG]  [BUGGY]  pos.setIndex(position.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(position.getIndex()  -  1);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(position.getIndex()  -  1);	      pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  position	13	None	replace
3	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
4	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	2	add
5	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  [CE]  cannot  find  symbol  position  [FE]      AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex());    pos.setIndex(position.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  position	1	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
7	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
8	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  }	  	non-compiled	[CE]  <identifier>  expected	1	None	add
9	[BUG]  [BUGGY]  parseWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  parseWhitespace(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	parseWhitespace(source,  pos);	      parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
10	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]    StackOverflowError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	      parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	replace
11	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex());  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]      StackOverflowError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex());  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex());	      parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	replace
12	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	ParsePosition  pos  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	      ParsePosition    pos    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	10	None	replace
13	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos,  true);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos,  true);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	ParsePosition  pos  =  parseNextCharacter(source,  pos,  true);	      ParsePosition    pos    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	10	None	replace
14	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos,  false);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos,  false);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	ParsePosition  pos  =  parseNextCharacter(source,  pos,  false);	      ParsePosition    pos    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	10	None	replace
15	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
16	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
17	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]      StackOverflowError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseAndIgnoreWhitespace(source,    pos);    ParsePosition  pos  =  parseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	11	None	add
18	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parseNextCharacter(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]        StackOverflowError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parseNextCharacter(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseAndIgnoreWhitespace(source,    pos);    ParsePosition  pos  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	11	None	add
19	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	11	26	add
20	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	11	26	add
21	[BUG]  [BUGGY]  pos.setIndex(source.getIndex(),  pos);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(source.getIndex(),  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(source.getIndex(),  pos);	  pos.setIndex(source.getIndex());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
22	[BUG]  [BUGGY]      ParsePosition  pos  =  getPosition();  parseNextCharacter(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      ParsePosition  pos  =  getPosition();  parseNextCharacter(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        ParsePosition  pos  =  getPosition();  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	6	None	add
23	[BUG]  [BUGGY]      ParsePosition  pos  =  getPosition();  parseNextCharacter(pos,  source);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      ParsePosition  pos  =  getPosition();  parseNextCharacter(pos,  source);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        ParsePosition  pos  =  getPosition();  parseNextCharacter(pos,  source);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	6	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	3	26	add
25	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	3	26	add
26	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]      AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  +  1);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(position.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	3	None	add
27	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  }	  	non-compiled	[CE]  <identifier>  expected	3	None	add
28	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(p.getIndex()  +  1);  [CE]  cannot  find  symbol  p  [FE]          AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(p.getIndex()  +  1);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(p.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  p	3	None	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	8	26	add
30	[BUG]  [BUGGY]      parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	8	26	add
31	[BUG]  [BUGGY]      parseNextCharacter(source,  pos);  ParsePosition  pos  =  parseNextCharacter(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  ParsePosition  pos  =  parseNextCharacter(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextCharacter(source,    pos);    ParsePosition  pos  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	8	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	8	4	add
33	[BUG]  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	8	4	add
34	[BUG]  [BUGGY]      parseNextCharacter(source,  pos);  ParsePosition  pos  =  parseNextPosition(source,  pos);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  ParsePosition  pos  =  parseNextPosition(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextCharacter(source,    pos);    ParsePosition  pos  =  parseNextPosition(source,  pos);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	8	None	add
35	[BUG]  [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parseNextCharacter(source);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]    StackOverflowError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseAndIgnoreWhitespace(source,  pos);  ParsePosition  pos  =  parseNextCharacter(source);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseAndIgnoreWhitespace(source,    pos);    ParsePosition  pos  =  parseNextCharacter(source);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	11	None	add
36	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos)+  1;  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos)+  1;  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	ParsePosition  pos  =  parseNextCharacter(source,  pos)+  1;	      ParsePosition    pos    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	10	None	replace
37	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos  +  1);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos  +  1);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	ParsePosition  pos  =  parseNextCharacter(source,  pos  +  1);	      ParsePosition    pos    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	10	None	replace
38	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos.getIndex());  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	ParsePosition  pos  =  parseNextCharacter(source,  pos.getIndex());	      ParsePosition    pos    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	10	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	3	26	add
40	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	3	26	add
41	[BUG]  [BUGGY]  parseNextWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  parseNextWhitespace(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	parseNextWhitespace(source,  pos);	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
42	[BUG]  [BUGGY]  parseNextPosition(source,  pos);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  parseNextPosition(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	parseNextPosition(source,  pos);	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
43	[BUG]  [BUGGY]  pos.setIndex(this.realFormat.getIndex());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(this.realFormat.getIndex());  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(this.realFormat.getIndex());	  pos.setIndex(position.getIndex());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
44	[BUG]  [BUGGY]      parseNextPosition(pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextPosition(pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextPosition(pos);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
45	[BUG]  [BUGGY]      parseNextCharacter(source,  pos);  ParseIndexOutOfBoundsException  pos  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  ParseIndexOutOfBoundsException  pos  =  parseNextCharacter(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextCharacter(source,    pos);    ParseIndexOutOfBoundsException  pos  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
46	[BUG]  [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(source.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  pos.setIndex(source.getIndex()  -  1);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextCharacter(source,    pos);    pos.setIndex(source.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
47	[BUG]  [BUGGY]  pos.setIndex(position.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(position.getIndex()  +  1);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(position.getIndex()  +  1);	  pos.setIndex(pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  position	2	None	replace
48	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(p.getIndex());  [CE]  cannot  find  symbol  p  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(p.getIndex());  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex());    pos.setIndex(p.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  p	1	None	add
49	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	1	26	add
50	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	1	26	add
51	[BUG]  [BUGGY]  if(pos.getIndex()!=  -1)  {  NumberFormat  format  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER);  for(int  i  =  0,  len  =  format.length();  i  <  len;  ++i)  {  FormatUtils.appendPaddedInteger(  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  if(pos.getIndex()!=  -1)  {  NumberFormat  format  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER);  for(int  i  =  0,  len  =  format.length();  i  <  len;  ++i)  {  FormatUtils.appendPaddedInteger(  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	if(pos.getIndex()!=  -1)  {  NumberFormat  format  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER);  for(int  i  =  0,  len  =  format.length();  i  <  len;  ++i)  {  FormatUtils.appendPaddedInteger(	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  if(pos.getIndex()!=  -1)  {  NumberFormat  format  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER);  for(int  i  =  0,  len  =  format.length();  i  <  len;  ++i)  {  FormatUtils.writePaddedInteger(  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  if(pos.getIndex()!=  -1)  {  NumberFormat  format  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER);  for(int  i  =  0,  len  =  format.length();  i  <  len;  ++i)  {  FormatUtils.writePaddedInteger(  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	if(pos.getIndex()!=  -1)  {  NumberFormat  format  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER);  for(int  i  =  0,  len  =  format.length();  i  <  len;  ++i)  {  FormatUtils.writePaddedInteger(	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos,  imaginaryCharacter);  [CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos,  imaginaryCharacter);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	ParsePosition  pos  =  parseNextCharacter(source,  pos,  imaginaryCharacter);	      ParsePosition    pos    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parseAndIgnoreWhitespace(String,ParsePosition)	10	None	replace
54	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  *  1);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(source.getIndex()  *  1);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(source.getIndex()  *  1);	      pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
55	[BUG]  [BUGGY]  parseIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  parseIgnoreWhitespace(source,  pos);  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	parseIgnoreWhitespace(source,  pos);	      parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
56	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	3	26	add
57	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	3	26	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	        parseNextCharacter(source,    pos);    if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	  	compilable	  [FE]  AssertionFailedError  	8	26	add
59	[BUG]  [BUGGY]      parseNextCharacter(source,  pos);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextCharacter(source,    pos);    if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	  	compilable	  [FE]  AssertionFailedError  	8	26	add
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	        parseNextCharacter(source,    pos);    if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	8	26	add
61	[BUG]  [BUGGY]      parseNextCharacter(source,  pos);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextCharacter(source,    pos);    if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	8	26	add
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(0);  }  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	        parseNextCharacter(source,    pos);    if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(0);  }	  	compilable	  [FE]  AssertionFailedError  	8	26	add
63	[BUG]  [BUGGY]      parseNextCharacter(source,  pos);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(0);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      parseNextCharacter(source,  pos);  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(0);  }  [BUGGY]    pos.setIndex(pos.getIndex()  -  1);  }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        parseNextCharacter(source,    pos);    if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(0);  }	  	compilable	  [FE]  AssertionFailedError  	8	26	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	pos.setIndex(pos.getIndex()  +  2);	  pos.setIndex(pos.getIndex());    	compilable	  [FE]  AssertionFailedError  	2	26	replace
65	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	pos.setIndex(pos.getIndex()  +  2);	  pos.setIndex(pos.getIndex());    	compilable	  [FE]  AssertionFailedError  	2	26	replace
66	[BUG]  [BUGGY]      if(pos.getIndex()  ==  -1)  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  nf.setIndex(pos.getIndex()  +  1);  }  [CE]  NumberFormat  is  abstract;  cannot  be  instantiated  [FE]    AssertionFailedError    [CONTEXT]    private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);    [BUGGY]      if(pos.getIndex()  ==  -1)  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  nf.setIndex(pos.getIndex()  +  1);  }  [BUGGY]    }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	        if(pos.getIndex()  ==  -1)  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  nf.setIndex(pos.getIndex()  +  1);  }	  	non-compiled	[CE]  NumberFormat  is  abstract;  cannot  be  instantiated	6	None	add
