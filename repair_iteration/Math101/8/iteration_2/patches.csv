bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  n  =  getRealFormat().length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  n  =  getRealFormat().length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  n  =  getRealFormat().length();	  int    n    =    getImaginaryCharacter().length()    -    1;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
2	[BUG]  [BUGGY]  int  sign  =  im.length()  -  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  im.length()  -  1;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  im.length()  -  1;	  int    sign    =    im.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
3	[BUG]  [BUGGY]  int  sign  =  im.length()  +  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  im.length()  +  1;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  im.length()  +  1;	  int    sign    =    im.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
4	[BUG]  [BUGGY]  int  sign  =  im.length()  -  2;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  im.length()  -  2;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  im.length()  -  2;	  int    sign    =    im.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
5	[BUG]  [BUGGY]  if(im!=  null  &&  ImmutableUtil.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  ImmutableUtil  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  ImmutableUtil.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  ImmutableUtil.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    &&    Immutable.isEmpty(im)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol  ImmutableUtil	78	None	replace
6	[BUG]  [BUGGY]  if(im!=  null  &&  im.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    &&    Immutable.isEmpty(im)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
7	[BUG]  [BUGGY]  if(im!=  null  &&  im.isEmpty()  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.isEmpty()  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.isEmpty()  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    &&    Immutable.isEmpty(im)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
8	[BUG]  [BUGGY]  Number  im  =  parseNumber(c,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(c,  getRealFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(c,  getRealFormat(),  pos);	  Number    im    =    parseNumber(c,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
9	[BUG]  [BUGGY]  Number  im  =  parseNumber(re,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(re,  getImaginaryCharacter(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(re,  getImaginaryCharacter(),  pos);	  Number    im    =    parseNumber(c,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
10	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  sign);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  sign);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  sign);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    sign);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
11	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  endIndex);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  endIndex);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    sign);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
12	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	53	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	53	24	add
14	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	53	24	add
15	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	53	None	add
16	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [FE]          AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(endIndex);  pos.setIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	53	None	add
17	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(n);  [CE]  cannot  find  symbol  n  [FE]            AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(n);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(n);	  	non-compiled	[CE]  cannot  find  symbol  n	53	None	add
18	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
19	[BUG]  [BUGGY]  Null  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Null  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Null  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);	  Null    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
20	[BUG]  [BUGGY]  Null  im  =  parseNumber(source,  getRealFormat(),  pos  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Null  im  =  parseNumber(source,  getRealFormat(),  pos  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Null  im  =  parseNumber(source,  getRealFormat(),  pos  +  1);	  Null    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
21	[BUG]  [BUGGY]  Number  im  =  parseNull(source,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNull(source,  getRealFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNull(source,  getRealFormat(),  pos);	  Number    im    =    parseNumber(pos,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
22	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getFormat(),  pos);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getFormat(),  pos);	  Number    im    =    parseNumber(pos,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
23	[BUG]  [BUGGY]  Number  im  =  parseNumber(pos,  getRealFormat(),  pos  +  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(pos,  getRealFormat(),  pos  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(pos,  getRealFormat(),  pos  +  1);	  Number    im    =    parseNumber(pos,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
24	[BUG]  [BUGGY]  if(im!=  null  &&  im.charAt(im.length()  -  1)  ==  0)  {  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.charAt(im.length()  -  1)  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.charAt(im.length()  -  1)  ==  0)  {	  if(im!=    null    ||    im.charAt(im.length()    -    1)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
25	[BUG]  [BUGGY]  if(im!=  null  ||  im.charAt(im.length()  -  1)!=  0)  {  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.charAt(im.length()  -  1)!=  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.charAt(im.length()  -  1)!=  0)  {	  if(im!=    null    ||    im.charAt(im.length()    -    1)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
26	[BUG]  [BUGGY]  if(im  ==  null  ||  im.charAt(im.length()  -  1)!=  0)  {  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.charAt(im.length()  -  1)!=  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.charAt(im.length()  -  1)!=  0)  {	  if(im!=    null    ||    im.charAt(im.length()    -    1)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
27	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  n);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  n);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  n);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    startIndex);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
28	[BUG]  [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
29	[BUG]  [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
30	[BUG]  [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  >=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  >=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  >=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
31	[BUG]  [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
32	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setStartIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setStartIndex(startIndex);	  pos.setEndIndex(enum);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
33	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(initialIndex);  pos.setIndex(endIndex);	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
34	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
35	[BUG]  [BUGGY]  Integer  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(sign);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(sign);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(sign);	  Integer    sign    =    getImaginaryCharacter().length();    pos.setIndex(sign);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
36	[BUG]  [BUGGY]  Integer  sign  =  getRealFormat().length();  pos.setIndex(sign);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  sign  =  getRealFormat().length();  pos.setIndex(sign);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  getRealFormat().length();  pos.setIndex(sign);	  Integer    sign    =    getImaginaryCharacter().length();    pos.setIndex(sign);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
37	[BUG]  [BUGGY]  Integer  sign  =  im.length();  pos.setIndex(sign);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  sign  =  im.length();  pos.setIndex(sign);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  im.length();  pos.setIndex(sign);	  Integer    sign    =    getImaginaryCharacter().length();    pos.setIndex(sign);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  if(im!=  null  &&  im.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.length()  >=  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.length()  >=  0)  {	  if(im!=    null    &&    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
39	[BUG]  [BUGGY]  if(im!=  null  &&  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.startsWith(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
40	[BUG]  [BUGGY]  if(im  ==  null  ||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.startsWith(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
41	[BUG]  [BUGGY]  Integer  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(im);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(im);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(im);	  Integer    sign    =    getImaginaryCharacter().length();    pos.setIndex(im);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
42	[BUG]  [BUGGY]  Integer  sign  =  im.length();  pos.setIndex(im);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  sign  =  im.length();  pos.setIndex(im);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  im.length();  pos.setIndex(im);	  Integer    sign    =    getImaginaryCharacter().length();    pos.setIndex(im);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
43	[BUG]  [BUGGY]  Integer  sign  =  getRealFormat().length();  pos.setIndex(im);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  sign  =  getRealFormat().length();  pos.setIndex(im);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  getRealFormat().length();  pos.setIndex(im);	  Integer    sign    =    getImaginaryCharacter().length();    pos.setIndex(im);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
44	[BUG]  [BUGGY]  Integer  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);	  Integer    sign    =    getImaginaryCharacter().length();    pos.setIndex(im);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
45	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	24	add
46	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	24	add
47	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	24	add
48	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	24	add
49	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setStartIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setStartIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setStartIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
50	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	24	add
51	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	24	add
52	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
53	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
54	[BUG]  [BUGGY]  if(im!=  null)  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
55	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setInitialIndex(initialIndex);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(startIndex);  pos.setInitialIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
56	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setInitialIndex(initialIndex);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(endIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(endIndex);  pos.setInitialIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
57	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  pos);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  pos);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    pos);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
58	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  1);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    pos);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
59	[BUG]  [BUGGY]  int  sign  =  getRealFormat().length()  -  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  getRealFormat().length()  -  1;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getRealFormat().length()  -  1;	  int    sign    =    getRealFormat().length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
60	[BUG]  [BUGGY]  int  sign  =  getRealFormat().length()  +  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  getRealFormat().length()  +  1;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getRealFormat().length()  +  1;	  int    sign    =    getRealFormat().length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
61	[BUG]  [BUGGY]  Integer  sign  =  getRealFormat().length();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  sign  =  getRealFormat().length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  getRealFormat().length();	  int    sign    =    getRealFormat().length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
62	[BUG]  [BUGGY]  Integer  re  =  im.getInitialIndex()  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getInitialIndex()  +  1;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getInitialIndex()  +  1;	  Integer    re    =    im.getInitialIndex();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
63	[BUG]  [BUGGY]  Number  re  =  im.getInitialIndex();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  re  =  im.getInitialIndex();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  re  =  im.getInitialIndex();	  Integer    re    =    im.getInitialIndex();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
64	[BUG]  [BUGGY]  Integer  initialIndex  =  im.intValue();  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  initialIndex  =  im.intValue();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  initialIndex  =  im.intValue();	  if(im!=    null)    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
65	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  p);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  p);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryCharacter(),  p);	  Number    im    =    parseNumber(source,    getRealFormat(),    p);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
66	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  p);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  p);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryFormat(),  p);	  Number    im    =    parseNumber(source,    getRealFormat(),    p);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
67	[BUG]  [BUGGY]  if(im!=  null  &&  im.hasChildren()  ||  im.hasChildren())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.hasChildren()  ||  im.hasChildren())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.hasChildren()  ||  im.hasChildren())  {	  if(im!=    null    &&    im.hasChildren())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
68	[BUG]  [BUGGY]  if(im!=  null  ||  im.hasChildren())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.hasChildren())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.hasChildren())  {	  if(im!=    null    &&    im.hasChildren())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
69	[BUG]  [BUGGY]  if(im  ==  null  &&  im.hasChildren())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.hasChildren())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  &&  im.hasChildren())  {	  if(im!=    null    &&    im.hasChildren())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
70	[BUG]  [BUGGY]  if(im!=  null  ||  im.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.length()!=  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.length()!=  0)  {	  if(im    ==    null    ||    im.length()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
71	[BUG]  [BUGGY]  if(im  ==  null  ||  im.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.length()  >=  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.length()  >=  0)  {	  if(im    ==    null    ||    im.length()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
72	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    pos.setErrorIndex(endIndex);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
73	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  }	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    pos.setErrorIndex(endIndex);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
74	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos  +  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos  +  1);	  Number    im    =    parseNumber(source,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
75	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getDeprecatedFormat(),  pos);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getDeprecatedFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getDeprecatedFormat(),  pos);	  Number    im    =    parseNumber(source,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
76	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRangeFormat(),  pos);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRangeFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRangeFormat(),  pos);	  Number    im    =    parseNumber(source,    getImaginaryFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
77	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos  +  1);	  Number    im    =    parseNumber(source,    getImaginaryFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
78	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNumber(source,    getImaginaryFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
79	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  AssertionFailedError  	85	24	replace
81	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  AssertionFailedError  	85	24	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  AssertionFailedError  	85	24	replace
83	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  AssertionFailedError  	85	24	replace
84	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	85	2	replace
85	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	85	2	replace
86	[BUG]  [BUGGY]  if(im!=  null  ||  im.length()  <  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.length()  <  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.length()  <  0)  {	  if(im!=    null    ||    im.length()    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
87	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    c);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
88	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  2);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  2);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  2);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    c);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
89	[BUG]  [BUGGY]  Number  re  =  im.getRealIndex(pos);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  re  =  im.getRealIndex(pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  re  =  im.getRealIndex(pos);	  Integer    re    =    im.getRealIndex(pos);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
90	[BUG]  [BUGGY]  Integer  re  =  im.getRealIndex(pos  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getRealIndex(pos  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRealIndex(pos  +  1);	  Integer    re    =    im.getRealIndex(pos);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
91	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    pos.setErrorIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
92	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  }	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    pos.setErrorIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
93	[BUG]  [BUGGY]  pos.setIndex(endIndex  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(endIndex  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(endIndex  +  1);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
94	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(startIndex  +  1);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
95	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
96	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
97	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  Im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  Im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  Im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
98	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  ';'  expected	84	None	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null  &&  im.equals(im))  {	  if(im!=    null    ||    im.equals(im))    {    	compilable	  [FE]  AssertionFailedError  	26	24	replace
100	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(im))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(im))  {	  if(im!=    null    ||    im.equals(im))    {    	compilable	  [FE]  AssertionFailedError  	26	24	replace
101	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  &&  im.equals(im))  {	  if(im!=    null    ||    im.equals(im))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	2	replace
102	[BUG]  [BUGGY]  if(im  ==  null  &&  im.equals(im))  {  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  &&  im.equals(im))  {	  if(im!=    null    ||    im.equals(im))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	2	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  ||  im.equals(im))  {	  if(im!=    null    ||    im.equals(im))    {    	compilable	  [FE]  AssertionFailedError  	26	24	replace
104	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(im))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.equals(im))  {	  if(im!=    null    ||    im.equals(im))    {    	compilable	  [FE]  AssertionFailedError  	26	24	replace
105	[BUG]  [BUGGY]  if(im!=  null  ||  im.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.length()  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.length()  >  0)  {	  if(im!=    null    &&    im.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
106	[BUG]  [BUGGY]  if(im!=  null  &&  im.length()  >  0  ||  im.charAt(initialIndex)!=  '-')  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.length()  >  0  ||  im.charAt(initialIndex)!=  '-')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.length()  >  0  ||  im.charAt(initialIndex)!=  '-')  {	  if(im!=    null    &&    im.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
107	[BUG]  [BUGGY]  if(im!=  null  &&  im.length()  >  0  ||  im.charAt(initialIndex)  ==  '-')  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.length()  >  0  ||  im.charAt(initialIndex)  ==  '-')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.length()  >  0  ||  im.charAt(initialIndex)  ==  '-')  {	  if(im!=    null    &&    im.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
108	[BUG]  [BUGGY]  Number  im  =  parseNumber(realFormat,  getImaginaryFormat(),  pos);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(realFormat,  getImaginaryFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(realFormat,  getImaginaryFormat(),  pos);	  Number    im    =    parseNumber(realFormat,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
109	[BUG]  [BUGGY]  Number  im  =  parseNumber(realFormat,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(realFormat,  getImaginaryCharacter(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(realFormat,  getImaginaryCharacter(),  pos);	  Number    im    =    parseNumber(realFormat,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
110	[BUG]  [BUGGY]  Number  im  =  parseNumber(realFormat,  getRealFormat(),  pos  +  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(realFormat,  getRealFormat(),  pos  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(realFormat,  getRealFormat(),  pos  +  1);	  Number    im    =    parseNumber(realFormat,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
111	[BUG]  [BUGGY]  if(im!=  null)  {  If(im  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  If(im  ==  null)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  If(im  ==  null)  {	  if(im!=    null)    {    If(im!=    null)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
112	[BUG]  [BUGGY]  if(im  ==  null)  {  If(im!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  If(im!=  null)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  If(im!=  null)  {	  if(im!=    null)    {    If(im!=    null)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
113	[BUG]  [BUGGY]  Number  im  =  parseNumber(n,  getRealFormat(),  pos  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(n,  getRealFormat(),  pos  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(n,  getRealFormat(),  pos  +  1);	  Number    im    =    parseNumber(n,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
114	[BUG]  [BUGGY]  Number  im  =  parse(source,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parse(source,  getRealFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parse(source,  getRealFormat(),  pos);	  Number    im    =    parseNumber(n,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
115	[BUG]  [BUGGY]  Integer  re  =  im.getRealIndex(initialIndex  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getRealIndex(initialIndex  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRealIndex(initialIndex  +  1);	  Integer    re    =    im.getRealIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
116	[BUG]  [BUGGY]  Integer  re  =  im.getRealIndex(startIndex);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getRealIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRealIndex(startIndex);	  Integer    re    =    im.getRealIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
117	[BUG]  [BUGGY]  Integer  re  =  im.getRealIndex(endIndex);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getRealIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRealIndex(endIndex);	  Integer    re    =    im.getRealIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
118	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setEndIndex(initialIndex);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setEndIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(startIndex);  pos.setEndIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setEndIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
119	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setEndIndex(endIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setEndIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(startIndex);  pos.setEndIndex(endIndex);	          pos.setIndex(initialIndex);    pos.setEndIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
120	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setEndIndex(startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex);  pos.setEndIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(initialIndex);  pos.setEndIndex(startIndex);	          pos.setIndex(initialIndex);    pos.setEndIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
121	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setEndIndex(endIndex);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex);  pos.setEndIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(initialIndex);  pos.setEndIndex(endIndex);	          pos.setIndex(initialIndex);    pos.setEndIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
122	[BUG]  [BUGGY]  Integer  sign  =  getImaginaryCharacter().length();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  sign  =  getImaginaryCharacter().length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  getImaginaryCharacter().length();	  int    sign    =    getImaginaryCharacter().length()    +    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
123	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
124	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
125	[BUG]  [BUGGY]  pos.setStartIndex(endIndex);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setStartIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setStartIndex(endIndex);	  pos.setEndIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
126	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	48	24	add
127	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	48	24	add
128	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	48	24	add
129	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	48	24	add
130	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setStartIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setStartIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setStartIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
131	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	48	24	add
132	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	48	24	add
133	[BUG]  [BUGGY]  int  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(initialIndex);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(initialIndex);	  int    sign    =    getImaginaryCharacter().length();    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
134	[BUG]  [BUGGY]  n  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  n  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	n  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);	  int    sign    =    getImaginaryCharacter().length();    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
135	[BUG]  [BUGGY]  if(im!=  null)  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
136	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  if(im!=  null  ||  im.equals(im))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(im))  {  if(im!=  null  ||  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(im))    {    if(im!=  null  ||  im.equals(im))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
137	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  if(im  ==  null  ||  im.equals(im))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(im))  {  if(im  ==  null  ||  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(im))    {    if(im  ==  null  ||  im.equals(im))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
138	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  If(im!=  null  ||  im.equals(im))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(im))  {  If(im!=  null  ||  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(im))    {    If(im!=  null  ||  im.equals(im))  {	  	non-compiled	[CE]  ';'  expected	25	None	add
139	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  if(im  >=  null  ||  im.equals(im))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(im))  {  if(im  >=  null  ||  im.equals(im))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(im))    {    if(im  >=  null  ||  im.equals(im))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
140	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(InitialIndex);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(InitialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(startIndex);  pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
141	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  startIndex  +  1);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
142	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  2);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  2);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  2);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
143	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
144	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  >=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  >=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  >=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
145	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  ';'  expected	17	None	add
146	[BUG]  [BUGGY]  int  n  =  im.length()  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  n  =  im.length()  -  1;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  n  =  im.length()  -  1;	  int    n    =    im.length();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
147	[BUG]  [BUGGY]  int  n  =  im.length()  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  n  =  im.length()  +  1;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  n  =  im.length()  +  1;	  int    n    =    im.length();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
148	[BUG]  [BUGGY]  int  n  =  im.length()  *  2;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  n  =  im.length()  *  2;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  n  =  im.length()  *  2;	  int    n    =    im.length();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
149	[BUG]  [BUGGY]  int  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(im);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(im);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getImaginaryCharacter().length()  -  1;  pos.setIndex(im);	  int    sign    =    getImaginaryCharacter().length();    pos.setIndex(im);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
150	[BUG]  [BUGGY]  Number  re  =  im.getRealIndex();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  re  =  im.getRealIndex();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  re  =  im.getRealIndex();	  Integer    re    =    im.getRealIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
151	[BUG]  [BUGGY]  Integer  re  =  im.getRowIndex();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getRowIndex();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRowIndex();	  Integer    re    =    im.getRealIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	46	24	add
153	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	46	24	add
154	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	46	None	add
155	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
156	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]          AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(endIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	46	None	add
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	46	24	add
158	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	46	24	add
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    	compilable	  [FE]  AssertionFailedError  	73	24	replace
160	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    	compilable	  [FE]  AssertionFailedError  	73	24	replace
161	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	2	replace
162	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	2	replace
163	[BUG]  [BUGGY]  if(im!=  null)  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
164	[BUG]  [BUGGY]  if(im!=  null  ||  im.charAt(0)  ==  '-')  {  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.charAt(0)  ==  '-')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.charAt(0)  ==  '-')  {	  if(im    ==    null    ||    im.charAt(0)    ==    '-')    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
165	[BUG]  [BUGGY]  if(im  ==  null  ||  im.charAt(0)!=  '-')  {  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.charAt(0)!=  '-')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.charAt(0)!=  '-')  {	  if(im    ==    null    ||    im.charAt(0)    ==    '-')    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
166	[BUG]  [BUGGY]  if(im  ==  null  ||  im.charAt(1)  ==  '-')  {  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.charAt(1)  ==  '-')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.charAt(1)  ==  '-')  {	  if(im    ==    null    ||    im.charAt(0)    ==    '-')    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
167	[BUG]  [BUGGY]  Number  im  =  parseNumber(initialIndex,  getImaginaryFormat(),  pos);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(initialIndex,  getImaginaryFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(initialIndex,  getImaginaryFormat(),  pos);	  Number    im    =    parseNumber(initialIndex,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
168	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  }	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
169	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  }	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	70	24	replace
171	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    	compilable	  [FE]  AssertionFailedError  	70	24	replace
172	[BUG]  [BUGGY]  pos.setIndex(n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(n);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(n);	  pos.setIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
173	[BUG]  [BUGGY]  Integer  n  =  im.length();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  n  =  im.length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  n  =  im.length();	  Integer    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
174	[BUG]  [BUGGY]  Integer  n  =  getImaginaryCharacter().length()  +  1;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  n  =  getImaginaryCharacter().length()  +  1;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  n  =  getImaginaryCharacter().length()  +  1;	  Integer    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
175	[BUG]  [BUGGY]  Number  n  =  getImaginaryCharacter().length();  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  n  =  getImaginaryCharacter().length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  n  =  getImaginaryCharacter().length();	  Integer    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
176	[BUG]  [BUGGY]  Integer  n  =  getRealFormat().length();  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  n  =  getRealFormat().length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  n  =  getRealFormat().length();	  Integer    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
177	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  n.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	n.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
178	[BUG]  [BUGGY]  char  n  =  im.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  n  =  im.length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	char  n  =  im.length();	  int    n    =    im.length();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
179	[BUG]  [BUGGY]  if(im!=  null)  {  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  }	  int    sign    =    getImaginaryCharacter().length();    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
180	[BUG]  [BUGGY]  int  sign  =  getRealFormat().length();  pos.setIndex(initialIndex);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  getRealFormat().length();  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getRealFormat().length();  pos.setIndex(initialIndex);	  int    sign    =    getImaginaryCharacter().length();    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
181	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  in.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  in.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  in.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
182	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&|  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&|  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&|  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
183	[BUG]  [BUGGY]  int  sign  =  getImaginaryFormat().length();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  getImaginaryFormat().length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getImaginaryFormat().length();	  int    sign    =    getRealFormat().length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
184	[BUG]  [BUGGY]  Number  im  =  parse(source,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parse(source,  getImaginaryCharacter(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parse(source,  getImaginaryCharacter(),  pos);	  Number    im    =    parseNumber(n,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
185	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
186	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
187	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setInitialIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setInitialIndex(initialIndex);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setInitialIndex(initialIndex);  }	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
188	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(im))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(im))    {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
189	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(im))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(im))    {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
190	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(im))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(im))    {    Number  im  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
191	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(im))  {  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(im))    {    Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
192	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);	  Number    im    =    parseNumber(n,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
193	[BUG]  [BUGGY]  Number  im  =  parsePosition(source,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parsePosition(source,  getRealFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parsePosition(source,  getRealFormat(),  pos);	  Number    im    =    parseNumber(n,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
194	[BUG]  [BUGGY]  pos.setEndIndex(en);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setEndIndex(en);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setEndIndex(en);	  pos.setEndIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
195	[BUG]  [BUGGY]  if(im  ==  null)  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
196	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	24	add
197	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	24	add
198	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setInitialIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setInitialIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setInitialIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
199	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos,  pos);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos,  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos,  pos);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    pos);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
200	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	85	2	replace
201	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	85	2	replace
202	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
203	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	46	24	add
205	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setErrorIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	46	24	add
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	46	24	add
207	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	46	24	add
208	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setErrorIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setErrorIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setErrorIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	46	None	add
209	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  realFormat);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  realFormat);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  realFormat);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    sign);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
210	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getIgnoreWhitespace(),  pos);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getIgnoreWhitespace(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getIgnoreWhitespace(),  pos);	  Number    im    =    parseNumber(source,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
211	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  }	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    pos.setErrorIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
212	[BUG]  [BUGGY]  char  sign  =  im.length();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  sign  =  im.length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	char  sign  =  im.length();	  int    sign    =    im.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
213	[BUG]  [BUGGY]  if(im!=  null  &&  ImmutableUtilities.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  ImmutableUtilities  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  ImmutableUtilities.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  ImmutableUtilities.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    &&    Immutable.isEmpty(im)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol  ImmutableUtilities	78	None	replace
214	[BUG]  [BUGGY]  Integer  re  =  im.getPreviousIndex();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getPreviousIndex();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getPreviousIndex();	  Integer    re    =    im.getInitialIndex();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
215	[BUG]  [BUGGY]  if(im!=  null  &&  ImmutableUtilities.hasChildren())  {  [CE]  cannot  find  symbol  ImmutableUtilities  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  ImmutableUtilities.hasChildren())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  ImmutableUtilities.hasChildren())  {	  if(im!=    null    &&    im.hasChildren())    {    	non-compiled	[CE]  cannot  find  symbol  ImmutableUtilities	76	None	replace
216	[BUG]  [BUGGY]  if(im!=  null  &&  im.getChildren())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.getChildren())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.getChildren())  {	  if(im!=    null    &&    im.hasChildren())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im!=  null)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  ||  im!=  null)  {	  if(im!=    null)    {    if(im    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	5	24	replace
218	[BUG]  [BUGGY]  if(im  ==  null  ||  im!=  null)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im!=  null)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im!=  null)  {	  if(im!=    null)    {    if(im    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	5	24	replace
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(initialIndex!=  -1)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(initialIndex!=  -1)  {	  if(im!=    null)    {    if(im    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	5	24	replace
220	[BUG]  [BUGGY]  if(initialIndex!=  -1)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(initialIndex!=  -1)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(initialIndex!=  -1)  {	  if(im!=    null)    {    if(im    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	5	24	replace
221	[BUG]  [BUGGY]  Null  im  =  parseNumber(source,  getImaginaryFormat(),  pos);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Null  im  =  parseNumber(source,  getImaginaryFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Null  im  =  parseNumber(source,  getImaginaryFormat(),  pos);	  Null    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null)  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    	compilable	  [FE]  AssertionFailedError  	73	24	replace
223	[BUG]  [BUGGY]  if(im!=  null)  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    	compilable	  [FE]  AssertionFailedError  	73	24	replace
224	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setEndIndex(endIndex);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(endIndex);  pos.setEndIndex(endIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(endIndex);  pos.setEndIndex(endIndex);	          pos.setIndex(initialIndex);    pos.setEndIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
225	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    Number  im  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
226	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
227	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
228	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
229	[BUG]  [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    Number  im  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
230	[BUG]  [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	53	24	add
232	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	53	24	add
233	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setErrorIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setErrorIndex(startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(endIndex);  pos.setErrorIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	53	None	add
234	[BUG]  [BUGGY]  int  sign  =  getRealFormat().length();  pos.setIndex(sign);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  getRealFormat().length();  pos.setIndex(sign);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getRealFormat().length();  pos.setIndex(sign);	  int    sign    =    getImaginaryCharacter().length();    pos.setIndex(im);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
235	[BUG]  [BUGGY]  if(im  ==  null  &&  im.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.length()  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  &&  im.length()  >  0)  {	  if(im!=    null    &&    im.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
236	[BUG]  [BUGGY]  if(im!=  null  &&  initialIndex.length()  >  0)  {  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  initialIndex.length()  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  initialIndex.length()  >  0)  {	  if(im!=    null    &&    im.length()    >    0)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
237	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setInitialIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setInitialIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setInitialIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
238	[BUG]  [BUGGY]  if(im  ==  null)  {  Integer  initialIndex  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  return  null;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  Integer  initialIndex  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  return  null;  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  Integer  initialIndex  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  return  null;	  if(im!=    null)    {    If(im!=    null)    {    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	replace
239	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(deFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(deFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(deFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(im))    {    	non-compiled	[CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER	26	None	replace
240	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER  +  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER  +  1);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER  +  1);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
241	[BUG]  [BUGGY]  if(im  ==  null  &&  im.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  &&  im.length()  ==  0)  {	  if(im!=    null    &&    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
242	[BUG]  [BUGGY]  if(im!=  null  &&  initialIndex.length()  ==  0)  {  [CE]  int  cannot  be  dereferenced  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  initialIndex.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  initialIndex.length()  ==  0)  {	  if(im!=    null    &&    im.length()    ==    0)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	42	None	replace
243	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  n);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  n);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  n);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    c);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
244	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
245	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [CE]  <identifier>  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
246	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  }	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    pos.setErrorIndex(endIndex);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
247	[BUG]  [BUGGY]  if(im  ==  null  ||  im.charAt(im.length()  -  1)  ==  0)  {  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  im.charAt(im.length()  -  1)  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.charAt(im.length()  -  1)  ==  0)  {	  if(im!=    null    ||    im.charAt(im.length()    -    1)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
248	[BUG]  [BUGGY]  Int  n  =  getImaginaryCharacter().length();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Int  n  =  getImaginaryCharacter().length();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Int  n  =  getImaginaryCharacter().length();	  int    n    =    getImaginaryCharacter().length()    +    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
249	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
250	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
251	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
252	[BUG]  [BUGGY]  Integer  re  =  im.getRalIndex();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getRalIndex();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRalIndex();	  Integer    re    =    im.getRealIndex()    +    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
253	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null)  {	  if(im!=    null)    {    If(im!=    null)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
254	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
255	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  return  im;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  return  im;  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  return  im;  }	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
256	[BUG]  [BUGGY]  Integer  re  =  im.getInitialCharacter();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getInitialCharacter();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getInitialCharacter();	  Integer    re    =    im.getInitialIndex();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
257	[BUG]  [BUGGY]  Integer  re  =  im.getImmediateParentPointer();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getImmediateParentPointer();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getImmediateParentPointer();	  Integer    re    =    im.getInitialIndex();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
258	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.length()  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)&&  im.length()  >  0)  {	  if(im!=    null    &&    im.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
259	[BUG]  [BUGGY]  if(im!=  null  &&  im.charAt(0)  ==  'n'  &&  im.charAt(im.length()  -  1)!=  'r')  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.charAt(0)  ==  'n'  &&  im.charAt(im.length()  -  1)!=  'r')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.charAt(0)  ==  'n'  &&  im.charAt(im.length()  -  1)!=  'r')  {	  if(im!=    null    &&    im.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
260	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MILLISECOND);  [CE]  cannot  find  symbol  MILLISECOND  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MILLISECOND);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MILLISECOND);	  	non-compiled	[CE]  cannot  find  symbol  MILLISECOND	50	None	add
261	[BUG]  [BUGGY]  Number  im  =  parse(initialIndex,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parse(initialIndex,  getImaginaryCharacter(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parse(initialIndex,  getImaginaryCharacter(),  pos);	  Number    im    =    parseNumber(initialIndex,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
262	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getImaginaryCharacter(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  getImaginaryCharacter(),  pos);	  Number    im    =    parseNumber(initialIndex,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
263	[BUG]  [BUGGY]  if(im!=  null  &&  Immutable.isEmpty(im)||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  Immutable  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  Immutable.isEmpty(im)||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  Immutable.isEmpty(im)||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    &&    Immutable.isEmpty(im)||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol  Immutable	78	None	replace
264	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    c);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  c  ==  '-')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  ||  c  ==  '-')  {	  if(im    ==    null    ||    im.charAt(0)    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	32	12	replace
266	[BUG]  [BUGGY]  if(im  ==  null  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  ||  c  ==  '-')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  c  ==  '-')  {	  if(im    ==    null    ||    im.charAt(0)    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	32	12	replace
267	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(deFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(deFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(deFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER	18	None	replace
268	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
269	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  }	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    pos.setErrorIndex(endIndex);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
270	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
271	[BUG]  [BUGGY]  Integer  re  =  getRealFormat().getIndex(initialIndex);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  getRealFormat().getIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  getRealFormat().getIndex(initialIndex);	  if(im!=    null)    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
272	[BUG]  [BUGGY]  Integer  re  =  im.getImmediateParentPosition()  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getImmediateParentPosition()  -  1;  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getImmediateParentPosition()  -  1;	  Integer    re    =    im.getRealIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
273	[BUG]  [BUGGY]  Integer  re  =  im.getImmediateParentPointer().getRealIndex();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getImmediateParentPointer().getRealIndex();  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getImmediateParentPointer().getRealIndex();	  Integer    re    =    im.getRealIndex()    -    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
274	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
275	[BUG]  [BUGGY]  Number  im  =  parse(initialIndex,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parse(initialIndex,  getRealFormat(),  pos);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parse(initialIndex,  getRealFormat(),  pos);	  Number    im    =    parseNumber(initialIndex,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
276	[BUG]  [BUGGY]  if(im  ==  null)  {  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  }	  int    sign    =    getImaginaryCharacter().length();    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	53	24	add
278	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	53	24	add
279	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  return  null;  }  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  return  null;  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  return  null;  }	  	non-compiled	[CE]  cannot  find  symbol  endIndex	53	None	add
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	53	24	add
281	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	53	24	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	46	24	add
283	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	46	24	add
284	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  return  null;  }  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  return  null;  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  return  null;  }	  	non-compiled	[CE]  cannot  find  symbol  endIndex	46	None	add
285	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
286	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(sign);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(sign);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(sign);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
287	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(im);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(im);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(im);  }	  pos.setIndex(im);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
288	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
289	[BUG]  [BUGGY]  if(im  ==  null  &&  im!=  null  &&  im.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im!=  null  &&  im.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  &&  im!=  null  &&  im.length()  ==  0)  {	  if(im!=    null    &&    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
290	[BUG]  [BUGGY]  if(im!=  null  &&  im.charAt(0)  ==  'n'  &&  im.charAt(im.length()  -  1)  ==  'r')  {  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.charAt(0)  ==  'n'  &&  im.charAt(im.length()  -  1)  ==  'r')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.charAt(0)  ==  'n'  &&  im.charAt(im.length()  -  1)  ==  'r')  {	  if(im!=    null    &&    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
291	[BUG]  [BUGGY]  if(im!=  null  &&  im.charAt(0)  ==  'n'  &&  im.charAt(im.length()  -  1)  ==  'n')  {  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.charAt(0)  ==  'n'  &&  im.charAt(im.length()  -  1)  ==  'n')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.charAt(0)  ==  'n'  &&  im.charAt(im.length()  -  1)  ==  'n')  {	  if(im!=    null    &&    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
292	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
293	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  }	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    pos.setErrorIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
294	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos,  c);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos,  c);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos,  c);	  Number    im    =    parseNumber(source,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
295	[BUG]  [BUGGY]  pos.setIndex(InitialIndex);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(InitialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
296	[BUG]  [BUGGY]  Integer  re  =  im.getRealIndex(initialIndex,  startIndex);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  re  =  im.getRealIndex(initialIndex,  startIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRealIndex(initialIndex,  startIndex);	  Integer    re    =    im.getRealIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
297	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex  +  2);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(initialIndex  +  2);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
298	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  sign,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  sign,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  sign,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    sign);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
299	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  if(im!=  null  ||  im.equals(IM))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  ||  im.equals(im))  {  if(im!=  null  ||  im.equals(IM))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(im))    {    if(im!=  null  ||  im.equals(IM))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
300	[BUG]  [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    &&    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
301	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(startIndex);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im  ==  null)  {  pos.setIndex(startIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(startIndex);  }	  pos.setIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
302	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(startIndex);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null)  {  pos.setIndex(startIndex);  }  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(startIndex);  }	  pos.setIndex(startIndex);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
303	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  initialIndex);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  initialIndex);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  initialIndex);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    startIndex);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
304	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  c);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  c);  [BUGGY]      if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  startIndex,  c);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    startIndex);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
305	[BUG]  [BUGGY]  if(im!=  null  &&  im.next())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.next())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.next())  {	  if(im!=    null    &&    im.hasChildren())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
306	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	70	2	replace
307	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);    	compilable	  [FE]  StringIndexOutOfBoundsException  	70	2	replace
