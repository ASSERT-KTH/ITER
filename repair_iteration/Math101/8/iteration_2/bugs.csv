bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  sign  =  im.length();  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  im.length();  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  im.length();	      int    sign    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  int  sign  =  getImaginaryCharacter().length()  -  1;  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  getImaginaryCharacter().length()  -  1;  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getImaginaryCharacter().length()  -  1;	      int    sign    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  int  sign  =  getImaginaryCharacter().length()  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  getImaginaryCharacter().length()  +  1;  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getImaginaryCharacter().length()  +  1;	      int    sign    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  if(im!=  null)  {  if(im!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null)  {  if(im!=  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null)    {    if(im!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
5	[BUG]  [BUGGY]  if(im!=  null)  {  if(im  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null)  {  if(im  ==  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null)    {    if(im  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
6	[BUG]  [BUGGY]  if(im!=  null)  {  if(im  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null)  {  if(im  >=  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null)    {    if(im  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
7	[BUG]  [BUGGY]  if(im!=  null)  {  If(im!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null)  {  If(im!=  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null)    {    If(im!=  null)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
8	[BUG]  [BUGGY]  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(im);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(im);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getImaginaryCharacter().length();  pos.setIndex(im);	      int    sign    =    getImaginaryCharacter().length();    pos.setIndex(sign);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
9	[BUG]  [BUGGY]  pos.setIndex(im);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(im);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(im);	      int    sign    =    getImaginaryCharacter().length();    pos.setIndex(sign);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
10	[BUG]  [BUGGY]  Integer  sign  =  getImaginaryCharacter().length();  pos.setIndex(sign);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Integer  sign  =  getImaginaryCharacter().length();  pos.setIndex(sign);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  getImaginaryCharacter().length();  pos.setIndex(sign);	      int    sign    =    getImaginaryCharacter().length();    pos.setIndex(sign);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
11	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
12	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
13	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  >=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  >=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  >=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
14	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  ';'  expected	10	None	add
15	[BUG]  [BUGGY]  Number  im  =  parseNumber(pos,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(pos,  getRealFormat(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(pos,  getRealFormat(),  pos);	      Number    im    =    parseNumber(im,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  Number  im  =  parseNumber(n,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(n,  getRealFormat(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(n,  getRealFormat(),  pos);	      Number    im    =    parseNumber(im,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
17	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	2	replace
18	[BUG]  [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	2	replace
19	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	2	replace
20	[BUG]  [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  &&  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	11	2	replace
21	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	      Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
22	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  1);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  1);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  1);	      Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  pos);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  pos);	      Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  startIndex);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  startIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  startIndex);	      Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  ||  im.equals(im))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im!=  null  ||  im.equals(im))  {	  if(im!=    null)    {    	compilable	  [FE]  AssertionFailedError  	8	24	replace
26	[BUG]  [BUGGY]  if(im!=  null  ||  im.equals(im))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  ||  im.equals(im))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.equals(im))  {	  if(im!=    null)    {    	compilable	  [FE]  AssertionFailedError  	8	24	replace
27	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
28	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im!=  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
29	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    If(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  	non-compiled	[CE]  ';'  expected	16	None	add
30	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
31	[BUG]  [BUGGY]  if(im  ==  null  ||  im.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.length()!=  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.length()!=  0)  {	  if(im    ==    null    ||    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
32	[BUG]  [BUGGY]  if(im  ==  null  ||  im.charAt(0)  ==  '-')  {  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.charAt(0)  ==  '-')  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.charAt(0)  ==  '-')  {	  if(im    ==    null    ||    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
33	[BUG]  [BUGGY]  Integer  re  =  im.getRealIndex()  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Integer  re  =  im.getRealIndex()  +  1;  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRealIndex()  +  1;	      Integer    re    =    im.getRealIndex();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
34	[BUG]  [BUGGY]  Integer  re  =  im.getRealIndex()  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Integer  re  =  im.getRealIndex()  -  1;  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRealIndex()  -  1;	      Integer    re    =    im.getRealIndex();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
35	[BUG]  [BUGGY]  Integer  re  =  im.getInitialIndex();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Integer  re  =  im.getInitialIndex();  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getInitialIndex();	      Integer    re    =    im.getRealIndex();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
36	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);	      Number    im    =    parseNumber(im,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
37	[BUG]  [BUGGY]  Number  im  =  parseNumber(c,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(c,  getImaginaryCharacter(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(c,  getImaginaryCharacter(),  pos);	      Number    im    =    parseNumber(im,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
38	[BUG]  [BUGGY]  Number  im  =  parseNumber(pos,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(pos,  getImaginaryCharacter(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(pos,  getImaginaryCharacter(),  pos);	      Number    im    =    parseNumber(im,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
39	[BUG]  [BUGGY]  int  n  =  im.length();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  n  =  im.length();  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  n  =  im.length();	      int    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  int  n  =  getImaginaryCharacter().length()  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  n  =  getImaginaryCharacter().length()  +  1;  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  n  =  getImaginaryCharacter().length()  +  1;	      int    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  Integer  n  =  getImaginaryCharacter().length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Integer  n  =  getImaginaryCharacter().length();  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  n  =  getImaginaryCharacter().length();	      int    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  if(im!=  null  &&  im.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  &&  im.length()  ==  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.length()  ==  0)  {	  if(im!=    null    ||    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
43	[BUG]  [BUGGY]  if(im!=  null  ||  im.charAt(im.length()  -  1)  ==  0)  {  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  ||  im.charAt(im.length()  -  1)  ==  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.charAt(im.length()  -  1)  ==  0)  {	  if(im!=    null    ||    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
44	[BUG]  [BUGGY]  pos.setEndIndex(startIndex);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setEndIndex(startIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setEndIndex(startIndex);	      pos.setEndIndex(endIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  pos.setEndIndex(initialIndex);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setEndIndex(initialIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setEndIndex(initialIndex);	      pos.setEndIndex(endIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
47	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
48	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	2	24	add
49	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	2	24	add
50	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	2	24	add
51	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	2	24	add
52	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setEndIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setEndIndex(initialIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	        pos.setIndex(initialIndex);    pos.setEndIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	        pos.setIndex(initialIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
54	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
55	[BUG]  [BUGGY]  pos.setIndex(endIndex);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(endIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(endIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  pos.setIndex(startIndex);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(startIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(startIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
57	[BUG]  [BUGGY]  if(im!=  null  ||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  ||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.startsWith(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
58	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	        pos.setIndex(initialIndex);    pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
59	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	2	None	add
60	[BUG]  [BUGGY]  Integer  sign  =  getImaginaryCharacter().length();  pos.setIndex(im);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Integer  sign  =  getImaginaryCharacter().length();  pos.setIndex(im);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  sign  =  getImaginaryCharacter().length();  pos.setIndex(im);	      int    sign    =    getImaginaryCharacter().length();    pos.setIndex(sign);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
61	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  sign);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  sign);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  sign);	      Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
62	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos);	      Number    im    =    parseNumber(im,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
63	[BUG]  [BUGGY]  Null  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Null  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Null  im  =  parseNumber(source,  getRealFormat(),  pos);	      Number    im    =    parseNumber(im,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
64	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  p);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  p);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  p);	      Number    im    =    parseNumber(im,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
65	[BUG]  [BUGGY]  int  sign  =  getRealFormat().length();  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  getRealFormat().length();  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getRealFormat().length();	      int    sign    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
66	[BUG]  [BUGGY]  Integer  re  =  im.getRealIndex(pos);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Integer  re  =  im.getRealIndex(pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRealIndex(pos);	      Integer    re    =    im.getRealIndex();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
67	[BUG]  [BUGGY]  if(im!=  null  ||  im.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  ||  im.length()  >=  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.length()  >=  0)  {	  if(im!=    null    ||    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
68	[BUG]  [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null)  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null)  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
69	[BUG]  [BUGGY]  int  n  =  getImaginaryCharacter().length()  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  n  =  getImaginaryCharacter().length()  -  1;  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  n  =  getImaginaryCharacter().length()  -  1;	      int    n    =    getImaginaryCharacter().length();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
70	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
71	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    pos.setIndex(initialIndex);  pos.setErrorIndex(endIndex);	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
72	[BUG]  [BUGGY]  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	int  sign  =  getImaginaryCharacter().length();  pos.setIndex(initialIndex);	      int    sign    =    getImaginaryCharacter().length();    pos.setIndex(sign);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
73	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER))	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
74	[BUG]  [BUGGY]  pos.setEndIndex(enum);  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setEndIndex(enum);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setEndIndex(enum);	      pos.setEndIndex(endIndex);    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	6	None	replace
75	[BUG]  [BUGGY]  if(im!=  null  &&  im.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  &&  im.length()  >  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.length()  >  0)  {	  if(im!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
76	[BUG]  [BUGGY]  if(im!=  null  &&  im.hasChildren())  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  &&  im.hasChildren())  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  im.hasChildren())  {	  if(im!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
77	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  c);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  c);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  c);	      Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
78	[BUG]  [BUGGY]  if(im!=  null  &&  Immutable.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  Immutable  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im!=  null  &&  Immutable.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  &&  Immutable.isEmpty(im)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im!=    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	non-compiled	[CE]  cannot  find  symbol  Immutable	11	None	replace
79	[BUG]  [BUGGY]  Number  im  =  parseNumber(initialIndex,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(initialIndex,  getImaginaryCharacter(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(initialIndex,  getImaginaryCharacter(),  pos);	      Number    im    =    parseNumber(im,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
80	[BUG]  [BUGGY]  Number  im  =  parseNumber(n,  getImaginaryCharacter(),  pos);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(n,  getImaginaryCharacter(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(n,  getImaginaryCharacter(),  pos);	      Number    im    =    parseNumber(im,    getImaginaryCharacter(),    pos);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
81	[BUG]  [BUGGY]  Number  im  =  parseNumber(realFormat,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(realFormat,  getRealFormat(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(realFormat,  getRealFormat(),  pos);	      Number    im    =    parseNumber(im,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
82	[BUG]  [BUGGY]  Number  im  =  parseNumber(initialIndex,  getRealFormat(),  pos);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(initialIndex,  getRealFormat(),  pos);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Number  im  =  parseNumber(initialIndex,  getRealFormat(),  pos);	      Number    im    =    parseNumber(im,    getRealFormat(),    pos);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
83	[BUG]  [BUGGY]  Integer  re  =  im.getRealIndex(initialIndex);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Integer  re  =  im.getRealIndex(initialIndex);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	Integer  re  =  im.getRealIndex(initialIndex);	      Integer    re    =    im.getRealIndex();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
84	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	2	replace
85	[BUG]  [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.equals(DEFAULT_IMAGINARY_CHARACTER)||  im.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(im    ==    null    ||    im.equals(DEFAULT_IMAGINARY_CHARACTER))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	2	replace
86	[BUG]  [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(im  ==  null)  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null)  {  pos.setIndex(initialIndex);  }	      pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
87	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]    if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	pos.setIndex(initialIndex  +  1);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
