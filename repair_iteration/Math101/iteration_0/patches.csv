bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	12	2
2	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	12	2	add
3	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]    pos.setIndex(initialIndex);  return  null;  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	    pos.setIndex(initialIndex);  return  null;		non-compiled	[CE]  unreachable  statement	12	None	add
4	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	12	2
5	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	12	2	add
5	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]    pos.setErrorIndex(startIndex);  return  null;  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	    pos.setErrorIndex(startIndex);  return  null;		non-compiled	[CE]  unreachable  statement	12	None	add
11	[BUG]  [BUGGY]  setImaginaryCharacter(imaginaryCharacter);  [CE]  illegal  start  of  expression  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]  setImaginaryCharacter(imaginaryCharacter);  [BUGGY]    [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	setImaginaryCharacter(imaginaryCharacter);	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  this.imaginaryCharacter  =  getImaginaryCharacter();  [CE]  illegal  start  of  expression  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]  this.imaginaryCharacter  =  getImaginaryCharacter();  [BUGGY]    [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	this.imaginaryCharacter  =  getImaginaryCharacter();	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  this(imaginaryCharacter,  getImaginaryNumberFormat());  [CE]  illegal  start  of  expression  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]  this(imaginaryCharacter,  getImaginaryNumberFormat());  [BUGGY]    [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	this(imaginaryCharacter,  getImaginaryNumberFormat());	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacter());  [CE]  illegal  start  of  expression  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacter());  [BUGGY]    [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacter());	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]    [BUGGY]    [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  =  +1;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	sign  =  +1;	sign  =  1;  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	1	2
24	[BUG]  [BUGGY]  sign  =  +1;  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]  sign  =  +1;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	sign  =  +1;	sign  =  1;  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	1	2	replace
31	[BUG]  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacter());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacter());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacter());	this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	5	None	replace
32	[BUG]  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryFormat());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryFormat());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryFormat());	this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	5	None	replace
33	[BUG]  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacterFormat());  [CE]  cannot  find  symbol  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacterFormat());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	this(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacterFormat());	this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
34	[BUG]  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  realFormat,  getDefaultNumberFormat());  [CE]  cannot  reference  realFormat  before  supertype  constructor  has  been  called  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  realFormat,  getDefaultNumberFormat());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	this(DEFAULT_IMAGINARY_CHARACTER,  realFormat,  getDefaultNumberFormat());	this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  	non-compiled	[CE]  cannot  reference  realFormat  before  supertype  constructor  has  been  called	5	None	replace
35	[BUG]  [BUGGY]  [FE]  NullPointerException  testForgottenImaginaryCharacter  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	add	  	this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  	compilable	  [FE]  NullPointerException  testForgottenImaginaryCharacter	5	2
36	[BUG]  [BUGGY]    [FE]  NullPointerException  testForgottenImaginaryCharacter  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	  	this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  	compilable	  [FE]  NullPointerException  testForgottenImaginaryCharacter	5	2	replace
42	[BUG]  [BUGGY]  pos.removeIndex(startIndex);  break;  [CE]  cannot  find  symbol  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  pos.removeIndex(startIndex);  break;  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	pos.removeIndex(startIndex);  break;	break;  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
43	[BUG]  [BUGGY]  pos.removeIndex(startIndex);  [CE]  cannot  find  symbol  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  pos.removeIndex(startIndex);  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	pos.removeIndex(startIndex);	break;  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
44	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  pos.setErrorIndex(startIndex);  break;  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	add	pos.setErrorIndex(startIndex);  break;	break;  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	3	2
45	[BUG]  [BUGGY]  pos.setErrorIndex(startIndex);  break;  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]  pos.setErrorIndex(startIndex);  break;  [BUGGY]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	pos.setErrorIndex(startIndex);  break;	break;  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	3	2	replace
53	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(initialIndex);  return  null;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setIndex(initialIndex);  return  null;		non-compiled	[CE]  unreachable  statement	4	None	add
54	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;		non-compiled	[CE]  unreachable  statement	4	None	add
55	[BUG]  [BUGGY]    pos.setIndex(startIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(startIndex);  return  null;  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setIndex(startIndex);  return  null;		non-compiled	[CE]  unreachable  statement	4	None	add
61	[BUG]  [BUGGY]    int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    int  startIndex  =  pos.getIndex();  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	    int  startIndex  =  pos.getIndex();		non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
62	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    pos.setErrorIndex(startIndex);  return  null;  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	    pos.setErrorIndex(startIndex);  return  null;		non-compiled	[CE]  unreachable  statement	18	None	add
63	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	add	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	18	2
64	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	18	2	add
64	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  im);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    parseAndIgnoreWhitespace(source,  im);  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	    parseAndIgnoreWhitespace(source,  im);		non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	18	None	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	add	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	18	2
66	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	18	2	add
72	[BUG]  [BUGGY]  parseIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]  parseIgnoreWhitespace(source,  pos);  [BUGGY]    Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseIgnoreWhitespace(source,  pos);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
73	[BUG]  [BUGGY]  parseWhitespace(source,  pos);  [CE]  cannot  find  symbol  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]  parseWhitespace(source,  pos);  [BUGGY]    Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseWhitespace(source,  pos);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
74	[BUG]  [BUGGY]  parseBoundsAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]  parseBoundsAndIgnoreWhitespace(source,  pos);  [BUGGY]    Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseBoundsAndIgnoreWhitespace(source,  pos);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
81	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	16	2
82	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	16	2	add
83	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    pos.setErrorIndex(startIndex);  return  null;  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	    pos.setErrorIndex(startIndex);  return  null;		non-compiled	[CE]  unreachable  statement	16	None	add
84	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  return  im;  [CE]  incompatible  types  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    pos.setErrorIndex(startIndex);  return  im;  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	    pos.setErrorIndex(startIndex);  return  im;		non-compiled	[CE]  incompatible  types	16	None	add
85	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  return  im;  [CE]  incompatible  types  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    pos.setIndex(initialIndex);  return  im;  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	    pos.setIndex(initialIndex);  return  im;		non-compiled	[CE]  incompatible  types	16	None	add
93	[BUG]  [BUGGY]  int  n  =  getImaginaryCharacter().lastIndexOf(im);  [CE]  no  suitable  method  found  for  lastIndexOf(Number)  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]  int  n  =  getImaginaryCharacter().lastIndexOf(im);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	int  n  =  getImaginaryCharacter().lastIndexOf(im);	int  n  =  getImaginaryCharacter().length();  	non-compiled	[CE]  no  suitable  method  found  for  lastIndexOf(Number)	17	None	replace
94	[BUG]  [BUGGY]  int  n  =  getRealFormat().length();  [CE]  cannot  find  symbol  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]  int  n  =  getRealFormat().length();  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	int  n  =  getRealFormat().length();	int  n  =  getImaginaryCharacter().length();  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
101	[BUG]  [BUGGY]    System.arraycopy(imaginaryCharacter,  getDefaultNumberFormat(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  non-static  variable  imaginaryCharacter  cannot  be  referenced  from  a  static  context  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    System.arraycopy(imaginaryCharacter,  getDefaultNumberFormat(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    System.arraycopy(imaginaryCharacter,  getDefaultNumberFormat(),  DEFAULT_IMAGINARY_CHARACTER);		non-compiled	[CE]  non-static  variable  imaginaryCharacter  cannot  be  referenced  from  a  static  context	10	None	add
102	[BUG]  [BUGGY]    if(DEFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter!=  null)  {  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(DEFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter!=  null)  {  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(DEFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter!=  null)  {  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
103	[BUG]  [BUGGY]    if(DEFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter!=  null)  {  return  format;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(DEFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter!=  null)  {  return  format;  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(DEFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter!=  null)  {  return  format;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
104	[BUG]  [BUGGY]    if(DEFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter!=  null)  {  format  =  DEFAULT_IMAGINARY_CHARACTER.toString()  [CE]  ';'  expected  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(DEFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter!=  null)  {  format  =  DEFAULT_IMAGINARY_CHARACTER.toString()  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(DEFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter!=  null)  {  format  =  DEFAULT_IMAGINARY_CHARACTER.toString()		non-compiled	[CE]  ';'  expected	10	None	add
105	[BUG]  [BUGGY]    if(DEFAULT_IMAGINARY_CHARACTER!=  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter  ==  null)  {  return  format;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(DEFAULT_IMAGINARY_CHARACTER!=  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter  ==  null)  {  return  format;  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(DEFAULT_IMAGINARY_CHARACTER!=  null)  {  String  format  =  DEFAULT_IMAGINARY_CHARACTER.toString();  if(imaginaryCharacter  ==  null)  {  return  format;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
112	[BUG]  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  no  suitable  method  found  for  getDefaultNumberFormat(Locale,String)  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	return  getDefaultNumberFormat(Locale.getDefault(),  DEFAULT_IMAGINARY_CHARACTER);	return  getDefaultNumberFormat(Locale.getDefault());  	non-compiled	[CE]  no  suitable  method  found  for  getDefaultNumberFormat(Locale,String)	9	None	replace
113	[BUG]  [BUGGY]  return  getDefaultNumberFormat(DateTimeUtils.currentTimeMillis());  [CE]  cannot  find  symbol  DateTimeUtils  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]  return  getDefaultNumberFormat(DateTimeUtils.currentTimeMillis());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	return  getDefaultNumberFormat(DateTimeUtils.currentTimeMillis());	return  getDefaultNumberFormat(Locale.getDefault());  	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	9	None	replace
114	[BUG]  [BUGGY]  return  getDefaultNumberFormat(DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  non-static  variable  realFormat  cannot  be  referenced  from  a  static  context  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]  return  getDefaultNumberFormat(DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	return  getDefaultNumberFormat(DEFAULT_IMAGINARY_CHARACTER,  realFormat);	return  getDefaultNumberFormat(Locale.getDefault());  	non-compiled	[CE]  non-static  variable  realFormat  cannot  be  referenced  from  a  static  context	9	None	replace
124	[BUG]  [BUGGY]    this(imaginaryCharacter,  getImaginaryFormat());  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]    this(imaginaryCharacter,  getImaginaryFormat());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	    this(imaginaryCharacter,  getImaginaryFormat());		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	8	None	add
125	[BUG]  [BUGGY]    this(imaginaryCharacter,  getImaginaryNumberFormat(),  false);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]    this(imaginaryCharacter,  getImaginaryNumberFormat(),  false);  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	    this(imaginaryCharacter,  getImaginaryNumberFormat(),  false);		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	8	None	add
131	[BUG]  [BUGGY]    return  new  Complex(re.doubleValue(),  0.0);  [CE]  unreachable  statement  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    return  new  Complex(re.doubleValue(),  0.0);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    return  new  Complex(re.doubleValue(),  0.0);		non-compiled	[CE]  unreachable  statement	2	None	add
134	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    pos.setIndex(initialIndex);  return  null;  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    pos.setIndex(initialIndex);  return  null;		non-compiled	[CE]  unreachable  statement	2	None	add
135	[BUG]  [BUGGY]    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  [CE]  duplicate  case  label  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;		non-compiled	[CE]  duplicate  case  label	2	None	add
142	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	add	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	14	2
143	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	14	2	add
143	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setIndex(initialIndex);  return  null;  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	    pos.setIndex(initialIndex);  return  null;		non-compiled	[CE]  unreachable  statement	14	None	add
144	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	add	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	14	2
145	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	14	2	add
145	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    pos.setErrorIndex(startIndex);  return  null;  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	    pos.setErrorIndex(startIndex);  return  null;		non-compiled	[CE]  unreachable  statement	14	None	add
151	[BUG]  [BUGGY]  startIndex  =  pos.getIndex(n);  [CE]  method  getIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]  startIndex  =  pos.getIndex(n);  [BUGGY]  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getIndex(n);	startIndex  =  pos.getIndex();  	non-compiled	[CE]  method  getIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	19	None	replace
152	[BUG]  [BUGGY]  startIndex  =  pos.getIndex(initialIndex);  [CE]  method  getIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]  startIndex  =  pos.getIndex(initialIndex);  [BUGGY]  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getIndex(initialIndex);	startIndex  =  pos.getIndex();  	non-compiled	[CE]  method  getIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	19	None	replace
153	[BUG]  [BUGGY]  startIndex  =  pos.getIndex(n  +  1);  [CE]  method  getIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]  startIndex  =  pos.getIndex(n  +  1);  [BUGGY]  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getIndex(n  +  1);	startIndex  =  pos.getIndex();  	non-compiled	[CE]  method  getIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	19	None	replace
154	[BUG]  [BUGGY]  startIndex  =  pos.getIndex(startIndex);  [CE]  method  getIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]  startIndex  =  pos.getIndex(startIndex);  [BUGGY]  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.getIndex(startIndex);	startIndex  =  pos.getIndex();  	non-compiled	[CE]  method  getIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	19	None	replace
164	[BUG]  [BUGGY]  if(im!=  null  ||  im.length()  ==  0)  {  [CE]  cannot  find  symbol  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]  if(im!=  null  ||  im.length()  ==  0)  {  [BUGGY]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im!=  null  ||  im.length()  ==  0)  {	if  (im  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
172	[BUG]  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  cannot  reference  realFormat  before  supertype  constructor  has  been  called  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	    this(DEFAULT_IMAGINARY_CHARACTER,  realFormat);		non-compiled	[CE]  cannot  reference  realFormat  before  supertype  constructor  has  been  called	6	None	add
173	[BUG]  [BUGGY]    super();  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    super();  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	    super();		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	6	None	add
175	[BUG]  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  false);  [CE]  no  suitable  constructor  found  for  ComplexFormat(String,boolean)  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  false);  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	    this(DEFAULT_IMAGINARY_CHARACTER,  false);		non-compiled	[CE]  no  suitable  constructor  found  for  ComplexFormat(String,boolean)	6	None	add
182	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  DEFAULT_IMAGINARY_CHARACTER);  [CE]  no  suitable  method  found  for  parseNumber(String,NumberFormat,String)  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  DEFAULT_IMAGINARY_CHARACTER);	Number  im  =  parseNumber(source,  getRealFormat(),  pos);  	non-compiled	[CE]  no  suitable  method  found  for  parseNumber(String,NumberFormat,String)	13	None	replace
183	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	add	Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos);	Number  im  =  parseNumber(source,  getRealFormat(),  pos);  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	13	2
184	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	Number  im  =  parseNumber(source,  getImaginaryFormat(),  pos);	Number  im  =  parseNumber(source,  getRealFormat(),  pos);  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	13	2	replace
184	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  imaginaryCharacter);  [CE]  no  suitable  method  found  for  parseNumber(String,NumberFormat,String)  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  imaginaryCharacter);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  imaginaryCharacter);	Number  im  =  parseNumber(source,  getRealFormat(),  pos);  	non-compiled	[CE]  no  suitable  method  found  for  parseNumber(String,NumberFormat,String)	13	None	replace
191	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    pos.setErrorIndex(n);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	    pos.setErrorIndex(n);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	20	2
192	[BUG]  [BUGGY]    pos.setErrorIndex(n);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    pos.setErrorIndex(n);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    pos.setErrorIndex(n);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	20	2	add
192	[BUG]  [BUGGY]    int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    int  startIndex  =  pos.getIndex();  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    int  startIndex  =  pos.getIndex();		non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	20	None	add
193	[BUG]  [BUGGY]    int  n  =  getRealFormat().charAt(0);  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    int  n  =  getRealFormat().charAt(0);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    int  n  =  getRealFormat().charAt(0);		non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	20	None	add
194	[BUG]  [BUGGY]    int  sign  =  pos.getIndex();  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    int  sign  =  pos.getIndex();  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    int  sign  =  pos.getIndex();		non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	20	None	add
195	[BUG]  [BUGGY]    pos.setErrorIndex(n);  return  null;  [CE]  unreachable  statement  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    pos.setErrorIndex(n);  return  null;  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    pos.setErrorIndex(n);  return  null;		non-compiled	[CE]  unreachable  statement	20	None	add
2	[BUG]  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES,  getDefaultNumberFormat());  [CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES,  getDefaultNumberFormat());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES,  getDefaultNumberFormat());	this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES	5	None	replace
4	[BUG]  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES,  getImaginaryCharacter());  [CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES,  getImaginaryCharacter());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES,  getImaginaryCharacter());	this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES	5	None	replace
21	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [CE]  no  suitable  method  found  for  parseNumber(String,String,ParsePosition)  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	Number  im  =  parseNumber(source,  getImaginaryCharacter(),  pos);	Number  im  =  parseNumber(source,  getRealFormat(),  pos);  	non-compiled	[CE]  no  suitable  method  found  for  parseNumber(String,String,ParsePosition)	13	None	replace
24	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryParameter(),  pos);  [CE]  cannot  find  symbol  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getImaginaryParameter(),  pos);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	Number  im  =  parseNumber(source,  getImaginaryParameter(),  pos);	Number  im  =  parseNumber(source,  getRealFormat(),  pos);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
43	[BUG]  [BUGGY]    ParsePosition  pos  =  parse(source,  getImaginaryCharacter());  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]    ParsePosition  pos  =  parse(source,  getImaginaryCharacter());  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	    ParsePosition  pos  =  parse(source,  getImaginaryCharacter());		non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
44	[BUG]  [BUGGY]    ParsePosition  pos  =  parse(source,  getImaginaryCharacter(),  pos);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]    ParsePosition  pos  =  parse(source,  getImaginaryCharacter(),  pos);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	    ParsePosition  pos  =  parse(source,  getImaginaryCharacter(),  pos);		non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
45	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  getImaginaryCharacter(),  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]    parseAndIgnoreWhitespace(source,  getImaginaryCharacter(),  pos);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	    parseAndIgnoreWhitespace(source,  getImaginaryCharacter(),  pos);		non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	add
83	[BUG]  [BUGGY]  if(im  ==  null  ||  im.isNumber())  {  [CE]  cannot  find  symbol  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]  if(im  ==  null  ||  im.isNumber())  {  [BUGGY]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.isNumber())  {	if  (im  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
84	[BUG]  [BUGGY]  if(im  ==  null  ||!re.isNumber())  {  [CE]  cannot  find  symbol  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]  if(im  ==  null  ||!re.isNumber())  {  [BUGGY]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||!re.isNumber())  {	if  (im  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
105	[BUG]  [BUGGY]    int  startIndex  =  parseIntPrimitive(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    int  startIndex  =  parseIntPrimitive(source,  pos);  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	    int  startIndex  =  parseIntPrimitive(source,  pos);		non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
124	[BUG]  [BUGGY]  startIndex  =  pos.indexOf(n);  [CE]  cannot  find  symbol  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]  startIndex  =  pos.indexOf(n);  [BUGGY]  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	startIndex  =  pos.indexOf(n);	startIndex  =  pos.getIndex();  	non-compiled	[CE]  cannot  find  symbol	19	None	replace
144	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  endIndex  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setIndex(initialIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setIndex(initialIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	4	None	add
145	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  [CE]  cannot  find  symbol  endIndex  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	4	None	add
162	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [BUGGY]    Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  pos,  startIndex);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	11	None	replace
164	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex);  [BUGGY]    Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  startIndex);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	11	None	replace
183	[BUG]  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault()  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault()  -  1);  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	return  getDefaultNumberFormat(Locale.getDefault()  -  1);	return  getDefaultNumberFormat(Locale.getDefault());  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	9	None	replace
184	[BUG]  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault()  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault()  +  1);  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	return  getDefaultNumberFormat(Locale.getDefault()  +  1);	return  getDefaultNumberFormat(Locale.getDefault());  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	9	None	replace
224	[BUG]  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES);  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES);		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	8	None	add
225	[BUG]  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_NUMBER_FORMAT);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_NUMBER_FORMAT);  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_NUMBER_FORMAT);		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	8	None	add
245	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  return  null;  [CE]  unreachable  statement  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  return  null;  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	    parseAndIgnoreWhitespace(source,  pos);  return  null;		non-compiled	[CE]  unreachable  statement	14	None	add
261	[BUG]  [BUGGY]    Preconditions.checkNotNull(DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    Preconditions.checkNotNull(DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    Preconditions.checkNotNull(DEFAULT_IMAGINARY_CHARACTER);		non-compiled	[CE]  cannot  find  symbol  Preconditions	10	None	add
262	[BUG]  [BUGGY]    if(imaginaryCharacter!=  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  return  getImaginaryNumberFormat(DeFAULT_IMAGINARY_CHARACTER);  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(imaginaryCharacter!=  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  return  getImaginaryNumberFormat(DeFAULT_IMAGINARY_CHARACTER);  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(imaginaryCharacter!=  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  return  getImaginaryNumberFormat(DeFAULT_IMAGINARY_CHARACTER);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
263	[BUG]  [BUGGY]    if(imaginaryCharacter  ==  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  return  getImaginaryNumberFormat(DeFAULT_IMAGINARY_CHARACTER);  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(imaginaryCharacter  ==  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  return  getImaginaryNumberFormat(DeFAULT_IMAGINARY_CHARACTER);  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(imaginaryCharacter  ==  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  return  getImaginaryNumberFormat(DeFAULT_IMAGINARY_CHARACTER);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
264	[BUG]  [BUGGY]    if(imaginaryCharacter!=  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(imaginaryCharacter!=  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(imaginaryCharacter!=  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
265	[BUG]  [BUGGY]    if(imaginaryCharacter  ==  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(imaginaryCharacter  ==  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(imaginaryCharacter  ==  null)  {  if(getImaginaryCharacter().equals(DEFAULT_IMAGINARY_CHARACTER))  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
282	[BUG]  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  no  suitable  constructor  found  for  ComplexFormat(String,String)  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);		non-compiled	[CE]  no  suitable  constructor  found  for  ComplexFormat(String,String)	6	None	add
284	[BUG]  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_FORMAT);  [CE]  cannot  find  symbol  DEFAULT_IMAGINARY_FORMAT  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_FORMAT);  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_FORMAT);		non-compiled	[CE]  cannot  find  symbol  DEFAULT_IMAGINARY_FORMAT	6	None	add
285	[BUG]  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES);  [CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES);  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	    this(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_FIELD_NAMES);		non-compiled	[CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES	6	None	add
304	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  return  null;  [CE]  unreachable  statement  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    pos.setIndex(initialIndex);  return  null;  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	    pos.setIndex(initialIndex);  return  null;		non-compiled	[CE]  unreachable  statement	16	None	add
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	16	2
306	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	16	2	add
321	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	20	2
322	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	20	2	add
324	[BUG]  [BUGGY]    pos.setCharacter(im.toCharArray());  [CE]  cannot  find  symbol  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    pos.setCharacter(im.toCharArray());  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    pos.setCharacter(im.toCharArray());		non-compiled	[CE]  cannot  find  symbol	20	None	add
341	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  [CE]  cannot  find  symbol  endIndex  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	2	None	add
343	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  endIndex  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setIndex(initialIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setIndex(initialIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	2	None	add
344	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setIndex(startIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	2	None	add
345	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setErrorIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setErrorIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    parseAndIgnoreWhitespace(source,  startIndex,  endIndex);  pos.setErrorIndex(startIndex);		non-compiled	[CE]  cannot  find  symbol  endIndex	2	None	add
3	[BUG]  [BUGGY]    parseAndIgnoreImaginaryCharacter(source,  pos);  [CE]  cannot  find  symbol  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]    parseAndIgnoreImaginaryCharacter(source,  pos);  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	    parseAndIgnoreImaginaryCharacter(source,  pos);		non-compiled	[CE]  cannot  find  symbol	14	None	add
63	[BUG]  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  NumberFormat.getInstance());  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  NumberFormat.getInstance());  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	    this(DEFAULT_IMAGINARY_CHARACTER,  NumberFormat.getInstance());		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	6	None	add
64	[BUG]  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  NumberFormat.getNumberInstance());  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]    this(DEFAULT_IMAGINARY_CHARACTER,  NumberFormat.getNumberInstance());  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	    this(DEFAULT_IMAGINARY_CHARACTER,  NumberFormat.getNumberInstance());		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	6	None	add
121	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]    setImaginaryCharacter(DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	add	    setImaginaryCharacter(DEFAULT_IMAGINARY_CHARACTER);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	8	2
122	[BUG]  [BUGGY]    setImaginaryCharacter(DEFAULT_IMAGINARY_CHARACTER);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]    setImaginaryCharacter(DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	    setImaginaryCharacter(DEFAULT_IMAGINARY_CHARACTER);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	8	2	add
124	[BUG]  [BUGGY]    setImaginaryCharacter(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacter());  [CE]  method  setImaginaryCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [CONTEXT]  public  ComplexFormat()  {  this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  [BUGGY]    setImaginaryCharacter(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacter());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	    setImaginaryCharacter(DEFAULT_IMAGINARY_CHARACTER,  getImaginaryCharacter());		non-compiled	[CE]  method  setImaginaryCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	8	None	add
152	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	add	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	4	2
153	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	4	2	add
153	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  return  new  Complex(re.doubleValue(),  im.doubleValue(),  0.0);  [CE]  cannot  find  symbol  im  [CONTEXT]  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [BUGGY]    pos.setIndex(initialIndex);  return  new  Complex(re.doubleValue(),  im.doubleValue(),  0.0);  [BUGGY]  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	    pos.setIndex(initialIndex);  return  new  Complex(re.doubleValue(),  im.doubleValue(),  0.0);		non-compiled	[CE]  cannot  find  symbol  im	4	None	add
243	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	2	2
244	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    parseAndIgnoreWhitespace(source,  pos);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	2	2	add
244	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  pos);  pos.setErrorIndex(startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    parseAndIgnoreWhitespace(source,  startIndex,  pos);  pos.setErrorIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    parseAndIgnoreWhitespace(source,  startIndex,  pos);  pos.setErrorIndex(startIndex);		non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	2	None	add
245	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	2	2
246	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [BUGGY]  sign  =  1;  break;  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	2	2	add
275	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  im,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    parseAndIgnoreWhitespace(source,  im,  pos);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	    parseAndIgnoreWhitespace(source,  im,  pos);		non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	16	None	add
303	[BUG]  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter,  getDefaultNumberFormat());  [CE]  cannot  reference  imaginaryCharacter  before  supertype  constructor  has  been  called  [CONTEXT]  public  ComplexFormat()  {  [BUGGY]  this(DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter,  getDefaultNumberFormat());  [BUGGY]  }  [CLASS]  ComplexFormat  [METHOD]  <init>  [RETURN_TYPE]  ComplexFormat()  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	this(DEFAULT_IMAGINARY_CHARACTER,  imaginaryCharacter,  getDefaultNumberFormat());	this(DEFAULT_IMAGINARY_CHARACTER,  getDefaultNumberFormat());  	non-compiled	[CE]  cannot  reference  imaginaryCharacter  before  supertype  constructor  has  been  called	5	None	replace
332	[BUG]  [BUGGY]    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter  ==  null)  {  return  getImaginaryCharacterFormat(imaginaryCharacter);  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter  ==  null)  {  return  getImaginaryCharacterFormat(imaginaryCharacter);  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter  ==  null)  {  return  getImaginaryCharacterFormat(imaginaryCharacter);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
333	[BUG]  [BUGGY]    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter!=  null)  {  return  getImaginaryCharacterFormat(imaginaryCharacter);  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter!=  null)  {  return  getImaginaryCharacterFormat(imaginaryCharacter);  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter!=  null)  {  return  getImaginaryCharacterFormat(imaginaryCharacter);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
334	[BUG]  [BUGGY]    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter  ==  null)  {  return  getImaginaryCharacterFormat(realFormat);  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter  ==  null)  {  return  getImaginaryCharacterFormat(realFormat);  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter  ==  null)  {  return  getImaginaryCharacterFormat(realFormat);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
335	[BUG]  [BUGGY]    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  static  NumberFormat  getDefaultNumberFormat()  {  [BUGGY]    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter  ==  null)  {  return  false;  }  [BUGGY]  return  getDefaultNumberFormat(Locale.getDefault());  }  [CLASS]  ComplexFormat  [METHOD]  getDefaultNumberFormat  [RETURN_TYPE]  NumberFormat  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  boolean  long  serialVersionUID  NumberFormat  format  imaginaryFormat  realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	    if(DeFAULT_IMAGINARY_CHARACTER  ==  null)  {  String  imaginaryCharacter  =  getImaginaryCharacter();  if(imaginaryCharacter  ==  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
424	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getDecimalFormat(),  pos);  [CE]  cannot  find  symbol  [CONTEXT]    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getDecimalFormat(),  pos);  [BUGGY]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	Number  im  =  parseNumber(source,  getDecimalFormat(),  pos);	Number  im  =  parseNumber(source,  getRealFormat(),  pos);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
451	[BUG]  [BUGGY]  if(im  ==  null  ||  im.length()  ==  0)  {  [CE]  cannot  find  symbol  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]  if(im  ==  null  ||  im.length()  ==  0)  {  [BUGGY]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.length()  ==  0)  {	if  (im  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
453	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]  if(im  ==  null  ||  im.intValue()  <  0)  {  [BUGGY]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  ||  im.intValue()  <  0)  {	if  (im  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	15	2
454	[BUG]  [BUGGY]  if(im  ==  null  ||  im.intValue()  <  0)  {  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]  if(im  ==  null  ||  im.intValue()  <  0)  {  [BUGGY]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.intValue()  <  0)  {	if  (im  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	15	2	replace
454	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]  if(im  ==  null  ||  im.doubleValue()  <  0)  {  [BUGGY]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	if(im  ==  null  ||  im.doubleValue()  <  0)  {	if  (im  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	15	2
455	[BUG]  [BUGGY]  if(im  ==  null  ||  im.doubleValue()  <  0)  {  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  parseAndIgnoreWhitespace(source,  pos);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]  if(im  ==  null  ||  im.doubleValue()  <  0)  {  [BUGGY]      pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	if(im  ==  null  ||  im.doubleValue()  <  0)  {	if  (im  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	15	2	replace
483	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [CONTEXT]  default  :    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }    [BUGGY]  parseAndIgnoreWhitespace(source,  startIndex,  pos);  [BUGGY]    Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	parseAndIgnoreWhitespace(source,  startIndex,  pos);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	11	None	replace
515	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  initialIndex  =  pos.getIndex();  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	add	    parseAndIgnoreWhitespace(source,  pos);  initialIndex  =  pos.getIndex();		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	18	2
516	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  initialIndex  =  pos.getIndex();  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }    [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  initialIndex  =  pos.getIndex();  [BUGGY]  int  n  =  getImaginaryCharacter().length();  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	    parseAndIgnoreWhitespace(source,  pos);  initialIndex  =  pos.getIndex();		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	18	2	add
541	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	20	2
542	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    pos.setErrorIndex(startIndex);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	20	2	add
543	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	    pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	20	2
544	[BUG]  [BUGGY]    pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    pos.setErrorIndex(startIndex);  pos.setErrorIndex(startIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  testForgottenImaginaryCharacter	20	2	add
544	[BUG]  [BUGGY]    char  c  =  getImaginaryCharacter().charAt(n);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    char  c  =  getImaginaryCharacter().charAt(n);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    char  c  =  getImaginaryCharacter().charAt(n);		non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	20	None	add
545	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	20	2
546	[BUG]  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [FE]  AssertionFailedError  testForgottenImaginaryCharacter  [CONTEXT]  if  (im  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  n  =  getImaginaryCharacter().length();  [BUGGY]    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);  [BUGGY]  startIndex  =  pos.getIndex();  int  endIndex  =  startIndex  +  n;  if  (  source.substring(startIndex,  endIndex).compareTo(  getImaginaryCharacter())  !=  0)  {    pos.setIndex(initialIndex);  pos.setErrorIndex(startIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	    parseAndIgnoreWhitespace(source,  pos);  pos.setErrorIndex(startIndex);		compilable	  [FE]  AssertionFailedError  testForgottenImaginaryCharacter	20	2	add
