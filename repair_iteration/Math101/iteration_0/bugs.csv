bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] sign = 1; [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] int sign = 0; switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : [BUGGY] sign = 1; [BUGGY] break; default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	
2	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] int sign = 0; switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : [BUGGY] [BUGGY] sign = 1; break; default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	
3	[BUG] [BUGGY] break; [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : sign = 1; [BUGGY] break; [BUGGY] default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }   [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	
4	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : sign = 1; [BUGGY] [BUGGY] break; default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }   [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	add	
5	[BUG] [BUGGY] this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] public ComplexFormat() { [BUGGY] this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); [BUGGY] } [CLASS] ComplexFormat [METHOD] <init> [RETURN_TYPE] ComplexFormat()  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	
6	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] public ComplexFormat() { [BUGGY] [BUGGY] this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); } [CLASS] ComplexFormat [METHOD] <init> [RETURN_TYPE] ComplexFormat()  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	add	
7	[BUG] [BUGGY] } [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] public ComplexFormat() { this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); [BUGGY] } [BUGGY]  [CLASS] ComplexFormat [METHOD] <init> [RETURN_TYPE] ComplexFormat()  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	
8	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] public ComplexFormat() { this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); [BUGGY] [BUGGY] } [CLASS] ComplexFormat [METHOD] <init> [RETURN_TYPE] ComplexFormat()  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	add	
9	[BUG] [BUGGY] return getDefaultNumberFormat(Locale.getDefault()); [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] private static NumberFormat getDefaultNumberFormat() { [BUGGY] return getDefaultNumberFormat(Locale.getDefault()); [BUGGY] } [CLASS] ComplexFormat [METHOD] getDefaultNumberFormat [RETURN_TYPE] NumberFormat  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat format imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	
10	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] private static NumberFormat getDefaultNumberFormat() { [BUGGY] [BUGGY] return getDefaultNumberFormat(Locale.getDefault()); } [CLASS] ComplexFormat [METHOD] getDefaultNumberFormat [RETURN_TYPE] NumberFormat  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat format imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	add	
11	[BUG] [BUGGY] parseAndIgnoreWhitespace(source, pos); [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  [BUGGY] parseAndIgnoreWhitespace(source, pos); [BUGGY]   Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	
12	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  [BUGGY] [BUGGY] parseAndIgnoreWhitespace(source, pos);  Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	
13	[BUG] [BUGGY] Number im = parseNumber(source, getRealFormat(), pos); [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT]  pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  parseAndIgnoreWhitespace(source, pos);  [BUGGY] Number im = parseNumber(source, getRealFormat(), pos); [BUGGY] if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	
14	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT]  pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  parseAndIgnoreWhitespace(source, pos);  [BUGGY] [BUGGY] Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	add	
15	[BUG] [BUGGY] if (im == null) { [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  parseAndIgnoreWhitespace(source, pos);  Number im = parseNumber(source, getRealFormat(), pos); [BUGGY] if (im == null) { [BUGGY]    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	
16	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  parseAndIgnoreWhitespace(source, pos);  Number im = parseNumber(source, getRealFormat(), pos); [BUGGY] [BUGGY] if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	
17	[BUG] [BUGGY] int n = getImaginaryCharacter().length(); [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; }  [BUGGY] int n = getImaginaryCharacter().length(); [BUGGY] startIndex = pos.getIndex(); int endIndex = startIndex + n; if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	
18	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; }  [BUGGY] [BUGGY] int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); int endIndex = startIndex + n; if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	add	
19	[BUG] [BUGGY] startIndex = pos.getIndex(); [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); [BUGGY] startIndex = pos.getIndex(); [BUGGY] int endIndex = startIndex + n; if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	
20	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException testForgottenImaginaryCharacter [CONTEXT] if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); [BUGGY] [BUGGY] startIndex = pos.getIndex(); int endIndex = startIndex + n; if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	
