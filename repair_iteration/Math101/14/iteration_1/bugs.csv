bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	27	None	replace
2	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]  parseAndIgnoreWhitespace(source,  pos,  initialIndex);  [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	parseAndIgnoreWhitespace(source,  pos,  initialIndex);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	27	None	replace
3	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]  parseAndIgnoreWhitespace(source,  initialIndex);  [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	parseAndIgnoreWhitespace(source,  initialIndex);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	27	None	replace
4	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	add	  	parseAndIgnoreWhitespace(source,  pos);  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	2	replace
5	[BUG]  [BUGGY]    [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	  	parseAndIgnoreWhitespace(source,  pos);  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	2	replace
6	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	add	    pos.setIndex(initialIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	28	2	add
7	[BUG]  [BUGGY]    pos.setIndex(initialIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    pos.setIndex(initialIndex);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    pos.setIndex(initialIndex);		compilable	  [FE]  StringIndexOutOfBoundsException  	28	2	add
8	[BUG]  [BUGGY]    Number  im  =  parse(source,  getRealFormat(),  pos);  [CE]  no  suitable  method  found  for  parse(String,NumberFormat,ParsePosition)  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    Number  im  =  parse(source,  getRealFormat(),  pos);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    Number  im  =  parse(source,  getRealFormat(),  pos);		non-compiled	[CE]  no  suitable  method  found  for  parse(String,NumberFormat,ParsePosition)	28	None	add
9	[BUG]  [BUGGY]    int  n  =  source.indexOf(initialIndex);  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    int  n  =  source.indexOf(initialIndex);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    int  n  =  source.indexOf(initialIndex);		non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	28	None	add
10	[BUG]  [BUGGY]    Number  im  =  parse(source,  pos.getIndex());  [CE]  no  suitable  method  found  for  parse(String,int)  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    Number  im  =  parse(source,  pos.getIndex());  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    Number  im  =  parse(source,  pos.getIndex());		non-compiled	[CE]  no  suitable  method  found  for  parse(String,int)	28	None	add
11	[BUG]  [BUGGY]    Number  im  =  parse(source,  pos);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    Number  im  =  parse(source,  pos);  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    Number  im  =  parse(source,  pos);		non-compiled	[CE]  incompatible  types	28	None	add
12	[BUG]  [BUGGY]    int  n  =  source.length();  [CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    int  n  =  source.length();  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    int  n  =  source.length();		non-compiled	[CE]  variable  n  is  already  defined  in  method  parse(String,ParsePosition)	28	None	add
13	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    int  imIndex  =  pos.getIndex();  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	add	    int  imIndex  =  pos.getIndex();		compilable	  [FE]  StringIndexOutOfBoundsException  	28	2	add
14	[BUG]  [BUGGY]    int  imIndex  =  pos.getIndex();  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    int  imIndex  =  pos.getIndex();  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    int  imIndex  =  pos.getIndex();		compilable	  [FE]  StringIndexOutOfBoundsException  	28	2	add
15	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]  parse(source,  pos);  [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	add	parse(source,  pos);	parseAndIgnoreWhitespace(source,  pos);  	compilable	  [FE]  StackOverflowError  	27	26	replace
16	[BUG]  [BUGGY]  parse(source,  pos);  [FE]  StackOverflowError  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]  parse(source,  pos);  [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	parse(source,  pos);	parseAndIgnoreWhitespace(source,  pos);  	compilable	  [FE]  StackOverflowError  	27	26	replace
17	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex());  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex());  [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex());	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	27	None	replace
18	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getStartIndex());  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getStartIndex());  [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	parseAndIgnoreWhitespace(source,  pos.getStartIndex());	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  cannot  find  symbol	27	None	replace
19	[BUG]  [BUGGY]  ParseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]  ParseAndIgnoreWhitespace(source,  pos);  [BUGGY]    Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	ParseAndIgnoreWhitespace(source,  pos);	parseAndIgnoreWhitespace(source,  pos);  	non-compiled	[CE]  cannot  find  symbol	27	None	replace
20	[BUG]  [BUGGY]    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if(im  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if(im  ==  null)  {  return  null;  }  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if(im  ==  null)  {  return  null;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
21	[BUG]  [BUGGY]    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  if(im  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  if(im  ==  null)  {  return  null;  }  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  if(im  ==  null)  {  return  null;  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
22	[BUG]  [BUGGY]    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if(im  ==  null)  {  return  new  Complex(im);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if(im  ==  null)  {  return  new  Complex(im);  }  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  if(im  ==  null)  {  return  new  Complex(im);  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
23	[BUG]  [BUGGY]    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  return  null;  }  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();    [BUGGY]    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  return  null;  }  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	    if(initialIndex  <  pos.getStartIndex())  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  return  null;  }		non-compiled	[CE]  cannot  find  symbol	28	None	add
