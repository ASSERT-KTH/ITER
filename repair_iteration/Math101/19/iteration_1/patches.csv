bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(endIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(endIndex);	      pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	7	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	        pos.setIndex(startIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	6	24	add
3	[BUG]  [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(startIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	6	24	add
4	[BUG]  [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(startIndex);    pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	6	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	        pos.setIndex(startIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	6	26	add
6	[BUG]  [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(startIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	6	26	add
7	[BUG]  [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(n);  [CE]  cannot  find  symbol  n  [FE]          AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(n);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(startIndex);    pos.setIndex(n);	  	non-compiled	[CE]  cannot  find  symbol  n	6	None	add
8	[BUG]  [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(id);  [CE]  cannot  find  symbol  id  [FE]            AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(id);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(startIndex);    pos.setIndex(id);	  	non-compiled	[CE]  cannot  find  symbol  id	6	None	add
9	[BUG]  [BUGGY]  char  re  =  parseNextCharacter(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  char  re  =  parseNextCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  re  =  parseNextCharacter(source,  pos);	      int    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
10	[BUG]  [BUGGY]  int  re  =  parseNextCharacter(source,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  re  =  parseNextCharacter(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  re  =  parseNextCharacter(source,  startIndex);	      int    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
11	[BUG]  [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  re  =  parseNextCharacter(source,  pos,  startIndex);	      int    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
12	[BUG]  [BUGGY]  double  re  =  parseNextCharacter(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  double  re  =  parseNextCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  re  =  parseNextCharacter(source,  pos);	      int    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
13	[BUG]  [BUGGY]  int  sign  =  1;  int  sign  =  1;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  1;  int  sign  =  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    1;    int  sign  =  1;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
14	[BUG]  [BUGGY]  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    1;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
15	[BUG]  [BUGGY]  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  1;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    1;    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
16	[BUG]  [BUGGY]  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    1;    char  c  =  parseNextCharacter(source,  pos);  sign  =  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
17	[BUG]  [BUGGY]  int  sign  =  1;  char  c  =  parseNextCharacter(source,  startIndex);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  1;  char  c  =  parseNextCharacter(source,  startIndex);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    1;    char  c  =  parseNextCharacter(source,  startIndex);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	16	26	add
19	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	16	26	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	        pos.setIndex(initialIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	16	24	add
21	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	16	24	add
22	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	16	None	add
23	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]          AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	16	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(c);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	        pos.setIndex(initialIndex);    pos.setIndex(c);	  	compilable	  [FE]  AssertionFailedError  	16	26	add
25	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(c);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(c);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(c);	  	compilable	  [FE]  AssertionFailedError  	16	26	add
26	[BUG]  [BUGGY]  int  sign  =(startIndex  <  source.getEndIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  source.getEndIndex())?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  source.getEndIndex())?  0  :  startIndex;	  int    sign    =(startIndex    <    pos.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
27	[BUG]  [BUGGY]  int  sign  =(startIndex  <  source.getStartIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  source.getStartIndex())?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  source.getStartIndex())?  0  :  startIndex;	  int    sign    =(startIndex    <    pos.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
28	[BUG]  [BUGGY]  int  sign  =(endIndex  <  pos.getEndIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(endIndex  <  pos.getEndIndex())?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  pos.getEndIndex())?  0  :  startIndex;	  int    sign    =(startIndex    <    pos.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	20	None	replace
29	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  pos.getEndIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(initialIndex  <  pos.getEndIndex())?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  pos.getEndIndex())?  0  :  startIndex;	  int    sign    =(startIndex    <    pos.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
30	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  pos.setStartIndex(startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setStartIndex(startIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
31	[BUG]  [BUGGY]  pos.setEndIndex(startIndex);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  pos.setEndIndex(startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setEndIndex(startIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
32	[BUG]  [BUGGY]  char  sign  =  1;  [CE]  possible  loss  of  precision  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  char  sign  =  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  1;	  int    sign    =    1;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
33	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  2;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  2;	  int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	replace
34	[BUG]  [BUGGY]  int  sign  =  2;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  2;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  2;	  int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	replace
35	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	19	None	replace
36	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex;  [CE]  cannot  find  symbol  endIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  endIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	19	None	replace
37	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
38	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
39	[BUG]  [BUGGY]  re.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  re.setIndex(endIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	re.setIndex(endIndex);	      re.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	9	None	replace
40	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	replace
41	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  startIndex);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	replace
42	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  initialIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  initialIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  initialIndex);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	replace
43	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  pos);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	replace
44	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Integer  re  =  parseNextCharacter(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  startIndex);	      Integer    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
45	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  pos,  startIndex);	      Integer    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
46	[BUG]  [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parsePreviousCharacter(source,  pos);	      Integer    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
47	[BUG]  [BUGGY]  int  sign  =  startIndex;  int  sign  =  startIndex;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex;  int  sign  =  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex;    int  sign  =  startIndex;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	13	None	add
48	[BUG]  [BUGGY]  int  sign  =  startIndex;  int  startIndex  =  startIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex;  int  startIndex  =  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex;    int  startIndex  =  startIndex;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	13	None	add
49	[BUG]  [BUGGY]  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	13	None	add
50	[BUG]  [BUGGY]  int  sign  =  startIndex;  Integer  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex;  Integer  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex;    Integer  startIndex  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	13	None	add
51	[BUG]  [BUGGY]  int  sign  =  startIndex;  Integer  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex;  Integer  startIndex  =  pos.getIndex();  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex;    Integer  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	13	None	add
52	[BUG]  [BUGGY]  int  sign  =  n;  [CE]  cannot  find  symbol  n  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  n;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  n;	  int    sign    =    startIndex;    	non-compiled	[CE]  cannot  find  symbol  n	14	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    	compilable	  [FE]  AssertionFailedError  	14	24	replace
54	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    	compilable	  [FE]  AssertionFailedError  	14	24	replace
55	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  pos.getIndex();  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  pos.getIndex();	  int    sign    =    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
56	[BUG]  [BUGGY]  int  sign  =  pos.getIndex();  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  pos.getIndex();  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  pos.getIndex();	  int    sign    =    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
57	[BUG]  [BUGGY]  int  sign  =  pos.getStartIndex();  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  pos.getStartIndex();  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  pos.getStartIndex();	  int    sign    =    startIndex;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
58	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parseNextCharacter(source,  startIndex);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	8	None	replace
59	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  sign  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  char  n  =  parseNextCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  n  =  parseNextCharacter(source,  pos);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  sign	8	None	replace
60	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parseNextCharacter(source,  pos,  startIndex);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	8	None	replace
61	[BUG]  [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parsePreviousCharacter(source,  pos);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
62	[BUG]  [BUGGY]  char  sign  =  0L;  [CE]  possible  loss  of  precision  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  char  sign  =  0L;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  0L;	  int    sign    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
63	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  double  sign  =  0L;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	double  sign  =  0L;	  int    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	replace
64	[BUG]  [BUGGY]  double  sign  =  0L;  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  double  sign  =  0L;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  sign  =  0L;	  int    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	replace
65	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  long  sign  =  0L;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	long  sign  =  0L;	  int    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	replace
66	[BUG]  [BUGGY]  long  sign  =  0L;  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  long  sign  =  0L;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long  sign  =  0L;	  int    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	replace
67	[BUG]  [BUGGY]  pos.setIndex(endIndex);  return  null;  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(endIndex);  return  null;  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(endIndex);  return  null;	      pos.setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  endIndex	10	None	replace
68	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  return  null;  [CE]  cannot  find  symbol  sign  [FE]                StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(initialIndex);  return  null;  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(initialIndex);  return  null;	      pos.setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  sign	10	None	replace
69	[BUG]  [BUGGY]  String  sign  =  0;  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  String  sign  =  0;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  sign  =  0;	  char    sign    =    0;    	non-compiled	[CE]  incompatible  types	1	None	replace
70	[BUG]  [BUGGY]  Char  sign  =  0;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Char  sign  =  0;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Char  sign  =  0;	  char    sign    =    0;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
71	[BUG]  [BUGGY]  Character  sign  =  0;  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Character  sign  =  0;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Character  sign  =  0;	  char    sign    =    0;    	non-compiled	[CE]  incompatible  types	1	None	replace
72	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parseNextCharacter(source,  pos);	      	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	5	None	replace
73	[BUG]  [BUGGY]  int  imIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  sign  [FE]                StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  imIndex  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  imIndex  =  parseNextCharacter(source,  pos);	      	non-compiled	[CE]  cannot  find  symbol  sign	5	None	replace
74	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  int  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  int  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex;    int  sign  =(startIndex  <  0)?  0  :  startIndex;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
75	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex;    int  startIndex  =(startIndex  <  0)?  0  :  startIndex;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
76	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex;    Integer  sign  =(startIndex  <  0)?  0  :  startIndex;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
77	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
78	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex;    Int  sign  =(startIndex  <  0)?  0  :  startIndex;	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
79	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  char  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  char  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex;    char  startIndex  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
80	[BUG]  [BUGGY]  int  sign  =  1;  char  sign  =  parseNextCharacter(source,  pos);  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  1;  char  sign  =  parseNextCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    1;    char  sign  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
81	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	16	None	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	16	26	add
83	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	16	26	add
84	[BUG]  [BUGGY]  int  sign  =  startIndex;  Integer  startIndex  =  startIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex;  Integer  startIndex  =  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex;    Integer  startIndex  =  startIndex;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	13	None	add
85	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex  -  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  startIndex  -  1;	  int    sign    =    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
86	[BUG]  [BUGGY]  int  sign  =  startIndex  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex  -  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  startIndex  -  1;	  int    sign    =    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
87	[BUG]  [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(startIndex);    int  startIndex  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	6	None	add
88	[BUG]  [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(startIndex);    int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	6	None	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	        pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	6	24	add
90	[BUG]  [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	6	24	add
91	[BUG]  [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(startIndex);    int  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	6	None	add
92	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  endIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  endIndex);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	12	None	replace
93	[BUG]  [BUGGY]  Integer  im  =  parseNextInteger(source,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Integer  im  =  parseNextInteger(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  im  =  parseNextInteger(source,  pos);	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
94	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  1);  [CE]  cannot  find  symbol  sign  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  pos.setIndex(startIndex  +  1);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(startIndex  +  1);	      pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  sign	7	None	replace
95	[BUG]  [BUGGY]  int  sign  =(endIndex  <  source.getEndIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(endIndex  <  source.getEndIndex())?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  source.getEndIndex())?  0  :  startIndex;	  int    sign    =(startIndex    <    pos.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	20	None	replace
96	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;	  int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	replace
97	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;	  int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	replace
98	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getStartIndex())?  1  :  0;  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  pos.getStartIndex())?  1  :  0;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  pos.getStartIndex())?  1  :  0;	  int    sign    =    1;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
99	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  c);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  pos,  c);	      Integer    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
100	[BUG]  [BUGGY]  int  sign  =  1;  char  c  =  parsePreviousCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  1;  char  c  =  parsePreviousCharacter(source,  pos);  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    1;    char  c  =  parsePreviousCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	2	None	add
101	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	24	add
102	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	24	add
103	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.parseInt(c));  [CE]  no  suitable  method  found  for  parseInt(char)  [FE]      AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.parseInt(c));  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(Integer.parseInt(c));	  	non-compiled	[CE]  no  suitable  method  found  for  parseInt(char)	16	None	add
104	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	24	add
105	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	24	add
106	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  return  null;  }  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  return  null;  }	      pos.setIndex(startIndex);    return    null;    	non-compiled	[CE]  incomparable  types:  char  and  String	10	None	replace
107	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]                StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  return  null;  }  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  return  null;  }	      pos.setIndex(startIndex);    return    null;    	non-compiled	[CE]  incomparable  types:  char  and  String	10	None	replace
108	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  endIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	19	None	replace
109	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  int  sign  =(startIndex  >=  0)?  0  :  startIndex;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex;  int  sign  =(startIndex  >=  0)?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex;    int  sign  =(startIndex  >=  0)?  0  :  startIndex;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
110	[BUG]  [BUGGY]  re.setIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  re.setIndex(initialIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	re.setIndex(initialIndex);	      re.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
111	[BUG]  [BUGGY]  im.setIndex(startIndex);  [CE]  cannot  find  symbol  im  [FE]              StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  im.setIndex(startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	im.setIndex(startIndex);	      re.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  im	9	None	replace
112	[BUG]  [BUGGY]  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  startIndex;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex;    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  startIndex;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	13	None	add
113	[BUG]  [BUGGY]  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  int  startIndex  =  startIndex;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  int  startIndex  =  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex;    char  c  =  parseNextCharacter(source,  pos);  int  startIndex  =  startIndex;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	13	None	add
114	[BUG]  [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  c);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  re  =  parseNextCharacter(source,  pos,  c);	      int    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
115	[BUG]  [BUGGY]  int  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  DEFAULT_IMAGINARY_CHARACTER;	  int    sign    =    startIndex;    	non-compiled	[CE]  incompatible  types	14	None	replace
116	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  c;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  c;	  int    sign    =    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
117	[BUG]  [BUGGY]  int  sign  =  c;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =  c;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  c;	  int    sign    =    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	2	replace
118	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  <  0)?  1  :  0;	  int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	replace
119	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  1  :  0;	  int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	replace
120	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  <  0)?  -1  :  1;	  int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	replace
121	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  -1  :  1;	  int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	replace
122	[BUG]  [BUGGY]  int  sign  =(endIndex  <  pos.getStartIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  int  sign  =(endIndex  <  pos.getStartIndex())?  0  :  startIndex;  [BUGGY]    switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  pos.getStartIndex())?  0  :  startIndex;	  int    sign    =(startIndex    <    pos.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	20	None	replace
123	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  c);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  c);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  c);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	replace
124	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	12	None	replace
