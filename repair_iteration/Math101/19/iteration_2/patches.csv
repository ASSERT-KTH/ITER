bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos.setIndex(initialIndex,  Integer.parseInt(c));  [CE]  no  suitable  method  found  for  parseInt(char)  [FE]          AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(initialIndex,  Integer.parseInt(c));  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(initialIndex,  Integer.parseInt(c));	          pos.setIndex(initialIndex);    pos.setIndex(Integer.parseInt(c));    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(char)	103	None	replace
2	[BUG]  [BUGGY]  pos.setIndex(startIndex,  Integer.parseInt(c));  [CE]  no  suitable  method  found  for  parseInt(char)  [FE]            AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(startIndex,  Integer.parseInt(c));  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(startIndex,  Integer.parseInt(c));	          pos.setIndex(initialIndex);    pos.setIndex(Integer.parseInt(c));    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(char)	103	None	replace
3	[BUG]  [BUGGY]  pos.setIndex(Integer.parseInt(c));  [CE]  no  suitable  method  found  for  parseInt(char)  [FE]              AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(Integer.parseInt(c));  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(Integer.parseInt(c));	          pos.setIndex(initialIndex);    pos.setIndex(Integer.parseInt(c));    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(char)	103	None	replace
4	[BUG]  [BUGGY]  int  sign  =  source.getIndex();  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  source.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  source.getIndex();	  int    sign    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
5	[BUG]  [BUGGY]  char  sign  =  pos.getIndex();  [CE]  possible  loss  of  precision  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  sign  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  pos.getIndex();	  int    sign    =    pos.getIndex();    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
6	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex()  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  pos.getIndex()  +  1;	  int    sign    =    pos.getIndex();    	compilable	  [FE]  StringIndexOutOfBoundsException  	56	2	replace
7	[BUG]  [BUGGY]  int  sign  =  pos.getIndex()  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex()  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  pos.getIndex()  +  1;	  int    sign    =    pos.getIndex();    	compilable	  [FE]  StringIndexOutOfBoundsException  	56	2	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	82	26	add
9	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	82	26	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	82	26	add
11	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	82	26	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	82	26	add
13	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	82	26	add
14	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  InitialIndex  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	82	None	add
15	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(endIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  endIndex  [FE]            AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(endIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(endIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  cannot  find  symbol  endIndex	82	None	add
16	[BUG]  [BUGGY]  int  sign  =  c;  int  sign  =  c;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c;  int  sign  =  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    c;    int  sign  =  c;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
17	[BUG]  [BUGGY]  int  sign  =  c;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    c;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
18	[BUG]  [BUGGY]  int  sign  =  c;  char  c  =  parseNextCharacter(source,  pos);  startIndex  =  pos.getIndex();  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c;  char  c  =  parseNextCharacter(source,  pos);  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    c;    char  c  =  parseNextCharacter(source,  pos);  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
19	[BUG]  [BUGGY]  int  sign  =  c;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  c;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    c;    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  c;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
20	[BUG]  [BUGGY]  int  sign  =  c;  char  c  =  parseNextCharacter(source,  pos.getIndex());  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c;  char  c  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    c;    char  c  =  parseNextCharacter(source,  pos.getIndex());	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
21	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =  pos.getIndex();	  im.setIndex(startIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	111	None	replace
22	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  int  sign  =(startIndex  <  0)?  -1  :  1;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  int  sign  =(startIndex  <  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    -1    :    1;    int  sign  =(startIndex  <  0)?  -1  :  1;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	120	None	add
23	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  int  startIndex  =(startIndex  <  0)?  -1  :  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  int  startIndex  =(startIndex  <  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    -1    :    1;    int  startIndex  =(startIndex  <  0)?  -1  :  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	120	None	add
24	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  Integer  sign  =(startIndex  <  0)?  -1  :  1;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  Integer  sign  =(startIndex  <  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    -1    :    1;    Integer  sign  =(startIndex  <  0)?  -1  :  1;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	120	None	add
25	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    -1    :    1;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	120	None	add
26	[BUG]  [BUGGY]  char  sign  =  parseNextCharacter(source,  pos);  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  sign  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  parseNextCharacter(source,  pos);	  int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
27	[BUG]  [BUGGY]  int  sign  =  parseInfiniteCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  parseInfiniteCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  parseInfiniteCharacter(source,  pos);	  int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
28	[BUG]  [BUGGY]  int  sign  =  parseInitialCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  parseInitialCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  parseInitialCharacter(source,  pos);	  int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
29	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  parseNextCharacter(source,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  parseNextCharacter(source,  startIndex);	  int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	54	None	replace
30	[BUG]  [BUGGY]  char  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  DEFAULT_IMAGINARY_CHARACTER;	  int    sign    =    DEFAULT_IMAGINARY_CHARACTER;    	non-compiled	[CE]  incompatible  types	115	None	replace
31	[BUG]  [BUGGY]  int  sign  =  c.length();  [CE]  char  cannot  be  dereferenced  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c.length();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  c.length();	  int    sign    =    DEFAULT_IMAGINARY_CHARACTER;    	non-compiled	[CE]  char  cannot  be  dereferenced	115	None	replace
32	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  initialIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(initialIndex  <  0)?  0  :  initialIndex;	  int    sign    =(endIndex    <    0)?    0    :    endIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	108	2	replace
33	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  initialIndex;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  initialIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  0)?  0  :  initialIndex;	  int    sign    =(endIndex    <    0)?    0    :    endIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	108	2	replace
34	[BUG]  [BUGGY]  int  sign  =  n  -  1;  [CE]  cannot  find  symbol  n  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  n  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  n  -  1;	  int    sign    =    startIndex    -    1;    	non-compiled	[CE]  cannot  find  symbol  n	86	None	replace
35	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex()  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  pos.getIndex()  -  1;	  int    sign    =    startIndex    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	86	2	replace
36	[BUG]  [BUGGY]  int  sign  =  pos.getIndex()  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex()  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  pos.getIndex()  -  1;	  int    sign    =    startIndex    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	86	2	replace
37	[BUG]  [BUGGY]  int  sign  =  endIndex  -  1;  [CE]  cannot  find  symbol  endIndex  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  endIndex  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  endIndex  -  1;	  int    sign    =    startIndex    -    1;    	non-compiled	[CE]  cannot  find  symbol  endIndex	86	None	replace
38	[BUG]  [BUGGY]  int  sign  =  source.getStartIndex();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  source.getStartIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  source.getStartIndex();	  int    sign    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
39	[BUG]  [BUGGY]  char  sign  =  source.getStartIndex();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  sign  =  source.getStartIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  source.getStartIndex();	  int    sign    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
40	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  c);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  c);	  Number    im    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	41	None	replace
41	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  n);  [CE]  cannot  find  symbol  n  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  n);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  n);	  Number    im    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  n	41	None	replace
42	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  sign  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(startIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  sign	83	None	replace
43	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  [CE]  incomparable  types:  char  and  String  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incomparable  types:  char  and  String	83	None	replace
44	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  else  {  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  else  {  return  null;  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incomparable  types:  char  and  String	83	None	replace
45	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  char  and  String  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incomparable  types:  char  and  String	83	None	replace
46	[BUG]  [BUGGY]  String  sign  =  0L;  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  sign  =  0L;	  char    sign    =    0L;    	non-compiled	[CE]  incompatible  types	62	None	replace
47	[BUG]  [BUGGY]  Char  sign  =  0L;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Char  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Char  sign  =  0L;	  char    sign    =    0L;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
48	[BUG]  [BUGGY]  Character  sign  =  0L;  [CE]  incompatible  types  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Character  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Character  sign  =  0L;	  char    sign    =    0L;    	non-compiled	[CE]  incompatible  types	62	None	replace
49	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	124	None	replace
50	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	124	None	replace
51	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	124	None	replace
52	[BUG]  [BUGGY]  long  sign  =  0L;  int  n  =  parseNextCharacter(source,  pos);  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  int  n  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    int  n  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
53	[BUG]  [BUGGY]  long  sign  =  0L;  pos.setIndex(startIndex);  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  pos.setIndex(startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    pos.setIndex(startIndex);	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
54	[BUG]  [BUGGY]  long  sign  =  0L;  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  int  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    int  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
55	[BUG]  [BUGGY]  long  sign  =  0L;  pos.setIndex(startIndex);  return  null;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  pos.setIndex(startIndex);  return  null;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    pos.setIndex(startIndex);  return  null;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
56	[BUG]  [BUGGY]  long  sign  =  0L;  int  startIndex  =  source.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  int  startIndex  =  source.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    int  startIndex  =  source.getIndex();	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
57	[BUG]  [BUGGY]  im.setIndex(initialIndex);  [CE]  cannot  find  symbol  im  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  im.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	im.setIndex(initialIndex);	  re.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  im	110	None	replace
58	[BUG]  [BUGGY]  rep.setIndex(startIndex);  [CE]  cannot  find  symbol  rep  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  rep.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	rep.setIndex(startIndex);	  re.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  rep	110	None	replace
59	[BUG]  [BUGGY]  pos.setIndex(c);  return  null;  [CE]  cannot  find  symbol  sign  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(c);  return  null;  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(c);  return  null;	  if(c    ==    DEFAULT_IMAGINARY_CHARACTER    ||    c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(startIndex);    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  sign	107	None	replace
60	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  <  0)?  0  :  c;	  int    sign    =(startIndex    <    0)?    0    :    endIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	2	replace
61	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  c;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  c;	  int    sign    =(startIndex    <    0)?    0    :    endIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	2	replace
62	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  <  0)?  0  :  pos.getIndex();	  int    sign    =(startIndex    <    0)?    0    :    endIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	2	replace
63	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  pos.getIndex();  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  pos.getIndex();	  int    sign    =(startIndex    <    0)?    0    :    endIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	2	replace
64	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  n;  [CE]  cannot  find  symbol  n  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  n;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  n;	  int    sign    =(startIndex    <    0)?    0    :    endIndex;    	non-compiled	[CE]  cannot  find  symbol  n	36	None	replace
65	[BUG]  [BUGGY]  char  re  =  parseNextCharacter(source,  pos,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  re  =  parseNextCharacter(source,  pos,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  re  =  parseNextCharacter(source,  pos,  c);	  int    re    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	114	None	replace
66	[BUG]  [BUGGY]  int  re  =  parseNextCharacter(source,  startIndex,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  re  =  parseNextCharacter(source,  startIndex,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  re  =  parseNextCharacter(source,  startIndex,  c);	  int    re    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	114	None	replace
67	[BUG]  [BUGGY]  double  re  =  parseNextCharacter(source,  pos,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  re  =  parseNextCharacter(source,  pos,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  re  =  parseNextCharacter(source,  pos,  c);	  int    re    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	114	None	replace
68	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  sign  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(initialIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  sign	90	None	replace
69	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  [CE]  incomparable  types:  char  and  String  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incomparable  types:  char  and  String	90	None	replace
70	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(endIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  endIndex	90	None	replace
71	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(c);  [CE]  cannot  find  symbol  sign  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(startIndex);  pos.setIndex(c);	          pos.setIndex(initialIndex);    pos.setIndex(c);    	non-compiled	[CE]  cannot  find  symbol  sign	25	None	replace
72	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  pos.setIndex(c);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setStartIndex(startIndex);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setStartIndex(startIndex);  pos.setIndex(c);	          pos.setIndex(initialIndex);    pos.setIndex(c);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
73	[BUG]  [BUGGY]  char  re  =  parseNextCharacter(source,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  re  =  parseNextCharacter(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  re  =  parseNextCharacter(source,  startIndex);	  char    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	9	None	replace
74	[BUG]  [BUGGY]  String  re  =  parseNextCharacter(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  re  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  re  =  parseNextCharacter(source,  pos);	  char    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	9	None	replace
75	[BUG]  [BUGGY]  char  re  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  re  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  re  =  parseNextCharacter(source,  pos,  startIndex);	  char    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	9	None	replace
76	[BUG]  [BUGGY]  char  re  =  parsePreviousCharacter(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  re  =  parsePreviousCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  re  =  parsePreviousCharacter(source,  pos);	  char    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	9	None	replace
77	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  source.getEndIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  source.getEndIndex())?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  source.getEndIndex())?  0  :  startIndex;	  int    sign    =(endIndex    <    source.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
78	[BUG]  [BUGGY]  int  sign  =(startIndex  <  source.getEndIndex())?  0  :  endIndex;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  source.getEndIndex())?  0  :  endIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  source.getEndIndex())?  0  :  endIndex;	  int    sign    =(endIndex    <    source.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
79	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getEndIndex())?  0  :  initialIndex;  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getEndIndex())?  0  :  initialIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  pos.getEndIndex())?  0  :  initialIndex;	  int    sign    =(initialIndex    <    pos.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
80	[BUG]  [BUGGY]  double  re  =  parseNextCharacter(source,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  re  =  parseNextCharacter(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  re  =  parseNextCharacter(source,  startIndex);	  double    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
81	[BUG]  [BUGGY]  double  re  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  re  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  re  =  parseNextCharacter(source,  pos,  startIndex);	  double    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
82	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getStartIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getStartIndex())?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  pos.getStartIndex())?  0  :  startIndex;	  int    sign    =(endIndex    <    pos.getStartIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
83	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  pos.getStartIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  pos.getStartIndex())?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  pos.getStartIndex())?  0  :  startIndex;	  int    sign    =(endIndex    <    pos.getStartIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
84	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getStartIndex())?  0  :  endIndex;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getStartIndex())?  0  :  endIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  pos.getStartIndex())?  0  :  endIndex;	  int    sign    =(endIndex    <    pos.getStartIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
85	[BUG]  [BUGGY]  int  sign  =(c  <  pos.getStartIndex())?  0  :  pos.getStartIndex();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(c  <  pos.getStartIndex())?  0  :  pos.getStartIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(c  <  pos.getStartIndex())?  0  :  pos.getStartIndex();	  int    sign    =(endIndex    <    pos.getStartIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
86	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(initialIndex);  int  startIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(startIndex);    int    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	87	None	replace
87	[BUG]  [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]          AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(endIndex);  int  startIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(startIndex);    int    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	87	None	replace
88	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(startIndex);    int    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	87	None	replace
89	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  startIndex,  pos);	  Integer    re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	45	None	replace
90	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  startIndex,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  startIndex,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  pos,  startIndex,  c);	  Integer    re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	45	None	replace
91	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  startIndex  +  1);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  startIndex  +  1);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  pos,  startIndex  +  1);	  Integer    re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	45	None	replace
92	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  endIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  pos,  endIndex);	  Integer    re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	45	None	replace
93	[BUG]  [BUGGY]  int  sign  =(endIndex  <  source.getStartIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  source.getStartIndex())?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  source.getStartIndex())?  0  :  startIndex;	  int    sign    =(startIndex    <    source.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	26	None	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	89	24	add
95	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	89	24	add
96	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(endIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(endIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    pos.setIndex(endIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  cannot  find  symbol  endIndex	89	None	add
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	89	24	add
98	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	89	24	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	89	24	add
100	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	89	24	add
101	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    pos.setIndex(endIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	89	None	add
102	[BUG]  [BUGGY]  int  sign  =  startIndex  -  1;  int  sign  =  startIndex  -  1;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex  -  1;  int  sign  =  startIndex  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex    -    1;    int  sign  =  startIndex  -  1;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	85	None	add
103	[BUG]  [BUGGY]  int  sign  =  startIndex  -  1;  int  startIndex  =  startIndex  -  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex  -  1;  int  startIndex  =  startIndex  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex    -    1;    int  startIndex  =  startIndex  -  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	85	None	add
104	[BUG]  [BUGGY]  int  sign  =  startIndex  -  1;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex  -  1;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex    -    1;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	85	None	add
105	[BUG]  [BUGGY]  int  sign  =  startIndex  -  1;  char  c  =  parseNextCharacter(source,  pos);  int  startIndex  =  startIndex  -  1;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex  -  1;  char  c  =  parseNextCharacter(source,  pos);  int  startIndex  =  startIndex  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex    -    1;    char  c  =  parseNextCharacter(source,  pos);  int  startIndex  =  startIndex  -  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	85	None	add
106	[BUG]  [BUGGY]  int  sign  =  startIndex  -  1;  Integer  startIndex  =  pos.getIndex();  int  sign  =  startIndex  -  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex  -  1;  Integer  startIndex  =  pos.getIndex();  int  sign  =  startIndex  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex    -    1;    Integer  startIndex  =  pos.getIndex();  int  sign  =  startIndex  -  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	85	None	add
107	[BUG]  [BUGGY]  String  sign  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  sign  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  sign  =  parseNextCharacter(source,  pos);	  int    sign    =    1;    char    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  incompatible  types	80	None	replace
108	[BUG]  [BUGGY]  int  sign  =  0;  String  sign  =  parseNextCharacter(source,  pos);  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  0;  String  sign  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  0;  String  sign  =  parseNextCharacter(source,  pos);	  int    sign    =    1;    char    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	80	None	replace
109	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(endIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	2	None	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
111	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	2	24	add
112	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	2	None	add
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	2	26	add
114	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	2	26	add
115	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(n);  pos.setIndex(n);  [CE]  cannot  find  symbol  n  [FE]            AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(n);  pos.setIndex(n);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(n);  pos.setIndex(n);	  	non-compiled	[CE]  cannot  find  symbol  n	2	None	add
116	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parseNextCharacter(source,  startIndex,  pos);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	60	None	replace
117	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  n  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  n  =  parseNextCharacter(source,  pos,  startIndex);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	60	None	replace
118	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  n  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  n  =  parseNextCharacter(source,  startIndex,  pos);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	60	None	replace
119	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex,  c);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parseNextCharacter(source,  pos,  startIndex,  c);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	60	None	replace
120	[BUG]  [BUGGY]  String  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  sign  =  DEFAULT_IMAGINARY_CHARACTER;	  String    sign    =    0;    	non-compiled	[CE]  incompatible  types	69	None	replace
121	[BUG]  [BUGGY]  String  sign  =  DEFAULT_IMAGINARY_CHARACTER.substring(startIndex,  pos.getIndex());  [CE]  incompatible  types  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  sign  =  DEFAULT_IMAGINARY_CHARACTER.substring(startIndex,  pos.getIndex());  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  sign  =  DEFAULT_IMAGINARY_CHARACTER.substring(startIndex,  pos.getIndex());	  String    sign    =    0;    	non-compiled	[CE]  incompatible  types	69	None	replace
122	[BUG]  [BUGGY]  int  startIndex  =  pos.getStartIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =  pos.getStartIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =  pos.getStartIndex();	  int    sign    =    startIndex;    int    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	48	None	replace
123	[BUG]  [BUGGY]  int  startIndex  =  source.length();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =  source.length();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =  source.length();	  int    sign    =    startIndex;    int    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	48	None	replace
124	[BUG]  [BUGGY]  int  startIndex  =  pos.getEndIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =  pos.getEndIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =  pos.getEndIndex();	  int    sign    =    startIndex;    int    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	48	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	18	26	add
126	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	18	26	add
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	18	26	add
128	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	18	26	add
129	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	18	None	add
130	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(endIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  endIndex  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(endIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(endIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	18	None	add
131	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setStartIndex(startIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setStartIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setStartIndex(startIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
132	[BUG]  [BUGGY]  pos.setIndex(endIndex  +  1);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(endIndex  +  1);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(endIndex  +  1);	  pos.setIndex(startIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  endIndex	94	None	replace
133	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  sign  [FE]          AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(initialIndex  +  1);	  pos.setIndex(startIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  sign	94	None	replace
134	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	Integer  sign  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Integer    sign    =(startIndex    <    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	2	replace
135	[BUG]  [BUGGY]  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  sign  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Integer    sign    =(startIndex    <    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	2	replace
136	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  sign  =(initialIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	Integer  sign  =(initialIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Integer    sign    =(startIndex    <    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	2	replace
137	[BUG]  [BUGGY]  Integer  sign  =(initialIndex  <  0)?  0  :  startIndex;  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  sign  =(initialIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  sign  =(initialIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Integer    sign    =(startIndex    <    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	2	replace
138	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  startIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  startIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  0)?  0  :  startIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Integer    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	76	None	replace
139	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]          AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  }	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	88	None	replace
140	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]            AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	88	None	replace
141	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  startIndex  =  pos.getIndex();	  int    sign    =    startIndex;    Integer    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
142	[BUG]  [BUGGY]  Integer  startIndex  =  c;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  startIndex  =  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  startIndex  =  c;	  int    sign    =    startIndex;    Integer    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
143	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getStartIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  startIndex  =  pos.getStartIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  startIndex  =  pos.getStartIndex();	  int    sign    =    startIndex;    Integer    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
144	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  1  :  0;  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  1  :  0;	  int    sign    =(startIndex    <    0)?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol  endIndex	119	None	replace
145	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(initialIndex  <  0)?  1  :  0;	  int    sign    =(startIndex    <    0)?    1    :    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	119	2	replace
146	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  0)?  1  :  0;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  0)?  1  :  0;	  int    sign    =(startIndex    <    0)?    1    :    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	119	2	replace
147	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  >=  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  >=  0)?  1  :  0;	  int    sign    =(startIndex    <    0)?    1    :    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	119	2	replace
148	[BUG]  [BUGGY]  int  sign  =(startIndex  >=  0)?  1  :  0;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  >=  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  >=  0)?  1  :  0;	  int    sign    =(startIndex    <    0)?    1    :    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	119	2	replace
149	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	96	None	add
150	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  Integer  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  Integer  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    Integer  sign  =(startIndex  <  pos.getIndex())?  1  :  0;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	96	None	add
151	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  int  startIndex  =(startIndex  <  pos.getIndex())?  1  :  0;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  int  startIndex  =(startIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    int  startIndex  =(startIndex  <  pos.getIndex())?  1  :  0;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	96	None	add
152	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	96	None	add
153	[BUG]  [BUGGY]  int  imIndex  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  imIndex  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  imIndex  =  parseNextCharacter(source,  pos,  startIndex);	  int    imIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	73	None	replace
154	[BUG]  [BUGGY]  int  imIndex  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  imIndex  =  parseNextCharacter(source,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  imIndex  =  parseNextCharacter(source,  startIndex);	  int    imIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	73	None	replace
155	[BUG]  [BUGGY]  int  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  initialIndex  =  parseNextCharacter(source,  pos);	  int    imIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	73	None	replace
156	[BUG]  [BUGGY]  int  sign  =  2;  int  sign  =  2;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  2;  int  sign  =  2;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    2;    int  sign  =  2;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
157	[BUG]  [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    2;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
158	[BUG]  [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos);  startIndex  =  pos.getIndex();  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos);  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    2;    char  c  =  parseNextCharacter(source,  pos);  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
159	[BUG]  [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  2;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  2;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    2;    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  2;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
160	[BUG]  [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos);  sign  =  2;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos);  sign  =  2;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    2;    char  c  =  parseNextCharacter(source,  pos);  sign  =  2;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
161	[BUG]  [BUGGY]  Character  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Character  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Character  sign  =  DEFAULT_IMAGINARY_CHARACTER;	  Character    sign    =    0;    	non-compiled	[CE]  incompatible  types	71	None	replace
162	[BUG]  [BUGGY]  Character  sign  =  re.charAt(0);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Character  sign  =  re.charAt(0);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Character  sign  =  re.charAt(0);	  Character    sign    =    0;    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
163	[BUG]  [BUGGY]  Character  sign  =  re.charAt(startIndex);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Character  sign  =  re.charAt(startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Character  sign  =  re.charAt(startIndex);	  Character    sign    =    0;    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
164	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	101	24	add
165	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	101	24	add
166	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	101	24	add
167	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	101	24	add
168	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	101	24	add
169	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	101	24	add
170	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	101	24	add
171	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	101	24	add
172	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(n);  pos.setIndex(Integer.MAX_VALUE);  [CE]  cannot  find  symbol  n  [FE]            StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(n);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(n);  pos.setIndex(Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol  n	101	None	add
173	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  c);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex,  c);	  Number    im    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	123	None	replace
174	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  c,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  c,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  c,  startIndex);	  Number    im    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	123	None	replace
175	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	123	None	replace
176	[BUG]  [BUGGY]  String  n  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  n  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  n  =  parseNextCharacter(source,  pos);	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  incompatible  types	59	None	replace
177	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  n  =  parseNextCharacter(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  n  =  parseNextCharacter(source,  startIndex);	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	59	None	replace
178	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  startIndex;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parseNextCharacter(source,  pos);  int  sign  =  startIndex;	  int    sign    =    startIndex;    char    c    =    parseNextCharacter(source,    pos);    int    sign    =    startIndex;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	112	None	replace
179	[BUG]  [BUGGY]  n  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  n  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  n  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	n  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    char    c    =    parseNextCharacter(source,    pos);    int    sign    =    startIndex;    	non-compiled	[CE]  cannot  find  symbol  n	112	None	replace
180	[BUG]  [BUGGY]  int  n  =  parsePreviousCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  n  =  parsePreviousCharacter(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parsePreviousCharacter(source,  startIndex);	  int    n    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
181	[BUG]  [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parsePreviousCharacter(source,  pos,  startIndex);	  int    n    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
182	[BUG]  [BUGGY]  char  n  =  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  n  =  parsePreviousCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  n  =  parsePreviousCharacter(source,  pos);	  int    n    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
183	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getEndIndex())?  0  :  endIndex;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getEndIndex())?  0  :  endIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  pos.getEndIndex())?  0  :  endIndex;	  int    sign    =(endIndex    <    pos.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
184	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	6	None	replace
185	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  else  {  startIndex  =  pos.getIndex();  }  [CE]  incomparable  types:  char  and  String  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  else  {  startIndex  =  pos.getIndex();  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  else  {  startIndex  =  pos.getIndex();  }	          pos.setIndex(startIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	6	None	replace
186	[BUG]  [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(startIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	81	None	replace
187	[BUG]  [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  initialIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	81	None	replace
188	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  initialIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  initialIndex  =  pos.getIndex();	  pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	68	None	replace
189	[BUG]  [BUGGY]  int  sign  =  pos.getIndex();  int  sign  =  pos.getIndex();  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex();  int  sign  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    pos.getIndex();    int  sign  =  pos.getIndex();	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	55	None	add
190	[BUG]  [BUGGY]  int  sign  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    pos.getIndex();    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	55	None	add
191	[BUG]  [BUGGY]  int  sign  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos.getIndex());  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    pos.getIndex();    char  c  =  parseNextCharacter(source,  pos.getIndex());	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	55	None	add
192	[BUG]  [BUGGY]  int  sign  =  pos.getIndex();  Integer  sign  =  pos.getIndex();  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex();  Integer  sign  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    pos.getIndex();    Integer  sign  =  pos.getIndex();	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	55	None	add
193	[BUG]  [BUGGY]  int  sign  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex();  int  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    pos.getIndex();    int  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	55	None	add
194	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  startIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Int    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	78	None	replace
195	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  startIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  startIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  0)?  0  :  startIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Int    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
196	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  endIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Int    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	78	None	replace
197	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
198	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex  +  1;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    int  startIndex  =(startIndex  <  0)?  0  :  startIndex  +  1;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
199	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    Integer  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
200	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
201	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  n);  [CE]  cannot  find  symbol  n  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  n);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex,  n);	  Number    im    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  n	40	None	replace
202	[BUG]  [BUGGY]  int  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  c  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    char    c    =    parseNextCharacter(source,    pos);    int    startIndex    =    startIndex;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	113	None	replace
203	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  int  sign  =  parseNextCharacter(source,  pos);  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  int  sign  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    parseNextCharacter(source,    pos);    int  sign  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	53	None	add
204	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    parseNextCharacter(source,    pos);    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	53	None	add
205	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  Int  sign  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  Int  sign  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    parseNextCharacter(source,    pos);    Int  sign  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
206	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  int  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  parseNextCharacter(source,  pos);  int  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    parseNextCharacter(source,    pos);    int  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	53	None	add
207	[BUG]  [BUGGY]  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    startIndex    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	75	None	replace
208	[BUG]  [BUGGY]  int  startIndex  =(initialIndex  <  0)?  0  :  startIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =(initialIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =(initialIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    startIndex    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	75	None	replace
209	[BUG]  [BUGGY]  int  startIndex  =(endIndex  <  0)?  0  :  startIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =(endIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =(endIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    startIndex    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	75	None	replace
210	[BUG]  [BUGGY]  int  startIndex  =(endIndex  <  0)?  0  :  endIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =(endIndex  <  0)?  0  :  endIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =(endIndex  <  0)?  0  :  endIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    startIndex    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	75	None	replace
211	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  >=  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  >=  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    sign    =(startIndex    >=    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	109	2	replace
212	[BUG]  [BUGGY]  int  sign  =(startIndex  >=  0)?  0  :  startIndex;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  >=  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  >=  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    sign    =(startIndex    >=    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	109	2	replace
213	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(initialIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    sign    =(startIndex    >=    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	109	2	replace
214	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  startIndex;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    sign    =(startIndex    >=    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	109	2	replace
215	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  >=  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(initialIndex  >=  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    sign    =(startIndex    >=    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	109	2	replace
216	[BUG]  [BUGGY]  int  sign  =(initialIndex  >=  0)?  0  :  startIndex;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  >=  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  >=  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    sign    =(startIndex    >=    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	109	2	replace
217	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	double  sign  =  0;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
218	[BUG]  [BUGGY]  double  sign  =  0;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  sign  =  0;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
219	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0x7F;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	double  sign  =  0x7F;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
220	[BUG]  [BUGGY]  double  sign  =  0x7F;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0x7F;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  sign  =  0x7F;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
221	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	double  sign  =  1;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
222	[BUG]  [BUGGY]  double  sign  =  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  sign  =  1;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
223	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  sign  =  0;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  sign  =  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parseNextCharacter(source,  pos);  sign  =  0;	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    sign    =    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	16	None	replace
224	[BUG]  [BUGGY]  int  sign  =  0;  char  c  =  parseNextCharacter(source,  pos);  sign  =  0;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  0;  char  c  =  parseNextCharacter(source,  pos);  sign  =  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  0;  char  c  =  parseNextCharacter(source,  pos);  sign  =  0;	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    sign    =    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	16	None	replace
225	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parseNextCharacter(source,  pos);  sign  =  1;	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    sign    =    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	16	None	replace
226	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [CE]  cannot  find  symbol  sign  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sign	105	None	replace
227	[BUG]  [BUGGY]  int  sign  =(startIndex  <  source.getStartIndex())?  1  :  0;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  source.getStartIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  source.getStartIndex())?  1  :  0;	  int    sign    =(startIndex    <    pos.getStartIndex())?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
228	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  pos.getStartIndex())?  1  :  0;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  pos.getStartIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  pos.getStartIndex())?  1  :  0;	  int    sign    =(startIndex    <    pos.getStartIndex())?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
229	[BUG]  [BUGGY]  int  sign  =(endIndex  <  pos.getStartIndex())?  1  :  0;  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  pos.getStartIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  pos.getStartIndex())?  1  :  0;	  int    sign    =(startIndex    <    pos.getStartIndex())?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol  endIndex	98	None	replace
230	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  -1  :  1;  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  -1  :  1;	  int    sign    =(startIndex    <    0)?    -1    :    1;    	non-compiled	[CE]  cannot  find  symbol  endIndex	121	None	replace
231	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(c  <  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(c  <  0)?  -1  :  1;	  int    sign    =(startIndex    <    0)?    -1    :    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	replace
232	[BUG]  [BUGGY]  int  sign  =(c  <  0)?  -1  :  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(c  <  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(c  <  0)?  -1  :  1;	  int    sign    =(startIndex    <    0)?    -1    :    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	replace
233	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(initialIndex  <  0)?  -1  :  1;	  int    sign    =(startIndex    <    0)?    -1    :    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	replace
234	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  0)?  -1  :  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  0)?  -1  :  1;	  int    sign    =(startIndex    <    0)?    -1    :    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	replace
235	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	91	None	replace
236	[BUG]  [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  endIndex  [FE]                AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(endIndex);  int  startIndex  =  pos.getIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  endIndex	91	None	replace
237	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	21	None	replace
238	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  startIndex  =  pos.getIndex();  }  [CE]  incomparable  types:  char  and  String  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  startIndex  =  pos.getIndex();  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  startIndex  =  pos.getIndex();  }	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	21	None	replace
239	[BUG]  [BUGGY]  Integer  sign  =  0L;  [CE]  incompatible  types  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  sign  =  0L;	  long    sign    =    0L;    	non-compiled	[CE]  incompatible  types	66	None	replace
240	[BUG]  [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(c);  [CE]  cannot  find  symbol  endIndex  [FE]              AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(endIndex);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(endIndex);  pos.setIndex(c);	          pos.setIndex(startIndex);    pos.setIndex(n);    	non-compiled	[CE]  cannot  find  symbol  endIndex	7	None	replace
241	[BUG]  [BUGGY]  int  sign  =  0;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  0;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  0;  char  c  =  parseNextCharacter(source,  pos);	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
242	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parseNextCharacter(source,  startIndex);	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
243	[BUG]  [BUGGY]  Char  sign  =  0x7F;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Char  sign  =  0x7F;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Char  sign  =  0x7F;	  Char    sign    =    0;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
244	[BUG]  [BUGGY]  Char  sign  =  0xFFFF;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Char  sign  =  0xFFFF;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Char  sign  =  0xFFFF;	  Char    sign    =    0;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
245	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  endIndex);	  Number    im    =    parseNextCharacter(source,    pos,    endIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	92	None	replace
246	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  initialIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  initialIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  initialIndex,  pos);	  Number    im    =    parseNextCharacter(source,    pos,    initialIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	42	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	20	24	add
248	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	20	24	add
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	20	24	add
250	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	20	24	add
251	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(endIndex);  pos.setIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	20	None	add
252	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	20	None	add
253	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	20	None	add
254	[BUG]  [BUGGY]  char  sign  =  c;  [CE]  possible  loss  of  precision  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  sign  =  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  c;	  int    sign    =    c;    	non-compiled	[CE]  possible  loss  of  precision	117	None	replace
255	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  startIndex,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextCharacter(source,  startIndex,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  startIndex,  c);	  Integer    re    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	99	None	replace
256	[BUG]  [BUGGY]  Number  re  =  parseNextCharacter(source,  pos,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  re  =  parseNextCharacter(source,  pos,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  re  =  parseNextCharacter(source,  pos,  c);	  Integer    re    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	99	None	replace
257	[BUG]  [BUGGY]  int  sign  =(startIndex  <  source.getStartIndex())?  0  :  endIndex;  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  source.getStartIndex())?  0  :  endIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  source.getStartIndex())?  0  :  endIndex;	  int    sign    =(startIndex    <    source.getStartIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
258	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  source.getStartIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  source.getStartIndex())?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  source.getStartIndex())?  0  :  startIndex;	  int    sign    =(startIndex    <    source.getStartIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
259	[BUG]  [BUGGY]  double  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
260	[BUG]  [BUGGY]  double  sign  =  0L;  double  sign  =  0L;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  double  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    double  sign  =  0L;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
261	[BUG]  [BUGGY]  double  sign  =  0L;  int  n  =  parseNextCharacter(source,  pos);  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  int  n  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    int  n  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
262	[BUG]  [BUGGY]  double  sign  =  0L;  pos.setIndex(startIndex);  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  pos.setIndex(startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    pos.setIndex(startIndex);	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
263	[BUG]  [BUGGY]  double  sign  =  0L;  pos.setIndex(startIndex);  double  sign  =  0L;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  pos.setIndex(startIndex);  double  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    pos.setIndex(startIndex);  double  sign  =  0L;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
264	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos,  c);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  pos,  c);	  Number    im    =    parseNextCharacter(source,    startIndex,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	43	None	replace
265	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    startIndex,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	43	None	replace
266	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex  +  1;  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  startIndex  +  1;	  int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    	non-compiled	[CE]  cannot  find  symbol  endIndex	38	None	replace
267	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex  +  1;  [CE]  cannot  find  symbol  endIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  endIndex  +  1;	  int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    	non-compiled	[CE]  cannot  find  symbol  endIndex	38	None	replace
268	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  >=  0)?  0  :  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  >=  0)?  0  :  startIndex  +  1;	  int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	38	2	replace
269	[BUG]  [BUGGY]  int  sign  =(startIndex  >=  0)?  0  :  startIndex  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  >=  0)?  0  :  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  >=  0)?  0  :  startIndex  +  1;	  int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	38	2	replace
270	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    int    sign    =    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
271	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  1;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parseNextCharacter(source,  pos);  int  sign  =  1;	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    int    sign    =    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
272	[BUG]  [BUGGY]  Integer  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  startIndex  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    Integer    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	50	None	replace
273	[BUG]  [BUGGY]  char  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  startIndex  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    Integer    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	50	None	replace
274	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(endIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(endIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(endIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
275	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex;  char  c  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  endIndex;  char  c  =  parseNextCharacter(source,  pos);	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	77	None	replace
276	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  0)?  0  :  startIndex;  char  c  =  parseNextCharacter(source,  pos);	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	77	None	replace
277	[BUG]  [BUGGY]  char  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  startIndex  =  pos.getIndex();	  int    sign    =    startIndex;    Integer    startIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
278	[BUG]  [BUGGY]  pos.setEndIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]          AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setEndIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setEndIndex(endIndex);	  pos.setEndIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	31	None	replace
279	[BUG]  [BUGGY]  pos.setEndIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setEndIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setEndIndex(initialIndex);	  pos.setEndIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
280	[BUG]  [BUGGY]  int  re  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  re  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  re  =  parseNextCharacter(source,  startIndex,  pos);	  int    re    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	10	None	replace
281	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  initialIndex;  String  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  initialIndex;  String  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  0)?  0  :  initialIndex;  String  startIndex  =  parseNextCharacter(source,  pos);	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    char    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	79	None	replace
282	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  String  startIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  String  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  endIndex;  String  startIndex  =  parseNextCharacter(source,  pos);	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    char    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	79	None	replace
283	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  int  sign  =(startIndex  <  0)?  1  :  0;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  int  sign  =(startIndex  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    1    :    0;    int  sign  =(startIndex  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	118	None	add
284	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  int  startIndex  =(startIndex  <  0)?  1  :  0;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  int  startIndex  =(startIndex  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    1    :    0;    int  startIndex  =(startIndex  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	118	None	add
285	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  Integer  sign  =(startIndex  <  0)?  1  :  0;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  Integer  sign  =(startIndex  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    1    :    0;    Integer  sign  =(startIndex  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	118	None	add
286	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    1    :    0;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	118	None	add
287	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  endIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextCharacter(source,  endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  endIndex);	  Integer    re    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
288	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]            AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(InitialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(startIndex);  pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  InitialIndex	22	None	replace
289	[BUG]  [BUGGY]  pos.setStartIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setStartIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setStartIndex(endIndex);	  pos.setStartIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	30	None	replace
290	[BUG]  [BUGGY]  pos.setStartIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setStartIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setStartIndex(initialIndex);	  pos.setStartIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
291	[BUG]  [BUGGY]  String  sign  =  1;  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  sign  =  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  sign  =  1;	  char    sign    =    1;    	non-compiled	[CE]  incompatible  types	32	None	replace
292	[BUG]  [BUGGY]  Character  sign  =  1;  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Character  sign  =  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Character  sign  =  1;	  char    sign    =    1;    	non-compiled	[CE]  incompatible  types	32	None	replace
293	[BUG]  [BUGGY]  char  sign  =  1L;  [CE]  possible  loss  of  precision  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  sign  =  1L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  1L;	  char    sign    =    1;    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
294	[BUG]  [BUGGY]  Char  sign  =  1;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Char  sign  =  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Char  sign  =  1;	  char    sign    =    1;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
295	[BUG]  [BUGGY]  int  sign  =  0;  char  c  =  parseNextCharacter(source,  startIndex);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  0;  char  c  =  parseNextCharacter(source,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  0;  char  c  =  parseNextCharacter(source,  startIndex);	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	17	None	replace
296	[BUG]  [BUGGY]  int  c  =  parseNextCharacter(source,  startIndex);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  c  =  parseNextCharacter(source,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  c  =  parseNextCharacter(source,  startIndex);	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	17	None	replace
297	[BUG]  [BUGGY]  int  sign  =(startIndex  <  source.getIndex())?  1  :  0;  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  source.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  source.getIndex())?  1  :  0;	  int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
298	[BUG]  [BUGGY]  int  sign  =(endIndex  <  pos.getIndex())?  1  :  0;  [CE]  cannot  find  symbol  endIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  pos.getIndex())?  1  :  0;	  int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol  endIndex	97	None	replace
299	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(initialIndex  <  pos.getIndex())?  1  :  0;	  int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	97	2	replace
300	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  pos.getIndex())?  1  :  0;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  pos.getIndex())?  1  :  0;	  int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	97	2	replace
301	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  c  =  parseNextCharacter(source,  pos);	  char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	72	None	replace
302	[BUG]  [BUGGY]  char  c  =  parsePreviousCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  c  =  parsePreviousCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parsePreviousCharacter(source,  pos);	  char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	72	None	replace
303	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex,  c);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parseNextCharacter(source,  startIndex,  c);	  int    n    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	58	None	replace
304	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setStartIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setStartIndex(startIndex);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
305	[BUG]  [BUGGY]  n.setIndex(startIndex);  n.setIndex(initialIndex);  [CE]  cannot  find  symbol  n  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  n.setIndex(startIndex);  n.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	n.setIndex(startIndex);  n.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	19	None	replace
306	[BUG]  [BUGGY]  int  sign  =  0;  char  c  =  parsePreviousCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  0;  char  c  =  parsePreviousCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  0;  char  c  =  parsePreviousCharacter(source,  pos);	  int    sign    =    1;    char    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
307	[BUG]  [BUGGY]  int  sign  =  1;  char  c  =  parsePreviousCharacter(source,  startIndex);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  1;  char  c  =  parsePreviousCharacter(source,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  1;  char  c  =  parsePreviousCharacter(source,  startIndex);	  int    sign    =    1;    char    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
308	[BUG]  [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parsePreviousCharacter(source,  startIndex);	  Integer    re    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
309	[BUG]  [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  pos,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parsePreviousCharacter(source,  pos,  startIndex);	  Integer    re    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(startIndex);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(startIndex);  pos.setIndex(c);	  	compilable	  [FE]  AssertionFailedError  	24	26	add
311	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(startIndex);  pos.setIndex(c);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(startIndex);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(startIndex);  pos.setIndex(c);	  	compilable	  [FE]  AssertionFailedError  	24	26	add
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(initialIndex);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(initialIndex);  pos.setIndex(c);	  	compilable	  [FE]  AssertionFailedError  	24	26	add
313	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(initialIndex);  pos.setIndex(c);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(initialIndex);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(initialIndex);  pos.setIndex(c);	  	compilable	  [FE]  AssertionFailedError  	24	26	add
314	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(endIndex);  pos.setIndex(c);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(endIndex);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(endIndex);  pos.setIndex(c);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	24	None	add
315	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(n);  pos.setIndex(c);  [CE]  cannot  find  symbol  n  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(n);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(n);  pos.setIndex(c);	  	non-compiled	[CE]  cannot  find  symbol  n	24	None	add
316	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(id);  pos.setIndex(c);  [CE]  cannot  find  symbol  id  [FE]            AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(id);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(id);  pos.setIndex(c);	  	non-compiled	[CE]  cannot  find  symbol  id	24	None	add
317	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(startIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	5	26	add
318	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	5	26	add
319	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(endIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(endIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(initialIndex);    pos.setIndex(endIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	5	None	add
320	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setStartIndex(startIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setStartIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(initialIndex);    pos.setStartIndex(startIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
321	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]          AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(InitialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	5	None	add
322	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);  [CE]  cannot  find  symbol  sign  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(startIndex);  pos.setIndex(Integer.MAX_VALUE);	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sign	102	None	replace
323	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [CE]  cannot  find  symbol  sign  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sign	102	None	replace
324	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	104	24	add
325	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	104	24	add
326	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	104	24	add
327	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(startIndex);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	104	24	add
328	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	104	24	add
329	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(Integer.MIN_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	104	24	add
330	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(n);  pos.setIndex(Integer.MIN_VALUE);  [CE]  cannot  find  symbol  n  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(n);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(n);  pos.setIndex(Integer.MIN_VALUE);	  	non-compiled	[CE]  cannot  find  symbol  n	104	None	add
331	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(id);  pos.setIndex(Integer.MIN_VALUE);  [CE]  cannot  find  symbol  id  [FE]            StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(id);  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(id);  pos.setIndex(Integer.MIN_VALUE);	  	non-compiled	[CE]  cannot  find  symbol  id	104	None	add
332	[BUG]  [BUGGY]  Integer  im  =  parseNextInteger(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  im  =  parseNextInteger(source,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  im  =  parseNextInteger(source,  startIndex);	  Integer    im    =    parseNextInteger(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
333	[BUG]  [BUGGY]  Integer  im  =  parseNextInteger(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  im  =  parseNextInteger(source,  pos,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  im  =  parseNextInteger(source,  pos,  startIndex);	  Integer    im    =    parseNextInteger(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
334	[BUG]  [BUGGY]  Integer  im  =  parseNextInteger(source,  pos.intValue());  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  im  =  parseNextInteger(source,  pos.intValue());  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  im  =  parseNextInteger(source,  pos.intValue());	  Integer    im    =    parseNextInteger(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
335	[BUG]  [BUGGY]  Integer  im  =  parseNextInteger(startIndex,  pos);  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  im  =  parseNextInteger(startIndex,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  im  =  parseNextInteger(startIndex,  pos);	  Integer    im    =    parseNextInteger(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
336	[BUG]  [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  startIndex,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  startIndex,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  re  =  parseNextCharacter(source,  pos,  startIndex,  c);	  int    re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
337	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  Int  sign  =(startIndex  <  0)?  1  :  0;  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  Int  sign  =(startIndex  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    1    :    0;    Int  sign  =(startIndex  <  0)?  1  :  0;	  	non-compiled	[CE]  cannot  find  symbol	118	None	add
338	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  char  sign  =(startIndex  <  0)?  1  :  0;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  char  sign  =(startIndex  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    1    :    0;    char  sign  =(startIndex  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	118	None	add
339	[BUG]  [BUGGY]  String  sign  =  DEFAULT_IMAGINARY_CHARACTER.charAt(0);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  sign  =  DEFAULT_IMAGINARY_CHARACTER.charAt(0);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  sign  =  DEFAULT_IMAGINARY_CHARACTER.charAt(0);	  String    sign    =    0;    	non-compiled	[CE]  incompatible  types	69	None	replace
340	[BUG]  [BUGGY]  Char  n  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Char  n  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Char  n  =  parseNextCharacter(source,  pos);	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
341	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0.0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	double  sign  =  0.0;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
342	[BUG]  [BUGGY]  double  sign  =  0.0;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0.0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  sign  =  0.0;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
343	[BUG]  [BUGGY]  int  startIndex  =  startIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =  startIndex;	  int    sign    =    startIndex;    int    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	48	None	replace
344	[BUG]  [BUGGY]  int  startIndex  =  source.indexOf(c);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =  source.indexOf(c);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =  source.indexOf(c);	  int    sign    =    startIndex;    int    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	48	None	replace
345	[BUG]  [BUGGY]  int  sign  =  n;  Integer  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  n  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  n;  Integer  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  n;  Integer  startIndex  =  pos.getIndex();	  int    sign    =    startIndex;    Integer    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  n	51	None	replace
346	[BUG]  [BUGGY]  int  sign  =  pos.getIndex();  Integer  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex();  Integer  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  pos.getIndex();  Integer  startIndex  =  pos.getIndex();	  int    sign    =    startIndex;    Integer    startIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
347	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    pos.setIndex(endIndex);  pos.setIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	89	None	add
348	[BUG]  [BUGGY]  double  sign  =  0L;  Double  sign  =  0L;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  Double  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    Double  sign  =  0L;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
349	[BUG]  [BUGGY]  double  sign  =  0L;  pos.setIndex(startIndex);  return  null;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  pos.setIndex(startIndex);  return  null;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    pos.setIndex(startIndex);  return  null;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
350	[BUG]  [BUGGY]  double  sign  =  0L;  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  int  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    int  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
351	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  endIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  endIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  endIndex  =  pos.getIndex();	  	non-compiled	[CE]  cannot  find  symbol  endIndex	82	None	add
352	[BUG]  [BUGGY]  boolean  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  boolean  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	boolean  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  incompatible  types	49	None	replace
353	[BUG]  [BUGGY]  int  sign  =  n;  Integer  startIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  n  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  n;  Integer  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  n;  Integer  startIndex  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    Integer    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	50	None	replace
354	[BUG]  [BUGGY]  int  sign  =  pos.getIndex();  Integer  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex();  Integer  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  pos.getIndex();  Integer  startIndex  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    Integer    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	50	None	replace
355	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incomparable  types:  char  and  String	83	None	replace
356	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(n);  pos.setIndex(startIndex);  [CE]  cannot  find  symbol  n  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(n);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(startIndex);    pos.setIndex(n);  pos.setIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol  n	20	None	add
357	[BUG]  [BUGGY]  n.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  n.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	n.setIndex(startIndex);  pos.setIndex(endIndex);	          pos.setIndex(initialIndex);    pos.setIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol  n	23	None	replace
358	[BUG]  [BUGGY]  int  sign  =  c;  String  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c;  String  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    c;    String  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
359	[BUG]  [BUGGY]  int  sign  =  c;  char  c  =  parsePreviousCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c;  char  c  =  parsePreviousCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    c;    char  c  =  parsePreviousCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
360	[BUG]  [BUGGY]  int  sign  =  c;  Integer  sign  =  c;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c;  Integer  sign  =  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    c;    Integer  sign  =  c;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
361	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incomparable  types:  char  and  String	90	None	replace
362	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  else  {  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  else  {  return  null;  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  else  {  return  null;  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incomparable  types:  char  and  String	90	None	replace
363	[BUG]  [BUGGY]  pos.setIndex(startIndex);  int  endIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  sign  [FE]              AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(startIndex);  int  endIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(startIndex);  int  endIndex  =  pos.getIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  sign	91	None	replace
364	[BUG]  [BUGGY]  int  sign  =(n  <  source.getEndIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  n  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(n  <  source.getEndIndex())?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(n  <  source.getEndIndex())?  0  :  startIndex;	  int    sign    =(endIndex    <    source.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  n	95	None	replace
365	[BUG]  [BUGGY]  double  re  =  parsePreviousCharacter(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  re  =  parsePreviousCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  re  =  parsePreviousCharacter(source,  pos);	  double    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
366	[BUG]  [BUGGY]  Integer  startIndex  =  startIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  startIndex  =  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  startIndex  =  startIndex;	  int    sign    =    startIndex;    Integer    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
367	[BUG]  [BUGGY]  int  sign  =  n;  Integer  startIndex  =  n;  [CE]  cannot  find  symbol  n  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  n;  Integer  startIndex  =  n;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  n;  Integer  startIndex  =  n;	  int    sign    =    startIndex;    Integer    startIndex    =    startIndex;    	non-compiled	[CE]  cannot  find  symbol  n	84	None	replace
368	[BUG]  [BUGGY]  int  sign  =  startIndex;  Integer  startIndex  =  c;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex;  Integer  startIndex  =  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  startIndex;  Integer  startIndex  =  c;	  int    sign    =    startIndex;    Integer    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
369	[BUG]  [BUGGY]  Ref.setIndex(startIndex);  [CE]  cannot  find  symbol  Ref  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Ref.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Ref.setIndex(startIndex);	  re.setIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol  Ref	39	None	replace
370	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  startIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Integer    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	76	None	replace
371	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  endIndex;  Integer  sign  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Integer    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	76	None	replace
372	[BUG]  [BUGGY]  Integer  sign  =(endIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  sign  =(endIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  sign  =(endIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Integer    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	76	None	replace
373	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  sign  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  sign	19	None	replace
374	[BUG]  [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  sign  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  sign	19	None	replace
375	[BUG]  [BUGGY]  n.setIndex(startIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  n  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  n.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	n.setIndex(startIndex);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	19	None	replace
376	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  >=  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  >=  0)?  -1  :  1;	  int    sign    =(startIndex    <    0)?    -1    :    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	replace
377	[BUG]  [BUGGY]  int  sign  =(startIndex  >=  0)?  -1  :  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  >=  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  >=  0)?  -1  :  1;	  int    sign    =(startIndex    <    0)?    -1    :    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	121	2	replace
378	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(c  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(c  <  0)?  0  :  startIndex;	  int    sign    =(endIndex    <    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	2	replace
379	[BUG]  [BUGGY]  int  sign  =(c  <  0)?  0  :  startIndex;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(c  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(c  <  0)?  0  :  startIndex;	  int    sign    =(endIndex    <    0)?    0    :    startIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	2	replace
380	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  Int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  Int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    Int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
381	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  char  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  char  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    char  startIndex  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
382	[BUG]  [BUGGY]  if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  }  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  }  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  }	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
383	[BUG]  [BUGGY]  if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(startIndex);  return  null;  }  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(startIndex);  return  null;  }  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(startIndex);  return  null;  }	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
384	[BUG]  [BUGGY]  RelativeFormat.instance.setIndex(startIndex);  [CE]  package  RelativeFormat  does  not  exist  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  RelativeFormat.instance.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	RelativeFormat.instance.setIndex(startIndex);	  re.setIndex(initialIndex);    	non-compiled	[CE]  package  RelativeFormat  does  not  exist	110	None	replace
385	[BUG]  [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  startIndex  +  1);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  startIndex  +  1);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  re  =  parseNextCharacter(source,  pos,  startIndex  +  1);	  int    re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
386	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
387	[BUG]  [BUGGY]  if(c!=  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c!=  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c!=  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
388	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  else  {  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  else  {  return  null;  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  else  {  return  null;  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	3	None	replace
389	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos,  n);  [CE]  cannot  find  symbol  n  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos,  n);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  pos,  n);	  Number    im    =    parseNextCharacter(source,    startIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol  n	43	None	replace
390	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	104	24	add
391	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	104	24	add
392	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  int  initialIndex  =  source.getIndex();  pos.setIndex(Integer.MIN_VALUE);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  int  initialIndex  =  source.getIndex();  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    int  initialIndex  =  source.getIndex();  pos.setIndex(Integer.MIN_VALUE);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	104	None	add
393	[BUG]  [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [CE]  cannot  find  symbol  sign  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sign	102	None	replace
394	[BUG]  [BUGGY]  long  sign  =  0L;  int  sign  =  0L;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  int  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    int  sign  =  0L;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
395	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  int  sign  =(startIndex  <  0)?  1  :  1;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  int  sign  =(startIndex  <  0)?  1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    -1    :    1;    int  sign  =(startIndex  <  0)?  1  :  1;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	120	None	add
396	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  int  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  int  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(c);    int  initialIndex  =  source.getIndex();  pos.setIndex(initialIndex);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	24	None	add
397	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	24	24	add
398	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	24	24	add
399	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex()  +  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  pos.getIndex()  +  startIndex;	  int    sign    =    pos.getIndex();    	compilable	  [FE]  StringIndexOutOfBoundsException  	56	2	replace
400	[BUG]  [BUGGY]  int  sign  =  pos.getIndex()  +  startIndex;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex()  +  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  pos.getIndex()  +  startIndex;	  int    sign    =    pos.getIndex();    	compilable	  [FE]  StringIndexOutOfBoundsException  	56	2	replace
401	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  char  startIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  char  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  endIndex;  char  startIndex  =  parseNextCharacter(source,  pos);	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    char    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	79	None	replace
402	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex;  char  startIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  endIndex;  char  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  endIndex;  char  startIndex  =  parseNextCharacter(source,  pos);	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    char    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	79	None	replace
403	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(c  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(c  <  0)?  1  :  0;	  int    sign    =(startIndex    <    0)?    1    :    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	119	2	replace
404	[BUG]  [BUGGY]  int  sign  =(c  <  0)?  1  :  0;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(c  <  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(c  <  0)?  1  :  0;	  int    sign    =(startIndex    <    0)?    1    :    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	119	2	replace
405	[BUG]  [BUGGY]  if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  1;  }  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  1;  }  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  1;  }	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    int    sign    =    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
406	[BUG]  [BUGGY]  if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  }  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  }  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  pos.getIndex())  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  }	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    int    sign    =    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
407	[BUG]  [BUGGY]  im.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  im.setIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	im.setIndex(endIndex);	  im.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	111	None	replace
408	[BUG]  [BUGGY]  int  sign  =  re.getStartIndex();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  re.getStartIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  re.getStartIndex();	  int    sign    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
409	[BUG]  [BUGGY]  n.setIndex(startIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  n  [FE]            AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  n.setIndex(startIndex);  pos.setIndex(InitialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	n.setIndex(startIndex);  pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	22	None	replace
410	[BUG]  [BUGGY]  n.setIndex(startIndex);  n.setIndex(InitialIndex);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  n.setIndex(startIndex);  n.setIndex(InitialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	n.setIndex(startIndex);  n.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  cannot  find  symbol  n	22	None	replace
411	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	5	None	add
412	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  int  startIndex  =  source.getIndex();  pos.setIndex(startIndex);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  int  startIndex  =  source.getIndex();  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(initialIndex);    int  startIndex  =  source.getIndex();  pos.setIndex(startIndex);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	5	None	add
413	[BUG]  [BUGGY]  pos.setIndex(endIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]        AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(endIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(endIndex);  int  initialIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	81	None	replace
414	[BUG]  [BUGGY]  int  sign  =  startIndex  -  1;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  startIndex  -  1;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex  -  1;  char  c  =  parseNextCharacter(source,  pos);  int  sign  =  startIndex  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex    -    1;    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  startIndex  -  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	85	None	add
415	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c  +  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  c  +  startIndex;	  int    sign    =    c;    	compilable	  [FE]  StringIndexOutOfBoundsException  	117	2	replace
416	[BUG]  [BUGGY]  int  sign  =  c  +  startIndex;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c  +  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  c  +  startIndex;	  int    sign    =    c;    	compilable	  [FE]  StringIndexOutOfBoundsException  	117	2	replace
417	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  c  +  1;	  int    sign    =    c;    	compilable	  [FE]  StringIndexOutOfBoundsException  	117	2	replace
418	[BUG]  [BUGGY]  int  sign  =  c  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  c  +  1;	  int    sign    =    c;    	compilable	  [FE]  StringIndexOutOfBoundsException  	117	2	replace
419	[BUG]  [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos.getIndex());  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  2;  char  c  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    2;    char  c  =  parseNextCharacter(source,  pos.getIndex());	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
420	[BUG]  [BUGGY]  pos.setIndex(Integer.parseInt(c),  startIndex);  [CE]  no  suitable  method  found  for  parseInt(char)  [FE]          AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  pos.setIndex(Integer.parseInt(c),  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	pos.setIndex(Integer.parseInt(c),  startIndex);	          pos.setIndex(initialIndex);    pos.setIndex(Integer.parseInt(c));    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(char)	103	None	replace
421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	18	24	add
422	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  AssertionFailedError  	18	24	add
423	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  source.length();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  source.length();	  int    sign    =    DEFAULT_IMAGINARY_CHARACTER;    	compilable	  [FE]  StringIndexOutOfBoundsException  	115	2	replace
424	[BUG]  [BUGGY]  int  sign  =  source.length();  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  source.length();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  source.length();	  int    sign    =    DEFAULT_IMAGINARY_CHARACTER;    	compilable	  [FE]  StringIndexOutOfBoundsException  	115	2	replace
425	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  return  null;  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  else  {  return  null;  }	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	21	None	replace
426	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]          AssertionFailedError      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  pos.setIndex(startIndex);  }	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	88	None	replace
427	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  startIndex  +  1);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextCharacter(source,  startIndex  +  1);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  startIndex  +  1);	  Integer    re    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
428	[BUG]  [BUGGY]  Number  re  =  parseNextCharacter(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  re  =  parseNextCharacter(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  re  =  parseNextCharacter(source,  pos);	  Integer    re    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
429	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  &&  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  &&  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  return  null;  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  &&  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  return  null;  }	  if(c    ==    DEFAULT_IMAGINARY_CHARACTER    ||    c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(startIndex);    return    null;    }    	non-compiled	[CE]  incomparable  types:  char  and  String	107	None	replace
430	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }	  if(c    ==    DEFAULT_IMAGINARY_CHARACTER    ||    c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(startIndex);    return    null;    }    	non-compiled	[CE]  incomparable  types:  char  and  String	107	None	replace
431	[BUG]  [BUGGY]  int  sign  =  endIndex;  [CE]  cannot  find  symbol  endIndex  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  endIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  endIndex;	  int    sign    =    startIndex;    int    sign    =    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	47	None	replace
432	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  startIndex  +  1;	  int    sign    =    startIndex    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	86	2	replace
433	[BUG]  [BUGGY]  int  sign  =  startIndex  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  startIndex  +  1;	  int    sign    =    startIndex    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	86	2	replace
434	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [CE]  cannot  find  symbol  sign  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sign	105	None	replace
435	[BUG]  [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [CE]  cannot  find  symbol  sign  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sign	105	None	replace
436	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  initialIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =(startIndex  <  0)?  0  :  initialIndex;	  int    sign    =(startIndex    <    0)?    0    :    endIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	2	replace
437	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  initialIndex;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  initialIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(startIndex  <  0)?  0  :  initialIndex;	  int    sign    =(startIndex    <    0)?    0    :    endIndex;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	2	replace
438	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  startIndex;  char  c  =  parseNextCharacter(source,  pos);	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	77	None	replace
439	[BUG]  [BUGGY]  int  sign  =  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  parsePreviousCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  parsePreviousCharacter(source,  pos);	  int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
440	[BUG]  [BUGGY]  n  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  n  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  n  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	n  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);	  int    sign    =    startIndex;    char    c    =    parseNextCharacter(source,    pos);    int    sign    =    startIndex;    	non-compiled	[CE]  cannot  find  symbol  n	112	None	replace
441	[BUG]  [BUGGY]  int  sign  =(n  <  pos.getStartIndex())?  0  :  startIndex;  [CE]  cannot  find  symbol  n  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(n  <  pos.getStartIndex())?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(n  <  pos.getStartIndex())?  0  :  startIndex;	  int    sign    =(endIndex    <    pos.getStartIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  n	122	None	replace
442	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(endIndex);  pos.setIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	2	None	add
443	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  endIndex;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    startIndex    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	75	None	replace
444	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  startIndex;  int  startIndex  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    startIndex    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	75	None	replace
445	[BUG]  [BUGGY]  int  sign  =  DEFAULT_IMAGINARY_CHARACTER.length;  [CE]  cannot  find  symbol  length  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  DEFAULT_IMAGINARY_CHARACTER.length;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  DEFAULT_IMAGINARY_CHARACTER.length;	  int    sign    =    n;    	non-compiled	[CE]  cannot  find  symbol  length	52	None	replace
446	[BUG]  [BUGGY]  int  sign  =  0;  char  sign  =  parseNextCharacter(source,  pos);  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  0;  char  sign  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  0;  char  sign  =  parseNextCharacter(source,  pos);	  int    sign    =    1;    char    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	80	None	replace
447	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  Int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  Int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    Int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
448	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  char  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  char  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    char  sign  =(startIndex  <  pos.getIndex())?  1  :  0;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	96	None	add
449	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(itialIndex);  pos.setIndex(Integer.MAX_VALUE);  [CE]  cannot  find  symbol  itialIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(itialIndex);  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MAX_VALUE);    pos.setIndex(itialIndex);  pos.setIndex(Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol  itialIndex	101	None	add
450	[BUG]  [BUGGY]  if(startIndex  <  pos)  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  pos)  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  }  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  pos)  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  }	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    sign    =    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	16	None	replace
451	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  Int  sign  =(endIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  startIndex;  Int  sign  =(endIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  startIndex;  Int  sign  =(endIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Int    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	78	None	replace
452	[BUG]  [BUGGY]  Character  sign  =  DEFAULT_IMAGINARY_CHARACTER.charAt(0);  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Character  sign  =  DEFAULT_IMAGINARY_CHARACTER.charAt(0);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Character  sign  =  DEFAULT_IMAGINARY_CHARACTER.charAt(0);	  Character    sign    =    0;    	non-compiled	[CE]  incompatible  types	71	None	replace
453	[BUG]  [BUGGY]  Character  sign  =  0x7F;  [CE]  incompatible  types  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Character  sign  =  0x7F;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Character  sign  =  0x7F;	  Character    sign    =    0;    	non-compiled	[CE]  incompatible  types	71	None	replace
454	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	60	None	replace
455	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }  [CE]  cannot  find  symbol  sign  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }	          pos.setIndex(initialIndex);    pos.setIndex(c);    	non-compiled	[CE]  cannot  find  symbol  sign	25	None	replace
456	[BUG]  [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }  [CE]  cannot  find  symbol  sign  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  >=  -1)  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }	          pos.setIndex(initialIndex);    pos.setIndex(c);    	non-compiled	[CE]  cannot  find  symbol  sign	25	None	replace
457	[BUG]  [BUGGY]  n.setIndex(startIndex);  pos.setIndex(c);  [CE]  cannot  find  symbol  n  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  n.setIndex(startIndex);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	n.setIndex(startIndex);  pos.setIndex(c);	          pos.setIndex(initialIndex);    pos.setIndex(c);    	non-compiled	[CE]  cannot  find  symbol  n	25	None	replace
458	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  else  {  return  null;  }	          pos.setIndex(startIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	6	None	replace
459	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  int  sign  =(startIndex  >=  pos.getIndex())?  1  :  0;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  int  sign  =(startIndex  >=  pos.getIndex())?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    int  sign  =(startIndex  >=  pos.getIndex())?  1  :  0;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	96	None	add
460	[BUG]  [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  int  sign  =(startIndex  <  pos.getIndex())?  2  :  0;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  pos.getIndex())?  1  :  0;  int  sign  =(startIndex  <  pos.getIndex())?  2  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    pos.getIndex())?    1    :    0;    int  sign  =(startIndex  <  pos.getIndex())?  2  :  0;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	96	None	add
461	[BUG]  [BUGGY]  int  initialIndex  =  re.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  initialIndex  =  re.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  initialIndex  =  re.getIndex();	  re.setIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	110	None	replace
462	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  sign  =  startIndex;  }  [CE]  incomparable  types:  char  and  String  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  sign  =  startIndex;  }  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  sign  =  startIndex;  }	  int    sign    =    startIndex;    char    c    =    parseNextCharacter(source,    pos);    int    sign    =    startIndex;    	non-compiled	[CE]  incomparable  types:  char  and  String	112	None	replace
463	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  sign  =  startIndex;  }  [CE]  incomparable  types:  char  and  String  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  sign  =  startIndex;  }  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  int  sign  =  startIndex;  char  c  =  parseNextCharacter(source,  pos);  sign  =  startIndex;  }	  int    sign    =    startIndex;    char    c    =    parseNextCharacter(source,    pos);    int    sign    =    startIndex;    	non-compiled	[CE]  incomparable  types:  char  and  String	112	None	replace
464	[BUG]  [BUGGY]  long  sign  =  0L;  long  sign  =  0L;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  long  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    long  sign  =  0L;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
465	[BUG]  [BUGGY]  long  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    char  c  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
466	[BUG]  [BUGGY]  long  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  long  sign  =  0L;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  long  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    char  c  =  parseNextCharacter(source,  pos);  long  sign  =  0L;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
467	[BUG]  [BUGGY]  long  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  return  null;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  long  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  return  null;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	long    sign    =    0L;    char  c  =  parseNextCharacter(source,  pos);  return  null;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	65	None	add
468	[BUG]  [BUGGY]  int  startIndex  =  0;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =  0;	  int    sign    =    startIndex;    int    startIndex    =    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	48	None	replace
469	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  }  [CE]  incomparable  types:  char  and  String  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  }  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  int  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  sign  =  1;  }	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    sign    =    1;    	non-compiled	[CE]  incomparable  types:  char  and  String	16	None	replace
470	[BUG]  [BUGGY]  double  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  double  sign  =  0L;  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  char  c  =  parseNextCharacter(source,  pos);  double  sign  =  0L;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    char  c  =  parseNextCharacter(source,  pos);  double  sign  =  0L;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
471	[BUG]  [BUGGY]  double  sign  =  0L;  Number  im  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  0L;  Number  im  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double    sign    =    0L;    Number  im  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  incompatible  types	63	None	add
472	[BUG]  [BUGGY]  int  sign  =  startIndex  -  1;  Integer  sign  =  startIndex  -  1;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  startIndex  -  1;  Integer  sign  =  startIndex  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    startIndex    -    1;    Integer  sign  =  startIndex  -  1;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	85	None	add
473	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  initialIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  pos,  initialIndex);	  Integer    re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	45	None	replace
474	[BUG]  [BUGGY]  int  sign  =  defULT_IMAGINARY_CHARACTER;  [CE]  cannot  find  symbol  defULT_IMAGINARY_CHARACTER  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  defULT_IMAGINARY_CHARACTER;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  defULT_IMAGINARY_CHARACTER;	  int    sign    =    n;    	non-compiled	[CE]  cannot  find  symbol  defULT_IMAGINARY_CHARACTER	52	None	replace
475	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  Int  sign  =(startIndex  <  0)?  -1  :  1;  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  -1  :  1;  Int  sign  =(startIndex  <  0)?  -1  :  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    -1    :    1;    Int  sign  =(startIndex  <  0)?  -1  :  1;	  	non-compiled	[CE]  cannot  find  symbol	120	None	add
476	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  initialIndex;  char  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  0)?  0  :  initialIndex;  char  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  0)?  0  :  initialIndex;  char  startIndex  =  parseNextCharacter(source,  pos);	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    char    startIndex    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	79	None	replace
477	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parseNextCharacter(source,  pos,  startIndex);	  char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	72	None	replace
478	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  pos);	  char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	72	None	replace
479	[BUG]  [BUGGY]  RelativeFormat.instance().setIndex(startIndex);  [CE]  cannot  find  symbol  RelativeFormat  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  RelativeFormat.instance().setIndex(startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	RelativeFormat.instance().setIndex(startIndex);	  re.setIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol  RelativeFormat	39	None	replace
480	[BUG]  [BUGGY]  double  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  sign  =  1;  char  c  =  parseNextCharacter(source,  pos);	  int    sign    =    1;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
481	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  n  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  n  =  parseNextCharacter(source,  pos.getIndex());	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	59	None	replace
482	[BUG]  [BUGGY]  int  sign  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  parseAndIgnoreWhitespace(source,  pos);	  int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  incompatible  types	54	None	replace
483	[BUG]  [BUGGY]  String  sign  =  DEFAULT_IMAGINARY_CHARACTER  +  source.charAt(startIndex);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  String  sign  =  DEFAULT_IMAGINARY_CHARACTER  +  source.charAt(startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	String  sign  =  DEFAULT_IMAGINARY_CHARACTER  +  source.charAt(startIndex);	  String    sign    =    0;    	non-compiled	[CE]  incompatible  types	69	None	replace
484	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setInitialIndex(initialIndex);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);  pos.setInitialIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(startIndex);        pos.setIndex(initialIndex);    pos.setIndex(startIndex);  pos.setInitialIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
485	[BUG]  [BUGGY]  int  sign  =  DEFAULT_IMAGINARY_CHARACTER;  Integer  startIndex  =  pos.getIndex();  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  DEFAULT_IMAGINARY_CHARACTER;  Integer  startIndex  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  DEFAULT_IMAGINARY_CHARACTER;  Integer  startIndex  =  pos.getIndex();	  int    sign    =    startIndex;    Integer    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incompatible  types	51	None	replace
486	[BUG]  [BUGGY]  int  sign  =  im.getStartIndex();  [CE]  cannot  find  symbol  im  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  im.getStartIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  im.getStartIndex();	  int    sign    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol  im	57	None	replace
487	[BUG]  [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  re  =  parseNextCharacter(source,  pos,  c,  DEFAULT_IMAGINARY_CHARACTER);	  int    re    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	114	None	replace
488	[BUG]  [BUGGY]  Integer  re  =  parseNextInteger(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextInteger(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextInteger(source,  pos);	  Integer    im    =    parseNextInteger(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	93	None	replace
489	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  DEFAULT_IMAGINARY_CHARACTER.length();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  DEFAULT_IMAGINARY_CHARACTER.length();	  int    sign    =    1;    int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	replace
490	[BUG]  [BUGGY]  int  sign  =  DEFAULT_IMAGINARY_CHARACTER.length();  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  DEFAULT_IMAGINARY_CHARACTER.length();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  DEFAULT_IMAGINARY_CHARACTER.length();	  int    sign    =    1;    int    sign    =    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	13	2	replace
491	[BUG]  [BUGGY]  double  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  DEFAULT_IMAGINARY_CHARACTER;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  sign  =  DEFAULT_IMAGINARY_CHARACTER;	  int    sign    =    DEFAULT_IMAGINARY_CHARACTER;    	non-compiled	[CE]  incompatible  types	115	None	replace
492	[BUG]  [BUGGY]  int  startIndex  =(initialIndex  <  0)?  0  :  initialIndex;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  startIndex  =(initialIndex  <  0)?  0  :  initialIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  startIndex  =(initialIndex  <  0)?  0  :  initialIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    int    startIndex    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	75	None	replace
493	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	6	None	replace
494	[BUG]  [BUGGY]  int  sign  =  c  ==  DEFAULT_IMAGINARY_CHARACTER?  0  :  c;  [CE]  incomparable  types:  char  and  String  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c  ==  DEFAULT_IMAGINARY_CHARACTER?  0  :  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  c  ==  DEFAULT_IMAGINARY_CHARACTER?  0  :  c;	  int    sign    =    c;    	non-compiled	[CE]  incomparable  types:  char  and  String	117	None	replace
495	[BUG]  [BUGGY]  int  sign  =  c  ==  DEFAULT_IMAGINARY_CHARACTER?  -1  :  c;  [CE]  incomparable  types:  char  and  String  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c  ==  DEFAULT_IMAGINARY_CHARACTER?  -1  :  c;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  c  ==  DEFAULT_IMAGINARY_CHARACTER?  -1  :  c;	  int    sign    =    c;    	non-compiled	[CE]  incomparable  types:  char  and  String	117	None	replace
496	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [CE]  cannot  find  symbol  endIndex  [FE]        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  endIndex;  Int  sign  =(startIndex  <  0)?  0  :  startIndex;	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    Int    sign    =(startIndex    <    0)?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	78	None	replace
497	[BUG]  [BUGGY]  char  sign  =  DEFAULT_IMAGINARY_CHARACTER.charAt(startIndex);  [CE]  possible  loss  of  precision  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  sign  =  DEFAULT_IMAGINARY_CHARACTER.charAt(startIndex);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  DEFAULT_IMAGINARY_CHARACTER.charAt(startIndex);	  int    sign    =    2;    	non-compiled	[CE]  possible  loss  of  precision	34	None	replace
498	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  else  {  return  new  Complex(re.doubleValue(),  0.0);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  else  {  return  new  Complex(re.doubleValue(),  0.0);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  startIndex  =  pos.getIndex();  }  else  {  return  new  Complex(re.doubleValue(),  0.0);  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incomparable  types:  char  and  String	90	None	replace
499	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  int  sign  =(startIndex  >=  0)?  0  :  startIndex  +  1;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  0  :  startIndex  +  1;  int  sign  =(startIndex  >=  0)?  0  :  startIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    int  sign  =(startIndex  >=  0)?  0  :  startIndex  +  1;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	37	None	add
500	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIDDLE);  [CE]  cannot  find  symbol  MIDDLE  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIDDLE);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(Integer.MIN_VALUE);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MIDDLE);	  	non-compiled	[CE]  cannot  find  symbol  MIDDLE	104	None	add
501	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(c);	  	compilable	  [FE]  AssertionFailedError  	24	26	add
502	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(c);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(c);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(c);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(c);	  	compilable	  [FE]  AssertionFailedError  	24	26	add
503	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	double  sign  =  startIndex;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
504	[BUG]  [BUGGY]  double  sign  =  startIndex;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  sign  =  startIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  sign  =  startIndex;	  double    sign    =    0L;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
505	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex  +  1;  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex  +  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  endIndex  +  1;	  int    sign    =(startIndex    <    0)?    0    :    startIndex    +    1;    	non-compiled	[CE]  cannot  find  symbol  endIndex	38	None	replace
506	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  c);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	124	None	replace
507	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	82	26	add
508	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    pos.setIndex(Integer.MIN_VALUE);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();	  	compilable	  [FE]  AssertionFailedError  	82	26	add
509	[BUG]  [BUGGY]  char  re  =  parseNextCharacter(source,  pos,  im);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  re  =  parseNextCharacter(source,  pos,  im);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  re  =  parseNextCharacter(source,  pos,  im);	  char    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	9	None	replace
510	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [CE]  incomparable  types:  char  and  String  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	102	None	replace
511	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [CE]  incomparable  types:  char  and  String  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	102	None	replace
512	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(startIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]        StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(startIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  }  else  {  pos.setIndex(startIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	102	None	replace
513	[BUG]  [BUGGY]  int  sign  =(endIndex  <  source.getEndIndex())?  0  :  endIndex;  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  source.getEndIndex())?  0  :  endIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  source.getEndIndex())?  0  :  endIndex;	  int    sign    =(startIndex    <    source.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol  endIndex	26	None	replace
514	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }  else  {  startIndex  =  pos.getIndex();  }  [CE]  cannot  find  symbol  sign  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }  else  {  startIndex  =  pos.getIndex();  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  0)  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }  else  {  startIndex  =  pos.getIndex();  }	          pos.setIndex(initialIndex);    pos.setIndex(c);    	non-compiled	[CE]  cannot  find  symbol  sign	25	None	replace
515	[BUG]  [BUGGY]  if(startIndex  <  0  ||  startIndex  >  re.getStartIndex())  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(startIndex  <  0  ||  startIndex  >  re.getStartIndex())  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(startIndex  <  0  ||  startIndex  >  re.getStartIndex())  {  pos.setIndex(initialIndex);  pos.setIndex(c);  }	          pos.setIndex(initialIndex);    pos.setIndex(c);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
516	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }	  if(c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(startIndex);    return    null;    }    	non-compiled	[CE]  incomparable  types:  char  and  String	106	None	replace
517	[BUG]  [BUGGY]  if(c!=  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  incomparable  types:  char  and  String  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c!=  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c!=  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }	  if(c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(startIndex);    return    null;    }    	non-compiled	[CE]  incomparable  types:  char  and  String	106	None	replace
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	18	26	add
519	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(Integer.MAX_VALUE);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	18	26	add
520	[BUG]  [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  pos,  im);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  pos,  im);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parsePreviousCharacter(source,  pos,  im);	  Integer    re    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
521	[BUG]  [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  pos,  c);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parsePreviousCharacter(source,  pos,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parsePreviousCharacter(source,  pos,  c);	  Integer    re    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	46	None	replace
522	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	int  sign  =  c  -  1;	  int    sign    =    startIndex    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	86	2	replace
523	[BUG]  [BUGGY]  int  sign  =  c  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  c  -  1;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =  c  -  1;	  int    sign    =    startIndex    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	86	2	replace
524	[BUG]  [BUGGY]  int  sign  =  pos.getIndex();  Int  sign  =  pos.getIndex();  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  pos.getIndex();  Int  sign  =  pos.getIndex();  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    pos.getIndex();    Int  sign  =  pos.getIndex();	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
525	[BUG]  [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  int  sign  =(startIndex  >=  0)?  1  :  0;  [CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(startIndex  <  0)?  1  :  0;  int  sign  =(startIndex  >=  0)?  1  :  0;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =(startIndex    <    0)?    1    :    0;    int  sign  =(startIndex  >=  0)?  1  :  0;	  	non-compiled	[CE]  variable  sign  is  already  defined  in  method  parse(String,ParsePosition)	118	None	add
526	[BUG]  [BUGGY]  int  sign  =  2;  char  c  =  parsePreviousCharacter(source,  pos);  [CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =  2;  char  c  =  parsePreviousCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int    sign    =    2;    char  c  =  parsePreviousCharacter(source,  pos);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
527	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  else  {  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  startIndex  =  pos.getIndex();  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    startIndex    =    pos.getIndex();    	non-compiled	[CE]  incomparable  types:  char  and  String	83	None	replace
528	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	19	None	replace
529	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  startIndex  =  pos.getIndex();  }  [CE]  incomparable  types:  char  and  String  [FE]      AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  startIndex  =  pos.getIndex();  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  startIndex  =  pos.getIndex();  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	19	None	replace
530	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(startIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]        AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(startIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(startIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	19	None	replace
531	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [CE]  incomparable  types:  char  and  String  [FE]    StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	105	None	replace
532	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [CE]  incomparable  types:  char  and  String  [FE]      StringIndexOutOfBoundsException    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(Integer.MIN_VALUE);  }	          pos.setIndex(initialIndex);    pos.setIndex(Integer.MIN_VALUE);    	non-compiled	[CE]  incomparable  types:  char  and  String	105	None	replace
533	[BUG]  [BUGGY]  char  sign  =  0x7F;  [CE]  possible  loss  of  precision  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  char  sign  =  0x7F;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	char  sign  =  0x7F;	  Char    sign    =    0;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
534	[BUG]  [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  c,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Integer  re  =  parseNextCharacter(source,  pos,  c,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Integer  re  =  parseNextCharacter(source,  pos,  c,  startIndex);	  Integer    re    =    parseNextCharacter(source,    pos,    c);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	99	None	replace
535	[BUG]  [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  char  c  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(endIndex  <  0)?  0  :  endIndex;  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(endIndex  <  0)?  0  :  endIndex;  char  c  =  parseNextCharacter(source,  pos);	  int    sign    =(startIndex    <    0)?    0    :    startIndex;    char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	77	None	replace
536	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	Number  im  =  parseNextCharacter(source,  pos.getIndex());	  Number    im    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	41	None	replace
537	[BUG]  [BUGGY]  int  sign  =(initialIndex  <  source.getEndIndex())?  0  :  initialIndex;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  sign  =(initialIndex  <  source.getEndIndex())?  0  :  initialIndex;  [BUGGY]      switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  sign  =(initialIndex  <  source.getEndIndex())?  0  :  initialIndex;	  int    sign    =(endIndex    <    source.getEndIndex())?    0    :    startIndex;    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
538	[BUG]  [BUGGY]  double  re  =  parseNextCharacter(source,  pos,  im);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  double  re  =  parseNextCharacter(source,  pos,  im);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	double  re  =  parseNextCharacter(source,  pos,  im);	  double    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
539	[BUG]  [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos,  c);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos,  c);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  n  =  parsePreviousCharacter(source,  pos,  c);	  int    n    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
540	[BUG]  [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  endIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  int  re  =  parseNextCharacter(source,  pos,  endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	int  re  =  parseNextCharacter(source,  pos,  endIndex);	  int    re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
541	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  [CE]  incomparable  types:  char  and  String  [FE]    AssertionFailedError    [CONTEXT]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  sign  =  1;  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  incomparable  types:  char  and  String	21	None	replace
