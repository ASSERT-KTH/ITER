bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos.setIndex(endIndex);  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]    AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(endIndex);  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(endIndex);  parseNextCharacter(source,  pos);	          pos.setIndex(startIndex);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	37	None	replace
2	[BUG]  [BUGGY]  String  c  =  parseAndClearCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseAndClearCharacter(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndClearCharacter(source,  startIndex);	  String    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
3	[BUG]  [BUGGY]  String  c  =  parseAndClearCharacter(re,  source,  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseAndClearCharacter(re,  source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndClearCharacter(re,  source,  pos);	  String    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
4	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(source,  startIndex,  pos);	  char    c    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	69	None	replace
5	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(re,  source,  startIndex,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(re,  source,  startIndex,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(re,  source,  startIndex,  startIndex);	  char    c    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	69	None	replace
6	[BUG]  [BUGGY]  Character  c  =  parsePreviousCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parsePreviousCharacter(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parsePreviousCharacter(source,  startIndex);	  Character    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
7	[BUG]  [BUGGY]  Character  c  =  parsePreviousCharacter(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parsePreviousCharacter(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parsePreviousCharacter(source,  pos,  startIndex);	  Character    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
8	[BUG]  [BUGGY]  Character  c  =  parsePreviousCharacter(re,  pos);  [CE]  cannot  find  symbol  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parsePreviousCharacter(re,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parsePreviousCharacter(re,  pos);	  Character    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
9	[BUG]  [BUGGY]  Character  c  =  parsePreviousCharacter(re,  source,  pos);  [CE]  cannot  find  symbol  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parsePreviousCharacter(re,  source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parsePreviousCharacter(re,  source,  pos);	  Character    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
10	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	add	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	2	add
11	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	2	add
12	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(endIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	31	None	add
13	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	add	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	2	add
14	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(initialIndex);  pos.setIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(initialIndex);  pos.setIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	31	2	add
15	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	31	None	add
16	[BUG]  [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    pos.setIndex(startIndex);  pos.setIndex(endIndex);  pos.setIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        pos.setIndex(startIndex);    pos.setIndex(endIndex);  pos.setIndex(startIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	31	None	add
17	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  re  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re  =  parseNextCharacter(source,  startIndex,  pos);	  re    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	1	None	replace
18	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  re  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  re    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	1	None	replace
19	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  startIndex,  im);  [CE]  cannot  find  symbol  im  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  re  =  parseNextCharacter(source,  startIndex,  im);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re  =  parseNextCharacter(source,  startIndex,  im);	  re    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  im	1	None	replace
20	[BUG]  [BUGGY]  String  c  =  parsePreviousCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parsePreviousCharacter(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parsePreviousCharacter(source,  startIndex);	  char    c    =    parsePreviousCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
21	[BUG]  [BUGGY]  char  c  =  parsePreviousCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parsePreviousCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parsePreviousCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parsePreviousCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
22	[BUG]  [BUGGY]  char  c  =  parsePreviousCharacter(source,  startIndex,  pos);  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parsePreviousCharacter(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parsePreviousCharacter(source,  startIndex,  pos);	  char    c    =    parsePreviousCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
23	[BUG]  [BUGGY]  Character  c  =  parseAndClearBuffer(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndClearBuffer(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearBuffer(source,  startIndex);	  Character    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
24	[BUG]  [BUGGY]  Character  c  =  parseAndClearBuffer(re,  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndClearBuffer(re,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearBuffer(re,  pos);	  Character    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	add	                pos.setIndex(startIndex);        parseNextCharacter(source,    pos);    pos.setIndex(startIndex);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	36	24	add
26	[BUG]  [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        parseNextCharacter(source,    pos);    pos.setIndex(startIndex);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	36	24	add
27	[BUG]  [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(endIndex);  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  endIndex  [FE]      AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(endIndex);  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        parseNextCharacter(source,    pos);    pos.setIndex(endIndex);  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	36	None	add
28	[BUG]  [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  ParseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  ParseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        parseNextCharacter(source,    pos);    pos.setIndex(startIndex);  ParseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
29	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parseNextCharacter(source,  startIndex,  pos);	  int    n    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	11	None	replace
30	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  int    n    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	11	None	replace
31	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  n  =  parseNextCharacter(source,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  n  =  parseNextCharacter(source,  startIndex);	  int    n    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	11	None	replace
32	[BUG]  [BUGGY]  String  c  =  parseAndIgnoreWhitespace(source,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseAndIgnoreWhitespace(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndIgnoreWhitespace(source,  startIndex);	  char    c    =    parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	8	None	replace
33	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  pos);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  pos);	  char    c    =    parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	8	None	replace
34	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	8	None	replace
35	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  pos.getEndIndex());  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  pos.getEndIndex());  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  pos.getEndIndex());	  char    c    =    parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
36	[BUG]  [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Char    c    =    parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
37	[BUG]  [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndIgnoreWhitespace(source,  startIndex,  pos);	  Char    c    =    parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
38	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(endIndex);  }  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(endIndex);  }  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(endIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	32	None	replace
39	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(initialIndex);  pos.setIndex(endIndex);	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	32	None	replace
40	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  c  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(startIndex);  pos.setIndex(initialIndex);	          pos.setIndex(startIndex);    pos.setIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol  c	33	None	replace
41	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  pos,  startIndex);	  ParsePosition    im    =    parseNextPosition(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
42	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(startIndex,  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(startIndex,  pos);	  ParsePosition    im    =    parseNextPosition(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
43	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(startIndex,  source);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(startIndex,  source);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(startIndex,  source);	  ParsePosition    im    =    parseNextPosition(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
44	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex  +  1);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  startIndex  +  1);	  Number    im    =    parseNextCharacter(source,    pos    +    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	58	None	replace
45	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos  +  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos  +  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos  +  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos    +    startIndex);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	58	None	replace
46	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex  +  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex  +  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  startIndex  +  startIndex);	  Number    im    =    parseNextCharacter(source,    pos    +    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	58	None	replace
47	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex  +  source);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex  +  source);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  startIndex  +  source);	  Number    im    =    parseNextCharacter(source,    pos    +    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	58	None	replace
48	[BUG]  [BUGGY]  int  n  =  parsePreviousCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  n  =  parsePreviousCharacter(source,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parsePreviousCharacter(source,  startIndex);	  int    n    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
49	[BUG]  [BUGGY]  char  n  =  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  n  =  parsePreviousCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  n  =  parsePreviousCharacter(source,  pos);	  int    n    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
50	[BUG]  [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parsePreviousCharacter(source,  pos,  startIndex);	  int    n    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
51	[BUG]  [BUGGY]  im.setIndex(startIndex);  return  null;  [CE]  cannot  find  symbol  im  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  im.setIndex(startIndex);  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	im.setIndex(startIndex);  return  null;	  re.setIndex(endIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  im	49	None	replace
52	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  n  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  n  =  parseNextCharacter(source,  pos,  startIndex);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	64	None	replace
53	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	64	None	replace
54	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  n  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  n  =  parseNextCharacter(source,  startIndex,  pos);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	64	None	replace
55	[BUG]  [BUGGY]  pos.setStartIndex(startIndex);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setStartIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setStartIndex(startIndex);	  pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
56	[BUG]  [BUGGY]  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  c  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	parseNextCharacter(source,  pos);	  pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  c	48	None	replace
57	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(re,  source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseNextCharacter(re,  source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(re,  source,  startIndex);	  char    c    =    parseNextCharacter(re,    source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	17	None	replace
58	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(re,  source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(re,  source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(re,  source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseNextCharacter(re,    source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	17	None	replace
59	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(re,  startIndex,  source);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(re,  startIndex,  source);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(re,  startIndex,  source);	  char    c    =    parseNextCharacter(re,    source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	17	None	replace
60	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(re,  im,  source,  startIndex);  [CE]  cannot  find  symbol  im  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(re,  im,  source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(re,  im,  source,  startIndex);	  char    c    =    parseNextCharacter(re,    source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  im	17	None	replace
61	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex  +  1);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex  +  1);	  RelativeFormat    im    =    new    RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
62	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex,  pos);	  RelativeFormat    im    =    new    RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
63	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex  -  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex  -  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex  -  1);	  RelativeFormat    im    =    new    RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
64	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  pos);	  RelativeFormat    im    =    new    RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
65	[BUG]  [BUGGY]  String  c  =  parsePreviousCharacter(re,  source,  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parsePreviousCharacter(re,  source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parsePreviousCharacter(re,  source,  pos);	  String    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
66	[BUG]  [BUGGY]  String  c  =  parsePreviousCharacter(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parsePreviousCharacter(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parsePreviousCharacter(source,  pos,  startIndex);	  String    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
67	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex  +  1);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex  +  1);	  RelativeFormat    im    =    new    RelativeFormat(deFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
68	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex,  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex,  pos);	  RelativeFormat    im    =    new    RelativeFormat(deFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
69	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex  -  1);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex  -  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex  -  1);	  RelativeFormat    im    =    new    RelativeFormat(deFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
70	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  pos);	  RelativeFormat    im    =    new    RelativeFormat(deFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
71	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(startIndex,  source);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePosition(startIndex,  source);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(startIndex,  source);	  ParsePosition    re    =    parsePosition(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	42	None	replace
72	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(pos,  source);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePosition(pos,  source);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(pos,  source);	  ParsePosition    re    =    parsePosition(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	42	None	replace
73	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex,  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  startIndex,  pos);	  ParsePosition    re    =    parsePosition(source,    startIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
74	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  pos,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePosition(source,  pos,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  pos,  startIndex);	  ParsePosition    re    =    parsePosition(source,    startIndex,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
75	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  pos,  startIndex);	  ParsePosition    re    =    parsePosition(source,    startIndex,    pos);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
76	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex,  endIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex,  endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  startIndex,  endIndex);	  ParsePosition    re    =    parsePosition(source,    startIndex,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
77	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  initialIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  initialIndex  =  pos.getIndex();	  im.setIndex(initialIndex);    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	54	None	replace
78	[BUG]  [BUGGY]  String  c  =  parseAndClearBuffer(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseAndClearBuffer(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndClearBuffer(source,  startIndex);	  char    c    =    parseAndClearBuffer(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
79	[BUG]  [BUGGY]  char  c  =  parseAndClearBuffer(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndClearBuffer(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndClearBuffer(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseAndClearBuffer(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
80	[BUG]  [BUGGY]  char  c  =  parseAndClearBuffer(source,  startIndex,  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndClearBuffer(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndClearBuffer(source,  startIndex,  pos);	  char    c    =    parseAndClearBuffer(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
81	[BUG]  [BUGGY]  ReflectionFormat.instance.setIndex(startIndex  +  1);  [CE]  package  ReflectionFormat  does  not  exist  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance.setIndex(startIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance.setIndex(startIndex  +  1);	  ReflectionFormat.instance.setIndex(startIndex);    	non-compiled	[CE]  package  ReflectionFormat  does  not  exist	60	None	replace
82	[BUG]  [BUGGY]  ReflectionFormat.instance  =  pos.getInstance();  [CE]  cannot  find  symbol  ReflectionFormat  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance  =  pos.getInstance();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance  =  pos.getInstance();	  ReflectionFormat.instance.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	60	None	replace
83	[BUG]  [BUGGY]  ReflectionFormat.instance.setIndex(startIndex  -  1);  [CE]  package  ReflectionFormat  does  not  exist  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance.setIndex(startIndex  -  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance.setIndex(startIndex  -  1);	  ReflectionFormat.instance.setIndex(startIndex);    	non-compiled	[CE]  package  ReflectionFormat  does  not  exist	60	None	replace
84	[BUG]  [BUGGY]  ReflectionFormat.instance.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance.setIndex(endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance.setIndex(endIndex);	  ReflectionFormat.instance.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	60	None	replace
85	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(re,  source,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseNextCharacter(re,  source,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(re,  source,  DEFAULT_IMAGINARY_CHARACTER);	  String    c    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	71	None	replace
86	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  String    c    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	71	None	replace
87	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(re,  source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseNextCharacter(re,  source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(re,  source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  String    c    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	71	None	replace
88	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  startIndex,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseNextCharacter(source,    startIndex,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	15	None	replace
89	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(re,  source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(re,  source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(re,  source,  startIndex,  pos);	  char    c    =    parseNextCharacter(source,    startIndex,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	15	None	replace
90	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(startIndex,  pos);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(startIndex,  pos);	  ParsePosition    im    =    parsePosition(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
91	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(startIndex,  source);  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(startIndex,  source);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(startIndex,  source);	  ParsePosition    im    =    parsePosition(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
92	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  ParsePosition    im    =    parsePosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
93	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex,  pos.getEndIndex());  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex,  pos.getEndIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  startIndex,  pos.getEndIndex());	  ParsePosition    im    =    parsePosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
94	[BUG]  [BUGGY]  Character  c  =  parseAndIgnoreWhitespace(source,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndIgnoreWhitespace(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndIgnoreWhitespace(source,  startIndex);	  Character    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	9	None	replace
95	[BUG]  [BUGGY]  Character  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);	  Character    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	9	None	replace
96	[BUG]  [BUGGY]  Char  c  =  parseAndClearBuffer(source,  startIndex,  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndClearBuffer(source,  startIndex,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndClearBuffer(source,  startIndex,  pos);	  Char    c    =    parseAndClearBuffer(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
97	[BUG]  [BUGGY]  Char  c  =  parseAndClearBuffer(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndClearBuffer(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndClearBuffer(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Char    c    =    parseAndClearBuffer(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
98	[BUG]  [BUGGY]  char  c  =  parseAndClearCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndClearCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndClearCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseAndClearCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
99	[BUG]  [BUGGY]  Character  c  =  parseAndClearCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndClearCharacter(source,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearCharacter(source,  startIndex);	  char    c    =    parseAndClearCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
100	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	70	None	replace
101	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	70	None	replace
102	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);	  Number    im    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	70	None	replace
103	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  ParsePosition    re    =    parseNextPosition(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	63	None	replace
104	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex,  sign);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex,  sign);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex,  sign);	  ParsePosition    re    =    parseNextPosition(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	63	None	replace
105	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(startIndex,  source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(startIndex,  source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(startIndex,  source,  pos);	  ParsePosition    re    =    parseNextPosition(startIndex,    source);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	19	None	replace
106	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(re,  source,  startIndex,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseNextCharacter(re,  source,  startIndex,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(re,  source,  startIndex,  startIndex);	  String    c    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	18	None	replace
107	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  String    c    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	18	None	replace
108	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex,  def);  [CE]  cannot  find  symbol  def  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex,  def);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(source,  startIndex,  def);	  char    c    =    parseNextCharacter(source,    startIndex,    def);    	non-compiled	[CE]  cannot  find  symbol  def	57	None	replace
109	[BUG]  [BUGGY]  RelativeFormat.instance().setIndex(startIndex);  [CE]  cannot  find  symbol  RelativeFormat  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat.instance().setIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat.instance().setIndex(startIndex);	  RelativeFormat.instance().setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  RelativeFormat	55	None	replace
110	[BUG]  [BUGGY]  RelativeFormat.instance().setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat.instance().setIndex(endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat.instance().setIndex(endIndex);	  RelativeFormat.instance().setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	55	None	replace
111	[BUG]  [BUGGY]  RelativeFormat.instance().setStartIndex(startIndex);  [CE]  cannot  find  symbol  RelativeFormat  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat.instance().setStartIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat.instance().setStartIndex(startIndex);	  RelativeFormat.instance().setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  RelativeFormat	55	None	replace
112	[BUG]  [BUGGY]  RelativeFormat.instance().setIndex(startIndex,  initialIndex);  [CE]  cannot  find  symbol  RelativeFormat  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat.instance().setIndex(startIndex,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat.instance().setIndex(startIndex,  initialIndex);	  RelativeFormat.instance().setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  RelativeFormat	55	None	replace
113	[BUG]  [BUGGY]  String  n  =  parseNextCharacter(source,  pos);  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  n  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  n  =  parseNextCharacter(source,  pos);	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  incompatible  types	12	None	replace
114	[BUG]  [BUGGY]  Character  c  =  parseAndClearCharacter(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndClearCharacter(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearCharacter(source,  pos,  startIndex);	  Character    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
115	[BUG]  [BUGGY]  Character  c  =  parseAndClearCharacter(re,  source,  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndClearCharacter(re,  source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearCharacter(re,  source,  pos);	  Character    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
116	[BUG]  [BUGGY]  Char  c  =  parseAndClearCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndClearCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndClearCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  Char    c    =    parseAndClearCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
117	[BUG]  [BUGGY]  Char  c  =  parseAndClearCharacter(source,  startIndex,  im);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndClearCharacter(source,  startIndex,  im);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndClearCharacter(source,  startIndex,  im);	  Char    c    =    parseAndClearCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
118	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  pos);	  Number    im    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
119	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  false);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  false);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex,  false);	  Number    im    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
120	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  type);  [CE]  cannot  find  symbol  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  type);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex,  type);	  Number    im    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  type	51	None	replace
121	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos.getStartIndex());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos.getStartIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  pos.getStartIndex());	  ParsePosition    re    =    parseNextPosition(source,    pos.getStartIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
122	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex()  -  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex()  -  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex()  -  startIndex);	  ParsePosition    re    =    parseNextPosition(source,    pos.getStartIndex());    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
123	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getEndIndex());  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getEndIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos.getEndIndex());	  ParsePosition    re    =    parseNextPosition(source,    pos.getStartIndex());    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
124	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  startIndex,  pos.getStartIndex());  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  startIndex,  pos.getStartIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  startIndex,  pos.getStartIndex());	  ParsePosition    re    =    parseNextPosition(source,    pos.getStartIndex());    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
125	[BUG]  [BUGGY]  ReflectionFormat.instance().setIndex(startIndex  +  1);  return  null;  [CE]  cannot  find  symbol  ReflectionFormat  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance().setIndex(startIndex  +  1);  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance().setIndex(startIndex  +  1);  return  null;	  ReflectionFormat.instance().setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	61	None	replace
126	[BUG]  [BUGGY]  ReflectionFormat.instance().setIndex(startIndex,  pos);  return  null;  [CE]  cannot  find  symbol  ReflectionFormat  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance().setIndex(startIndex,  pos);  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance().setIndex(startIndex,  pos);  return  null;	  ReflectionFormat.instance().setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	61	None	replace
127	[BUG]  [BUGGY]  ReflectionFormat.instance().setIndex(startIndex  -  1);  return  null;  [CE]  cannot  find  symbol  ReflectionFormat  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance().setIndex(startIndex  -  1);  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance().setIndex(startIndex  -  1);  return  null;	  ReflectionFormat.instance().setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	61	None	replace
128	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex,  pos);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  startIndex,  pos);	  ParsePosition    im    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
129	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  ParsePosition    im    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
130	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex,  pos.getEndIndex());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex,  pos.getEndIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  startIndex,  pos.getEndIndex());	  ParsePosition    im    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
131	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex  +  1);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  startIndex  +  1);	  ParsePosition    re    =    parsePosition(source,    startIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
132	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex  +  1,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex  +  1,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  startIndex  +  1,  pos);	  ParsePosition    re    =    parsePosition(source,    startIndex    +    1);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	56	None	replace
133	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex  +  1  -  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex  +  1  -  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  startIndex  +  1  -  startIndex);	  ParsePosition    re    =    parsePosition(source,    startIndex    +    1);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	56	None	replace
134	[BUG]  [BUGGY]  Number  im  =  parsePreviousCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parsePreviousCharacter(source,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parsePreviousCharacter(source,  startIndex);	  Number    im    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
135	[BUG]  [BUGGY]  Number  im  =  parsePreviousCharacter(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parsePreviousCharacter(source,  pos,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parsePreviousCharacter(source,  pos,  startIndex);	  Number    im    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
136	[BUG]  [BUGGY]  String  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);	  String    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	7	None	replace
137	[BUG]  [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(pos,  source);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(pos,  source);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndIgnoreWhitespace(pos,  source);	  Char    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
138	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  return  null;  [CE]  cannot  find  symbol  c  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex);  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(initialIndex);  return  null;	  im.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  c	29	None	replace
139	[BUG]  [BUGGY]  n.setIndex(initialIndex);  return  null;  [CE]  cannot  find  symbol  n  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  n.setIndex(initialIndex);  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	n.setIndex(initialIndex);  return  null;	  im.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  n	29	None	replace
140	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex();  return  null;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  initialIndex  =  pos.getIndex();  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  initialIndex  =  pos.getIndex();  return  null;	  int    initialIndex    =    re.getIndex();    return    null;    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	30	None	replace
141	[BUG]  [BUGGY]  int  initialIndex  =  source.getIndex();  return  null;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  initialIndex  =  source.getIndex();  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  initialIndex  =  source.getIndex();  return  null;	  int    initialIndex    =    re.getIndex();    return    null;    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	30	None	replace
142	[BUG]  [BUGGY]  char  initialIndex  =  re.getIndex();  return  null;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  initialIndex  =  re.getIndex();  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  initialIndex  =  re.getIndex();  return  null;	  int    initialIndex    =    re.getIndex();    return    null;    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	30	None	replace
143	[BUG]  [BUGGY]  ReflectionFormat  re  =  parseNextCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat  re  =  parseNextCharacter(source,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat  re  =  parseNextCharacter(source,  startIndex);	  ReflectionFormat    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
144	[BUG]  [BUGGY]  ReflectionFormat  re  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat  re  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat  re  =  parseNextCharacter(source,  pos,  startIndex);	  ReflectionFormat    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
145	[BUG]  [BUGGY]  ReflectionFormat  re  =  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat  re  =  parsePreviousCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat  re  =  parsePreviousCharacter(source,  pos);	  ReflectionFormat    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
146	[BUG]  [BUGGY]  ReflectionFormat  re  =  parseRealFormat(source,  pos);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat  re  =  parseRealFormat(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat  re  =  parseRealFormat(source,  pos);	  ReflectionFormat    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
147	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  endIndex);	  Number    im    =    parseNextCharacter(source,    pos,    endIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	53	None	replace
148	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  initialIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  initialIndex);	  Number    im    =    parseNextCharacter(source,    pos,    endIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	53	None	replace
149	[BUG]  [BUGGY]  pos.setIndex(endIndex  +  1);  [CE]  cannot  find  symbol  endIndex  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(endIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(endIndex  +  1);	  pos.setIndex(startIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  endIndex	47	None	replace
150	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [CE]  cannot  find  symbol  c  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(initialIndex  +  1);	  pos.setIndex(startIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  c	47	None	replace
151	[BUG]  [BUGGY]  String  c  =  parseAndClearBuffer(re,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseAndClearBuffer(re,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndClearBuffer(re,  pos);	  String    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
152	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	34	None	replace
153	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  startIndex  =  pos.getIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	34	None	replace
154	[BUG]  [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  pos.getIndex();  [CE]  cannot  find  symbol  endIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(endIndex);  int  startIndex  =  pos.getIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  cannot  find  symbol  endIndex	34	None	replace
155	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Integer  startIndex  =  pos.getIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Integer  startIndex  =  pos.getIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	34	None	replace
156	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseNextCharacter(source,    startIndex,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	16	None	replace
157	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER,  im);  [CE]  cannot  find  symbol  im  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER,  im);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER,  im);	  char    c    =    parseNextCharacter(source,    startIndex,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  cannot  find  symbol  im	16	None	replace
158	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	3	None	replace
159	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex,  im);  [CE]  cannot  find  symbol  im  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex,  im);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re  =  parseNextCharacter(source,  pos,  startIndex,  im);	  re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  im	3	None	replace
160	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex,  sign);  [CE]  cannot  find  symbol  sign  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex,  sign);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re  =  parseNextCharacter(source,  pos,  startIndex,  sign);	  re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  sign	3	None	replace
161	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos.getEndIndex());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  pos.getEndIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  pos.getEndIndex());	  Number    im    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
162	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getStartIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getStartIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(initialIndex);  int  startIndex  =  pos.getStartIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	35	None	replace
163	[BUG]  [BUGGY]  int  startIndex  =  pos.getStartIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  startIndex  =  pos.getStartIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  startIndex  =  pos.getStartIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	35	None	replace
164	[BUG]  [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  pos.getStartIndex();  [CE]  cannot  find  symbol  endIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  pos.getStartIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(endIndex);  int  startIndex  =  pos.getStartIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  cannot  find  symbol  endIndex	35	None	replace
165	[BUG]  [BUGGY]  Integer  startIndex  =  pos.getStartIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Integer  startIndex  =  pos.getStartIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Integer  startIndex  =  pos.getStartIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	35	None	replace
166	[BUG]  [BUGGY]  ParsePosition  re  =  parsePreviousPosition(source,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePreviousPosition(source,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePreviousPosition(source,  startIndex);	  ParsePosition    re    =    parsePreviousPosition(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	20	None	replace
167	[BUG]  [BUGGY]  ParsePosition  im  =  parsePreviousPosition(source,  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePreviousPosition(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePreviousPosition(source,  pos);	  ParsePosition    re    =    parsePreviousPosition(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
168	[BUG]  [BUGGY]  String  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	68	None	replace
169	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(re,  source,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndIgnoreWhitespace(re,  source,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndIgnoreWhitespace(re,  source,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	68	None	replace
170	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  startIndex,  endIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  startIndex,  endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  startIndex,  endIndex);	  ParsePosition    re    =    parseNextPosition(source,    startIndex,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	5	None	replace
171	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex(initialIndex);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  startIndex  =  pos.getIndex(initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  startIndex  =  pos.getIndex(initialIndex);	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex(startIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	72	None	replace
172	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex(startIndex);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex(startIndex);	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex(startIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	72	None	replace
173	[BUG]  [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  pos.getIndex(startIndex);  [CE]  cannot  find  symbol  endIndex  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(endIndex);  int  startIndex  =  pos.getIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(endIndex);  int  startIndex  =  pos.getIndex(startIndex);	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	72	None	replace
174	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex(initialIndex);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex(initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex(initialIndex);	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex(startIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	72	None	replace
175	[BUG]  [BUGGY]  n.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  n  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  n.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	n.setIndex(startIndex);  pos.setIndex(endIndex);	          pos.setIndex(startIndex);    pos.setIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol  n	33	None	replace
176	[BUG]  [BUGGY]  Char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseNextCharacter(source,    startIndex,    def);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
177	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  startIndex,  endIndex);	  char    c    =    parseNextCharacter(source,    startIndex,    def);    	non-compiled	[CE]  cannot  find  symbol  endIndex	57	None	replace
178	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  n);  [CE]  cannot  find  symbol  n  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex,  n);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  startIndex,  n);	  Number    im    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  n	50	None	replace
179	[BUG]  [BUGGY]  PosePosition  pos  =  parseNextPosition(source,  startIndex);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  PosePosition  pos  =  parseNextPosition(source,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	PosePosition  pos  =  parseNextPosition(source,  startIndex);	  pos.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
180	[BUG]  [BUGGY]  char  c  =  parseAndClearBuffer(source,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndClearBuffer(source,  endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndClearBuffer(source,  endIndex);	  char    c    =    parseAndClearBuffer(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	39	None	replace
181	[BUG]  [BUGGY]  Character  c  =  parseAndClearBuffer(source,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndClearBuffer(source,  endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearBuffer(source,  endIndex);	  Character    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	40	None	replace
182	[BUG]  [BUGGY]  pos.setIndex(startIndex);  return  null;  [CE]  cannot  find  symbol  c  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  pos.setIndex(startIndex);  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(startIndex);  return  null;	  im.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  c	29	None	replace
183	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER,  realFormat);	  char    c    =    parseNextCharacter(source,    startIndex,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	16	None	replace
184	[BUG]  [BUGGY]  Ref.setIndex(startIndex);  [CE]  cannot  find  symbol  Ref  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Ref.setIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Ref.setIndex(startIndex);	  re.setIndex(endIndex);    	non-compiled	[CE]  cannot  find  symbol  Ref	21	None	replace
185	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex  -  1);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex  -  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  startIndex  -  1);	  ParsePosition    im    =    parsePosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
186	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex  +  1);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex  +  1);	  ParsePosition    re    =    parseNextPosition(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	63	None	replace
187	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);	  char    c    =    parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	68	None	replace
188	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	68	None	replace
189	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  pos  +  1);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePosition(source,  pos  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  pos  +  1);	  ParsePosition    re    =    parsePosition(source,    startIndex    +    1);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	56	None	replace
190	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  endIndex  +  1);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePosition(source,  endIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  endIndex  +  1);	  ParsePosition    re    =    parsePosition(source,    startIndex    +    1);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	56	None	replace
191	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  }  [CE]  cannot  find  symbol  c  [FE]    AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  }  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	if(startIndex  <  0)  {  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  }	          pos.setIndex(startIndex);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  c	37	None	replace
192	[BUG]  [BUGGY]  Char  n  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  n  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  n  =  parseNextCharacter(source,  pos);	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
193	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  endIndex);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  endIndex);	  RelativeFormat    im    =    new    RelativeFormat(deFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
194	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex(),  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex(),  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex(),  startIndex);	  ParsePosition    re    =    parseNextPosition(source,    pos.getStartIndex());    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
195	[BUG]  [BUGGY]  Char  c  =  parseAndClearBuffer(source,  startIndex  +  1);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndClearBuffer(source,  startIndex  +  1);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndClearBuffer(source,  startIndex  +  1);	  Char    c    =    parseAndClearBuffer(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
196	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  re,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  re,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  re,  startIndex);	  char    c    =    parseNextCharacter(re,    source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	17	None	replace
197	[BUG]  [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(startIndex);  parsePreviousCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        parseNextCharacter(source,    pos);    pos.setIndex(startIndex);  parsePreviousCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
198	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex,  im);  [CE]  cannot  find  symbol  im  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex,  im);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(source,  startIndex,  im);	  String    c    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  im	14	None	replace
199	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	69	None	replace
200	[BUG]  [BUGGY]  Number  im  =  parsePreviousCharacter(source,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parsePreviousCharacter(source,  pos.getIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parsePreviousCharacter(source,  pos.getIndex());	  Number    im    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
201	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  RelativeFormat    im    =    new    RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
202	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex,  realFormat);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex,  realFormat);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parseNextCharacter(source,  pos,  startIndex,  realFormat);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	64	None	replace
203	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  [CE]  cannot  find  symbol  c  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  c	32	None	replace
204	[BUG]  [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  [CE]  cannot  find  symbol  c  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  if(startIndex  >=  -1)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	if(startIndex  >=  -1)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  c	32	None	replace
205	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  c  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(startIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  c	32	None	replace
206	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex(startIndex);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  startIndex  =  pos.getIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  startIndex  =  pos.getIndex(startIndex);	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex(startIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	72	None	replace
207	[BUG]  [BUGGY]  ParsePosition  re  =  parsePreviousPosition(source,  pos,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePreviousPosition(source,  pos,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePreviousPosition(source,  pos,  startIndex);	  ParsePosition    re    =    parsePreviousPosition(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	20	None	replace
208	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex  -  1);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex  -  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  startIndex  -  1);	  ParsePosition    im    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
209	[BUG]  [BUGGY]  RelativeFormat.instance().setIndex(startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  RelativeFormat  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat.instance().setIndex(startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat.instance().setIndex(startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  RelativeFormat.instance().setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  RelativeFormat	55	None	replace
210	[BUG]  [BUGGY]  RelativeFormat.instance().setIndex(startIndex  -  startIndex);  [CE]  cannot  find  symbol  RelativeFormat  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat.instance().setIndex(startIndex  -  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat.instance().setIndex(startIndex  -  startIndex);	  RelativeFormat.instance().setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  RelativeFormat	55	None	replace
211	[BUG]  [BUGGY]  RelativeFormat.instance().setIndex(startIndex,  pos);  [CE]  cannot  find  symbol  RelativeFormat  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat.instance().setIndex(startIndex,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat.instance().setIndex(startIndex,  pos);	  RelativeFormat.instance().setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  RelativeFormat	55	None	replace
212	[BUG]  [BUGGY]  char  c  =  parsePreviousCharacter(source,  startIndex  +  1);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parsePreviousCharacter(source,  startIndex  +  1);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parsePreviousCharacter(source,  startIndex  +  1);	  char    c    =    parsePreviousCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
213	[BUG]  [BUGGY]  char  c  =  parseAndClearCharacter(source,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndClearCharacter(source,  endIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndClearCharacter(source,  endIndex);	  char    c    =    parseAndClearCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	23	None	replace
214	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);	  String    c    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	71	None	replace
215	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  String    c    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	71	None	replace
216	[BUG]  [BUGGY]  Char  c  =  parseAndClearBuffer(source,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndClearBuffer(source,  pos);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndClearBuffer(source,  pos);	  String    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
217	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex  +  1);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex  +  1);	  Number    im    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
218	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  realFormat);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex,  realFormat);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex,  realFormat);	  Number    im    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	51	None	replace
219	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex  +  1);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re  =  parseNextCharacter(source,  pos,  startIndex  +  1);	  re    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	3	None	replace
220	[BUG]  [BUGGY]  ReflectionFormat.instance().setIndex(initialIndex);  return  null;  [CE]  cannot  find  symbol  ReflectionFormat  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance().setIndex(initialIndex);  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance().setIndex(initialIndex);  return  null;	  ReflectionFormat.instance().setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	61	None	replace
221	[BUG]  [BUGGY]  ReflectionFormat.instance().setIndex(endIndex);  return  null;  [CE]  cannot  find  symbol  endIndex  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance().setIndex(endIndex);  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance().setIndex(endIndex);  return  null;	  ReflectionFormat.instance().setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  endIndex	61	None	replace
222	[BUG]  [BUGGY]  ReflectionFormat.instance().setIndex(initialIndex);  [CE]  cannot  find  symbol  ReflectionFormat  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance().setIndex(initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance().setIndex(initialIndex);	  ReflectionFormat.instance().setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	61	None	replace
223	[BUG]  [BUGGY]  Char  c  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseNextCharacter(source,  pos,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
224	[BUG]  [BUGGY]  int  startIndex  =  pos.getIndex();  return  null;  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  startIndex  =  pos.getIndex();  return  null;  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  startIndex  =  pos.getIndex();  return  null;	  int    initialIndex    =    re.getIndex();    return    null;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	30	None	replace
225	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex(initialIndex);  }  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex(initialIndex);  }  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	if(startIndex  <  0)  {  pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex(initialIndex);  }	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex(startIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	72	None	replace
226	[BUG]  [BUGGY]  int  startIndex  =  pos.getEndIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  startIndex  =  pos.getEndIndex();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  startIndex  =  pos.getEndIndex();	          pos.setIndex(startIndex);    int    startIndex    =    pos.getStartIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	35	None	replace
227	[BUG]  [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  startIndex  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  startIndex  =  parseNextCharacter(source,  pos);	          pos.setIndex(startIndex);    int    startIndex    =    pos.getIndex();    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	34	None	replace
228	[BUG]  [BUGGY]  Character  c  =  parseAndClearCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndClearCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Character    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
229	[BUG]  [BUGGY]  Character  c  =  parseAndClearBuffer(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndClearBuffer(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearBuffer(source,  pos,  startIndex);	  Character    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
230	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos  +  1);	  Number    im    =    parseNextCharacter(source,    pos    +    startIndex);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	58	None	replace
231	[BUG]  [BUGGY]  ReflectionFormat.instance  =  new  ReflectionFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex);  [CE]  cannot  find  symbol  ReflectionFormat  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance  =  new  ReflectionFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance  =  new  ReflectionFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex);	  ReflectionFormat.instance.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	60	None	replace
232	[BUG]  [BUGGY]  ReflectionFormat.instance  =  re.getInstance();  [CE]  cannot  find  symbol  ReflectionFormat  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance  =  re.getInstance();  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance  =  re.getInstance();	  ReflectionFormat.instance.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	60	None	replace
233	[BUG]  [BUGGY]  ReflectionFormat.instance  =  new  ReflectionFormat(startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  ReflectionFormat  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat.instance  =  new  ReflectionFormat(startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance  =  new  ReflectionFormat(startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  ReflectionFormat.instance.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	60	None	replace
234	[BUG]  [BUGGY]  String  c  =  parseAndClearBuffer(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseAndClearBuffer(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndClearBuffer(source,  pos,  startIndex);	  String    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
235	[BUG]  [BUGGY]  Character  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Character  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Character    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	9	None	replace
236	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(re,  source,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(re,  source,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(re,  source,  DEFAULT_IMAGINARY_CHARACTER);	  String    c    =    parseNextCharacter(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	71	None	replace
237	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  DEFULT_IMAGINARY_CHARACTER  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  startIndex,  DEFULT_IMAGINARY_CHARACTER);	  char    c    =    parseNextCharacter(source,    startIndex,    def);    	non-compiled	[CE]  cannot  find  symbol  DEFULT_IMAGINARY_CHARACTER	57	None	replace
238	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos.getIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  pos.getIndex());	  ParsePosition    im    =    parsePosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
239	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos.getIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  pos.getIndex());	  ParsePosition    im    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
240	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  initialIndex);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  initialIndex);	  ParsePosition    im    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
241	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  endIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parseNextCharacter(source,  pos,  endIndex);	  int    n    =    parseNextCharacter(source,    pos,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	64	None	replace
242	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(initialIndex,  source);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(initialIndex,  source);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(initialIndex,  source);	  ParsePosition    re    =    parseNextPosition(startIndex,    source);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	19	None	replace
243	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(pos,  source);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(pos,  source);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(pos,  source);	  ParsePosition    re    =    parseNextPosition(startIndex,    source);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	19	None	replace
244	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  RelativeFormat    im    =    new    RelativeFormat(deFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
245	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  initialIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  initialIndex);	  RelativeFormat    im    =    new    RelativeFormat(deFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
246	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex,  initialIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex,  initialIndex);	  ParsePosition    re    =    parseNextPosition(source,    pos,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	63	None	replace
247	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  [CE]  cannot  find  symbol  c  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	if(startIndex  <  0)  {  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(startIndex);    pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  c	32	None	replace
248	[BUG]  [BUGGY]  Char  c  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseNextCharacter(source,  pos);	  char    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	add	                pos.setIndex(startIndex);        parseNextCharacter(source,    pos);    pos.setIndex(initialIndex);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	36	24	add
250	[BUG]  [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]          pos.setIndex(startIndex);    parseNextCharacter(source,  pos);  pos.setIndex(initialIndex);  parseNextCharacter(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	                pos.setIndex(startIndex);        parseNextCharacter(source,    pos);    pos.setIndex(initialIndex);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	36	24	add
251	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  startIndex,  pos,  initialIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  startIndex,  pos,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  startIndex,  pos,  initialIndex);	  ParsePosition    re    =    parseNextPosition(source,    startIndex,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	5	None	replace
252	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos  +  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  pos  +  1);	  ParsePosition    re    =    parsePosition(source,    startIndex    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	56	None	replace
253	[BUG]  [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndIgnoreWhitespace(source,  pos,  startIndex);	  char    c    =    parseAndIgnoreWhitespace(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
254	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);	  RelativeFormat    im    =    new    RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
255	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos.getIndex());  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos.getIndex());	  Number    im    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	50	None	replace
256	[BUG]  [BUGGY]  RelativeFormat.relativeFormat().setIndex(startIndex);  [CE]  cannot  find  symbol  RelativeFormat  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  RelativeFormat.relativeFormat().setIndex(startIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat.relativeFormat().setIndex(startIndex);	  RelativeFormat.instance().setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  RelativeFormat	55	None	replace
257	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  pos,  initialIndex);	  ParsePosition    im    =    parsePosition(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
258	[BUG]  [BUGGY]  ReflectionFormat  re  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ReflectionFormat  re  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat  re  =  parseAndIgnoreWhitespace(source,  pos);	  ReflectionFormat    re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
259	[BUG]  [BUGGY]  String  c  =  parseAndClearCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parseAndClearCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndClearCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  String    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
260	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex()  -  1);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex()  -  1);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex()  -  1);	  ParsePosition    re    =    parseNextPosition(source,    pos.getStartIndex());    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	65	None	replace
261	[BUG]  [BUGGY]  String  c  =  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  String  c  =  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parsePreviousCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  String    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
262	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  }  else  {  return  null;  }  [CE]  cannot  find  symbol  c  [FE]    AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  }  else  {  return  null;  }  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	if(startIndex  <  0)  {  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  }  else  {  return  null;  }	          pos.setIndex(startIndex);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  c	37	None	replace
263	[BUG]  [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  c  [FE]      AssertionFailedError    [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  if(startIndex  <  0)  {  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	if(startIndex  <  0)  {  pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(startIndex);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  c	37	None	replace
264	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos,  initialIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  pos,  initialIndex);	  ParsePosition    im    =    parseNextPosition(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
265	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex,  pos,  initialIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex,  pos,  initialIndex);  [BUGGY]      char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  startIndex,  pos,  initialIndex);	  ParsePosition    re    =    parsePosition(source,    startIndex,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
266	[BUG]  [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Char    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
267	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();      [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [BUGGY]      int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER,  startIndex);	  char    c    =    parseAndIgnoreWhitespace(source,    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	68	None	replace
