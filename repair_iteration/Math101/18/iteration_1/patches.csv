bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  re  =  parseNextCharacter(source,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re  =  parseNextCharacter(source,  startIndex);	      re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	17	None	replace
2	[BUG]  [BUGGY]  ReflectionFormat  re  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ReflectionFormat  re  =  parseNextCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat  re  =  parseNextCharacter(source,  pos);	      re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
3	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  re  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re  =  parseNextCharacter(source,  pos,  startIndex);	      re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	17	None	replace
4	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  startIndex);	      ParsePosition    re    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
5	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  startIndex,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  startIndex,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  startIndex,  pos);	      ParsePosition    re    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
6	[BUG]  [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  im  =  parseNextPosition(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parseNextPosition(source,  pos);	      ParsePosition    re    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
7	[BUG]  [BUGGY]  String  c  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  String  c  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndIgnoreWhitespace(source,  pos);	  char    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  incompatible  types	14	None	replace
8	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  startIndex);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  startIndex);	  char    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	14	None	replace
9	[BUG]  [BUGGY]  Character  c  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Character  c  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndIgnoreWhitespace(source,  pos);	  char    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  incompatible  types	14	None	replace
10	[BUG]  [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  startIndex);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndIgnoreWhitespace(source,  startIndex);	  char    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
11	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  int  n  =  parseNextCharacter(source,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parseNextCharacter(source,  startIndex);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	2	None	replace
12	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  c  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  n  =  parseNextCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  n  =  parseNextCharacter(source,  pos);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  c	2	None	replace
13	[BUG]  [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  int  n  =  parsePreviousCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parsePreviousCharacter(source,  pos);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
14	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  String  c  =  parseNextCharacter(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(source,  startIndex);	  char    c    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	7	None	replace
15	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  pos);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  startIndex,  pos);	  char    c    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	7	None	replace
16	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  startIndex,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	7	None	replace
17	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(re,  source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parseNextCharacter(re,  source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(re,  source,  startIndex);	  char    c    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	7	None	replace
18	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  String  c  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(source,  pos,  startIndex);	  String    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	9	None	replace
19	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(startIndex,  source);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  re  =  parseNextPosition(startIndex,  source);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(startIndex,  source);	      ParsePosition    re    =    parseNextPosition(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
20	[BUG]  [BUGGY]  ParsePosition  re  =  parsePreviousPosition(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  re  =  parsePreviousPosition(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePreviousPosition(source,  pos);	      ParsePosition    re    =    parseNextPosition(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
21	[BUG]  [BUGGY]  re.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  re.setIndex(endIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re.setIndex(endIndex);	      re.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	1	None	replace
22	[BUG]  [BUGGY]  String  c  =  parseAndClearCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  String  c  =  parseAndClearCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndClearCharacter(source,  pos);	  char    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
23	[BUG]  [BUGGY]  char  c  =  parseAndClearCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parseAndClearCharacter(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndClearCharacter(source,  startIndex);	  char    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
24	[BUG]  [BUGGY]  Character  c  =  parseAndClearCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Character  c  =  parseAndClearCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearCharacter(source,  pos);	  char    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
25	[BUG]  [BUGGY]  Char  c  =  parseAndClearCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Char  c  =  parseAndClearCharacter(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndClearCharacter(source,  startIndex);	  char    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
26	[BUG]  [BUGGY]  String  c  =  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  String  c  =  parsePreviousCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parsePreviousCharacter(source,  pos);	  char    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
27	[BUG]  [BUGGY]  char  c  =  parsePreviousCharacter(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parsePreviousCharacter(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parsePreviousCharacter(source,  startIndex);	  char    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
28	[BUG]  [BUGGY]  Character  c  =  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Character  c  =  parsePreviousCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parsePreviousCharacter(source,  pos);	  char    c    =    parsePreviousCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
29	[BUG]  [BUGGY]  im.setIndex(initialIndex);  return  null;  [CE]  cannot  find  symbol  im  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  im.setIndex(initialIndex);  return  null;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	im.setIndex(initialIndex);  return  null;	      re.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  im	18	None	replace
30	[BUG]  [BUGGY]  int  initialIndex  =  re.getIndex();  return  null;  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  int  initialIndex  =  re.getIndex();  return  null;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  initialIndex  =  re.getIndex();  return  null;	      re.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	18	None	replace
31	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	add	        pos.setIndex(startIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
32	[BUG]  [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(startIndex);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	        pos.setIndex(startIndex);    pos.setIndex(startIndex);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	2	add
33	[BUG]  [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]      pos.setIndex(startIndex);  pos.setIndex(endIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	        pos.setIndex(startIndex);    pos.setIndex(endIndex);	  	non-compiled	[CE]  cannot  find  symbol  endIndex	3	None	add
34	[BUG]  [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex();  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	        pos.setIndex(startIndex);    int  startIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
35	[BUG]  [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getStartIndex();  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getStartIndex();  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	        pos.setIndex(startIndex);    int  startIndex  =  pos.getStartIndex();	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]      pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	add	        pos.setIndex(startIndex);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	3	24	add
37	[BUG]  [BUGGY]      pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]      pos.setIndex(startIndex);  parseNextCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	        pos.setIndex(startIndex);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	3	24	add
38	[BUG]  [BUGGY]  String  c  =  parseAndClearBuffer(source,  pos);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  String  c  =  parseAndClearBuffer(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseAndClearBuffer(source,  pos);	  char    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
39	[BUG]  [BUGGY]  char  c  =  parseAndClearBuffer(source,  startIndex);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parseAndClearBuffer(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndClearBuffer(source,  startIndex);	  char    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
40	[BUG]  [BUGGY]  Character  c  =  parseAndClearBuffer(source,  pos);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Character  c  =  parseAndClearBuffer(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Character  c  =  parseAndClearBuffer(source,  pos);	  char    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
41	[BUG]  [BUGGY]  Char  c  =  parseAndClearBuffer(source,  startIndex);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Char  c  =  parseAndClearBuffer(source,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndClearBuffer(source,  startIndex);	  char    c    =    parseAndClearBuffer(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
42	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  re  =  parsePosition(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  pos);	      ParsePosition    re    =    parsePosition(source,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	13	None	replace
43	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  im  =  parsePosition(source,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  startIndex);	      ParsePosition    re    =    parsePosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
44	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex,  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  startIndex,  pos);	      ParsePosition    re    =    parsePosition(source,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	13	None	replace
45	[BUG]  [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  im  =  parsePosition(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  im  =  parsePosition(source,  pos);	      ParsePosition    re    =    parsePosition(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
46	[BUG]  [BUGGY]  pos.setIndex(endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  pos.setIndex(endIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(endIndex);	      pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  endIndex	4	None	replace
47	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  1);  [CE]  cannot  find  symbol  c  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  pos.setIndex(startIndex  +  1);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(startIndex  +  1);	      pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  c	4	None	replace
48	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  c  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  pos.setIndex(initialIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	pos.setIndex(initialIndex);	      pos.setIndex(startIndex);    	non-compiled	[CE]  cannot  find  symbol  c	4	None	replace
49	[BUG]  [BUGGY]  re.setIndex(endIndex);  return  null;  [CE]  cannot  find  symbol  endIndex  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  re.setIndex(endIndex);  return  null;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	re.setIndex(endIndex);  return  null;	      re.setIndex(startIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  endIndex	6	None	replace
50	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Number  im  =  parseNextCharacter(source,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  startIndex);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	5	None	replace
51	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  startIndex);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	5	None	replace
52	[BUG]  [BUGGY]  Number  im  =  parsePreviousCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Number  im  =  parsePreviousCharacter(source,  pos);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parsePreviousCharacter(source,  pos);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
53	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  endIndex);  [CE]  cannot  find  symbol  endIndex  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  endIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  endIndex);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol  endIndex	5	None	replace
54	[BUG]  [BUGGY]  im.setIndex(initialIndex);  [CE]  cannot  find  symbol  im  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  im.setIndex(initialIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	im.setIndex(initialIndex);	      re.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  im	16	None	replace
55	[BUG]  [BUGGY]  RelativeFormat.instance().setIndex(initialIndex);  [CE]  cannot  find  symbol  RelativeFormat  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  RelativeFormat.instance().setIndex(initialIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat.instance().setIndex(initialIndex);	      re.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol  RelativeFormat	16	None	replace
56	[BUG]  [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex  +  1);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  re  =  parsePosition(source,  startIndex  +  1);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parsePosition(source,  startIndex  +  1);	      ParsePosition    re    =    parsePosition(source,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	13	None	replace
57	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  def);  [CE]  cannot  find  symbol  def  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parseNextCharacter(source,  startIndex,  def);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  startIndex,  def);	  char    c    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  cannot  find  symbol  def	7	None	replace
58	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos  +  startIndex);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos  +  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos  +  startIndex);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	5	None	replace
59	[BUG]  [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Char  c  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndIgnoreWhitespace(source,  pos);	  char    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
60	[BUG]  [BUGGY]  ReflectionFormat.instance.setIndex(startIndex);  [CE]  package  ReflectionFormat  does  not  exist  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ReflectionFormat.instance.setIndex(startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance.setIndex(startIndex);	      re.setIndex(initialIndex);    	non-compiled	[CE]  package  ReflectionFormat  does  not  exist	16	None	replace
61	[BUG]  [BUGGY]  ReflectionFormat.instance().setIndex(startIndex);  return  null;  [CE]  cannot  find  symbol  ReflectionFormat  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ReflectionFormat.instance().setIndex(startIndex);  return  null;  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ReflectionFormat.instance().setIndex(startIndex);  return  null;	      re.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  cannot  find  symbol  ReflectionFormat	18	None	replace
62	[BUG]  [BUGGY]  Char  c  =  parseAndClearCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Char  c  =  parseAndClearCharacter(source,  pos);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Char  c  =  parseAndClearCharacter(source,  pos);	  char    c    =    parseAndClearCharacter(source,    pos);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
63	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos,  startIndex);	      ParsePosition    re    =    parseNextPosition(source,    pos);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
64	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  int  n  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	int  n  =  parseNextCharacter(source,  pos,  startIndex);	      int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	2	None	replace
65	[BUG]  [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex());  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex());  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	ParsePosition  re  =  parseNextPosition(source,  pos.getStartIndex());	      ParsePosition    re    =    parseNextPosition(source,    startIndex);    	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	11	None	replace
66	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(DEFAULT_IMAGINARY_CHARACTER,  startIndex);	      re.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
67	[BUG]  [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	RelativeFormat  im  =  new  RelativeFormat(deFAULT_IMAGINARY_CHARACTER,  startIndex);	      re.setIndex(initialIndex);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
68	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  char    c    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  method  parseAndIgnoreWhitespace  in  class  ComplexFormat  cannot  be  applied  to  given  types;	14	None	replace
69	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  startIndex);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  startIndex);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	char  c  =  parseNextCharacter(source,  pos,  startIndex);	  char    c    =    parseNextCharacter(source,    startIndex);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	7	None	replace
70	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	Number  im  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	5	None	replace
71	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]  String  c  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	String  c  =  parseNextCharacter(source,  pos,  DEFAULT_IMAGINARY_CHARACTER);	  String    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  method  parseNextCharacter  in  class  ComplexFormat  cannot  be  applied  to  given  types;	9	None	replace
72	[BUG]  [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex(startIndex);  [CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();    [BUGGY]      pos.setIndex(startIndex);  int  startIndex  =  pos.getIndex(startIndex);  [BUGGY]    char  c  =  parseNextCharacter(source,  pos);  int  sign  =  0;  switch  (c)  {  case  0  :    return  new  Complex(re.doubleValue(),  0.0);  case  '-'  :  sign  =  -1;  break;  case  '+'  :  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	        pos.setIndex(startIndex);    int  startIndex  =  pos.getIndex(startIndex);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  parse(String,ParsePosition)	3	None	add
