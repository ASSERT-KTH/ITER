bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setPosition(pos.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseAndIgnoreWhitespace(source,  pos);  pos.setPosition(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseAndIgnoreWhitespace(source,  pos);  pos.setPosition(pos.getIndex()  -  1);	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	75	26	add
3	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	75	26	add
4	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	75	26	add
5	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	75	26	add
6	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	75	26	add
7	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	75	26	add
8	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	75	26	add
9	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	75	26	add
10	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	75	26	add
11	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	75	26	add
12	[BUG]  [BUGGY]  parseNextPosition(source,  pos);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseNextPosition(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseNextPosition(source,  pos);	          parseNextCharacter(source,    pos);    parseNextPosition(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getPosition()  -  1);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getPosition()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getPosition()  -  1);	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setPosition(pos.getPosition()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
14	[BUG]  [BUGGY]  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex());	  parseWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
15	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	2	add
16	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	2	add
17	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	47	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	47	26	add
19	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	47	26	add
20	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	47	None	add
21	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	77	26	add
22	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	77	26	add
23	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	77	26	add
24	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	77	26	add
25	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	77	26	add
26	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	77	26	add
27	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setPosition(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
28	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	13	26	add
29	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	13	26	add
30	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  ParseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  ParseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    ParseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
31	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	13	26	add
32	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	13	26	add
33	[BUG]  [BUGGY]  nf.setIndex(pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  nf.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	nf.setIndex(pos.getIndex());	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    NumberFormat    nf    =    new    NumberFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	49	26	add
35	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	49	26	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	49	26	add
37	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	49	26	add
38	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  ParseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  ParseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    ParseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
39	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
40	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
41	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
42	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
43	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  position	8	None	add
44	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	69	26	add
45	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	69	26	add
46	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	69	26	add
47	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	69	26	add
48	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	69	26	add
49	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	69	26	add
50	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	69	26	add
51	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	69	26	add
52	[BUG]  [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
53	[BUG]  [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
54	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	16	26	add
55	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	16	26	add
56	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	16	26	add
57	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	16	26	add
58	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	16	None	add
59	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
60	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StringIndexOutOfBoundsException  	24	2	add
61	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  position  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  position	24	None	add
62	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  [CE]  cannot  find  symbol  position  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  position	24	None	add
63	[BUG]  [BUGGY]  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex());	  parsePreviousCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	26	26	add
65	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	26	26	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	26	26	add
67	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	26	26	add
68	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  position  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(position.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  position	26	None	add
69	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  byseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  byseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  byseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
70	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StackOverflowError  	32	26	add
71	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StackOverflowError  	32	26	add
72	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	32	26	add
73	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	32	26	add
74	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  byseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  byseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  byseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
75	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [CE]  cannot  find  symbol  position  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol  position	32	None	add
76	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StringIndexOutOfBoundsException  	65	26	add
77	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StringIndexOutOfBoundsException  	65	26	add
78	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  position  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex());    pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  position	65	None	add
79	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex());  [CE]  cannot  find  symbol  position  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  position	65	None	add
80	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getItemCount()  -  1);  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getItemCount()  -  1);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getItemCount()  -  1);  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
81	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	ParsePosition  pos  =  parsePosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  if(pos.getIndex()    ==    -1)    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
82	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  ParsePosition  pos  =  parsePosition(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	ParsePosition  pos  =  parsePosition(source,  pos);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
83	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  +  1);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(source.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(source.getIndex()  +  1);	  pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	28	26	add
85	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	28	26	add
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	28	26	add
87	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	28	26	add
88	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  position  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol  position	28	None	add
89	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  byseNextCharacter(source,  pos);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  byseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  byseNextCharacter(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
90	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextPosition(source,  pos);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  ParsePosition  pos  =  parseNextPosition(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	ParsePosition  pos  =  parseNextPosition(source,  pos);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
91	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex()  -  1);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
92	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  +  1);  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex()  +  1);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
93	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
94	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	ParsePosition  pos  =  parseNextCharacter(source,  pos);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
95	[BUG]  [BUGGY]  parseNextIndex(source,  pos);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseNextIndex(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseNextIndex(source,  pos);	          parseNextCharacter(source,    pos);    parseNextIndex(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
96	[BUG]  [BUGGY]  parsePreviousIndex(source,  pos);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parsePreviousIndex(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parsePreviousIndex(source,  pos);	          parseNextCharacter(source,    pos);    parseNextIndex(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
97	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	67	26	add
98	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	67	26	add
99	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  [CE]  cannot  find  symbol  position  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);	  	non-compiled	[CE]  cannot  find  symbol  position	67	None	add
100	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  2);  [CE]  cannot  find  symbol  position  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  2);	  	non-compiled	[CE]  cannot  find  symbol  position	67	None	add
101	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  3);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  3);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	67	26	add
102	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  3);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  3);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  3);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	67	26	add
103	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  -  1)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(pos.getIndex()  -  1)+  1;  [BUGGY]        [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(pos.getIndex()  -  1)+  1;	  pos.setIndex(pos.getIndex())+    1;    	non-compiled	[CE]  not  a  statement	51	None	replace
104	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
105	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
106	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
107	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
108	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	11	26	add
109	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	11	26	add
110	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
111	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
113	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
115	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	24	add
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
117	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
119	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
121	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	1	26	add
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	34	26	add
123	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	34	26	add
124	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	34	24	add
126	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	34	24	add
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);	  	compilable	  [FE]  AssertionFailedError  	34	26	add
128	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);	  	compilable	  [FE]  AssertionFailedError  	34	26	add
129	[BUG]  [BUGGY]  ParseIndexOutOfBoundsException  e  =  new  ParseIndexOutOfBoundsException(source);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  ParseIndexOutOfBoundsException  e  =  new  ParseIndexOutOfBoundsException(source);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	ParseIndexOutOfBoundsException  e  =  new  ParseIndexOutOfBoundsException(source);	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    ParseIndexOutOfBoundsException    e    =    new    ParseIndexOutOfBoundsException(source);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
130	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	add
131	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	add
132	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	add
133	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	add
134	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(position.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  position	41	None	add
135	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  byseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  byseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  byseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	6	26	add
137	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	6	26	add
138	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	6	26	add
139	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	6	26	add
140	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	6	26	add
142	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	6	26	add
143	[BUG]  [BUGGY]  nf.parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  nf.parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	nf.parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	55	26	add
145	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	55	26	add
146	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(position.getIndex());  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	55	None	add
147	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  pos.setIndex(position.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	55	None	add
148	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	add
149	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	71	26	add
150	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	71	26	add
151	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	71	26	add
152	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	71	26	add
153	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
154	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);	  	compilable	  [FE]  StackOverflowError  	71	26	add
155	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  2);	  	compilable	  [FE]  StackOverflowError  	71	26	add
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	30	26	add
157	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	30	26	add
158	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  position  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(position.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(position.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  position	30	None	add
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	30	26	add
160	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	30	26	add
161	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  byseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  byseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  byseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
162	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	add
163	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	2	add
164	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
165	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	4	26	add
166	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	4	26	add
167	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	26	add
168	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	4	26	add
169	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setPosition(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
170	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  ParsePosition  pos  =  parseNextCharacter(source);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	ParsePosition  pos  =  parseNextCharacter(source);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parseNextCharacter(source);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
171	[BUG]  [BUGGY]  nf.parseWhitespace(source,  pos);  nf.parseWhitespace(source,  pos);  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  nf.parseWhitespace(source,  pos);  nf.parseWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	nf.parseWhitespace(source,  pos);  nf.parseWhitespace(source,  pos);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
172	[BUG]  [BUGGY]  pos.setIndex(p.getIndex());  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(p.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(p.getIndex());	  pos.setIndex(pos.getIndex()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
173	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	26	add
174	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	26	add
175	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(position.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  position	39	None	add
176	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  [CE]  cannot  find  symbol  position  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(position.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  position	39	None	add
177	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndent()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndent()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndent()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
178	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getItemCount()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getItemCount()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getItemCount()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
179	[BUG]  [BUGGY]  pos.setIndex(position.getIndex()  +  1);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(position.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(position.getIndex()  +  1);	  pos.setIndex(position.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
180	[BUG]  [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
181	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	65	26	add
182	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	65	26	add
183	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
184	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
185	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
186	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
187	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1  [CE]  ')'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  ')'  expected	44	None	replace
188	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
189	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
190	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
191	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
192	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
193	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
194	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
195	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
196	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
197	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
198	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	4	26	add
199	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	4	26	add
200	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex()  +  2);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(pos.getIndex()  +  2);	  pos.setIndex(pos.getIndex()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
201	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  pos.setIndex(pos.getIndex()  -  1);  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1));  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1));  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  ';'  expected	39	None	add
202	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	26	add
203	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	39	26	add
204	[BUG]  [BUGGY]  parseNextCharacter(source,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseNextCharacter(source,  pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseNextCharacter(source,  pos.getIndex());	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
205	[BUG]  [BUGGY]  nf.parseWhitespace(source,  pos);  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  nf.parseWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	nf.parseWhitespace(source,  pos);	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	26	26	add
207	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	26	26	add
208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	26	26	add
209	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	26	26	add
210	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex();  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex();  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex();	  	non-compiled	[CE]  ')'  expected	26	None	add
211	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
212	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
213	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	add
214	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	41	26	add
215	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	34	26	add
216	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	34	26	add
217	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex();    	non-compiled	[CE]  ')'  expected	58	None	replace
218	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex();    	non-compiled	[CE]  ')'  expected	58	None	replace
219	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  ')'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex();    	non-compiled	[CE]  ')'  expected	58	None	replace
220	[BUG]  [BUGGY]  parsePreviousPosition(source,  pos);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parsePreviousPosition(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parsePreviousPosition(source,  pos);	          parseNextCharacter(source,    pos);    parseNextPosition(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
221	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
222	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	49	26	add
224	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  AssertionFailedError  	49	26	add
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	49	24	add
226	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  AssertionFailedError  	49	24	add
227	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
228	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
229	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()));    	non-compiled	[CE]  ';'  expected	57	None	replace
230	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()));    	non-compiled	[CE]  ';'  expected	57	None	replace
231	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()));    	non-compiled	[CE]  ';'  expected	57	None	replace
232	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
233	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
234	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
235	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();	  	non-compiled	[CE]  ')'  expected	24	None	add
236	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(p.getIndex());  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  p  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setIndex(p.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setIndex(p.getIndex());  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  p	24	None	add
237	[BUG]  [BUGGY]  pos  =  parseNextCharacter(source);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos  =  parseNextCharacter(source);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos  =  parseNextCharacter(source);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parseNextCharacter(source);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
238	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	69	26	add
239	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	69	26	add
240	[BUG]  [BUGGY]  pos.setIndex(pos.getIndex())-  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(pos.getIndex())-  1;  [BUGGY]        [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(pos.getIndex())-  1;	  pos.setIndex(pos.getIndex())+    1;    	non-compiled	[CE]  not  a  statement	51	None	replace
241	[BUG]  [BUGGY]  pos  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos  =  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos  =  parseNextCharacter(source,  pos);	          parseAndIgnoreWhitespace(source,    pos);    ParsePosition    pos    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
242	[BUG]  [BUGGY]  pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex());  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex());	          pos.setIndex(pos.getIndex());    pos.setIndex(position.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
243	[BUG]  [BUGGY]  pos.setIndex(source.getIndex()  *  1);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(source.getIndex()  *  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(source.getIndex()  *  1);	  pos.setIndex(source.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
244	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(source.getIndex());  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
245	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(p.getIndex());  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  p  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(p.getIndex());  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(p.getIndex());  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  p	55	None	add
246	[BUG]  [BUGGY]  ParsePosition  pos  =  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  ParsePosition  pos  =  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	ParsePosition  pos  =  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
247	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
248	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
249	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	13	26	add
250	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	13	26	add
251	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  parseNextCharacter(source,  pos);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  ')'  expected	28	None	add
252	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
253	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
254	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  2);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	67	26	add
255	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  2);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  2);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	67	26	add
256	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
257	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StackOverflowError  	11	26	add
258	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
259	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
260	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
261	[BUG]  [BUGGY]  nf.setIndex(pos.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  nf.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	nf.setIndex(pos.getIndex()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    NumberFormat    nf    =    new    NumberFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
262	[BUG]  [BUGGY]  nf.setIndex(source.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  nf.setIndex(source.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	nf.setIndex(source.getIndex()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    NumberFormat    nf    =    new    NumberFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
263	[BUG]  [BUGGY]  nf.setIndex(position.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  nf.setIndex(position.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	nf.setIndex(position.getIndex()  -  1);	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    NumberFormat    nf    =    new    NumberFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
264	[BUG]  [BUGGY]  nf.parseAndIgnoreWhitespace(source,  pos);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  nf.parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	nf.parseAndIgnoreWhitespace(source,  pos);	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
265	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
266	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
267	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  }  else  {  parseWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  }  else  {  parseWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  }  else  {  parseWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
268	[BUG]  [BUGGY]  pos.setIndex(position.getIndex()  -  2);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  pos.setIndex(position.getIndex()  -  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	pos.setIndex(position.getIndex()  -  2);	  pos.setIndex(position.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
269	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	16	26	add
270	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	16	26	add
271	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	6	26	add
273	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	6	26	add
274	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
275	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
276	[BUG]  [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
277	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parsePreviousCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
278	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
279	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
280	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
281	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
282	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
283	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
284	[BUG]  [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  }  else  {  parseWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  }  else  {  parseWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex());  }  else  {  parseWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
285	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
286	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	1	26	add
287	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	1	26	add
288	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextPosition(source,  pos);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  parseNextPosition(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    parseNextPosition(source,  pos);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
289	[BUG]  [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source!=  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	  if(source!=    null)    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
290	[BUG]  [BUGGY]  if(pos.getIndex()!=  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()!=  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex());  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()!=  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
291	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex());  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
292	[BUG]  [BUGGY]  if(pos.getIndex()!=  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()!=  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()!=  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
293	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseNextCharacter(source,    pos);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
294	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  }	          parseNextCharacter(source,    pos);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
295	[BUG]  [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
296	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
297	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
298	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
299	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()));    	non-compiled	[CE]  ';'  expected	57	None	replace
300	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
301	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
302	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
303	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
304	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
305	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
306	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
307	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
308	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
309	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
310	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1,);  pos.setIndex(pos.getIndex()  +  1);  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1,);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  -  1,);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
311	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
312	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	26	add
313	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getPosition()  -  1);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getPosition()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setPosition(pos.getPosition()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
314	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
315	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
316	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
317	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  2);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  parseAndIgnoreWhitespace(source,  pos.getIndex()  -  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	parseAndIgnoreWhitespace(source,  pos.getIndex()  -  2);	  parseAndIgnoreWhitespace(source,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
318	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  parseNextCharacter(source,  pos);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  parseNextCharacter(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex()));  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  ';'  expected	28	None	add
319	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(!Character.isWhitespace(source))  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(!Character.isWhitespace(source))  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
320	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
321	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseAndIgnoreWhitespace(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
322	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
323	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  not  a  statement	44	None	replace
324	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
325	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setInde  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setInde  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(!Character.isWhitespace(source))  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setInde	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  not  a  statement	44	None	replace
326	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
327	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	77	26	add
328	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        -        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseAndIgnoreWhitespace(source,  pos);	  	compilable	  [FE]  StackOverflowError  	77	26	add
329	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getPosition()  -  1);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getPosition()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setPosition(pos.getPosition()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
330	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
331	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
332	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseAndIgnoreWhitespace(source,  pos);  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
333	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseAndIgnoreWhitespace(source,  pos);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
334	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
335	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
336	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
337	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setPosition(pos.getPosition()  -  1);  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex());  pos.setPosition(pos.getPosition()  -  1);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex());    pos.setPosition(pos.getPosition()  -  1);  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
338	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	11	26	add
339	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	11	26	add
340	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	13	26	add
341	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  StackOverflowError  	13	26	add
342	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  throw  new  IllegalArgumentException( " ");  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
343	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	49	26	add
344	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	49	26	add
345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	49	26	add
346	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex()  -  1);	  	compilable	  [FE]  AssertionFailedError  	49	26	add
347	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(!Character.isWhitespace(source))  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(!Character.isWhitespace(source))  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
348	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
349	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  2);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  2);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  2);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
350	[BUG]  [BUGGY]  if(pos.getIndex()  ==  0)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  2);  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  0)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  2);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  0)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  pos.setIndex(pos.getIndex()  -  2);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
351	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  2);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  2);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  2);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
352	[BUG]  [BUGGY]  if(!isWhitespace())  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(!isWhitespace())  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(!isWhitespace())  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	1	26	add
354	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  AssertionFailedError  	1	26	add
355	[BUG]  [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  ParseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()  +  1);  ParseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseAndIgnoreWhitespace(source,        pos);        pos.setIndex(pos.getIndex()    +    1);    ParseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
356	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex()  -  1);  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
357	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(p.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  [CE]  cannot  find  symbol  p  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(p.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(p.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  2);	  	non-compiled	[CE]  cannot  find  symbol  p	67	None	add
358	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1));  pos.setIndex(pos.getIndex()  -  2);  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  2);  pos.setIndex(pos.getIndex()  -  1));  pos.setIndex(pos.getIndex()  -  2);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    2);    pos.setIndex(pos.getIndex()  -  1));  pos.setIndex(pos.getIndex()  -  2);	  	non-compiled	[CE]  ';'  expected	67	None	add
359	[BUG]  [BUGGY]  if(!Character.isWhitespace(source))  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(!Character.isWhitespace(source))  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(!Character.isWhitespace(source))  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
360	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
361	[BUG]  [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  -1)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
362	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex();    	non-compiled	[CE]  ')'  expected	58	None	replace
363	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  pos.setIndex(pos.getIndex();  }  else  {  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex();    	non-compiled	[CE]  ')'  expected	58	None	replace
364	[BUG]  [BUGGY]  if(pos.getIndex()  ==  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
365	[BUG]  [BUGGY]  if(pos.getIndex()  ==  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  ==  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  ==  0)  {  pos.setIndex(pos.getIndex()  +  1);  }  else  {  parseWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
366	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	71	26	add
367	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	compilable	  [FE]  StackOverflowError  	71	26	add
368	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        pos.setIndex(pos.getIndex()        +        1);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    parseNextPosition(source,  pos);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
369	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StackOverflowError  	75	26	add
370	[BUG]  [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                parseNextCharacter(source,        pos);        parseAndIgnoreWhitespace(source,    pos);    pos.setIndex(pos.getIndex());	  	compilable	  [FE]  StackOverflowError  	75	26	add
371	[BUG]  [BUGGY]  if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null  ||  source.length()  ==  0)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
372	[BUG]  [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  parseAndIgnoreWhitespace(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	  if(source    ==    null)    {    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
373	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
374	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
375	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  pos.setIndex(pos.getIndex());  }  else  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	          pos.setIndex(pos.getIndex());    parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
376	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DE  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DE  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DE	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    NumberFormat    nf    =    new    NumberFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  ')'  expected	45	None	replace
377	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  }  else  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFAULT_IMAGINARY_CHARACTER);  }	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    NumberFormat    nf    =    new    NumberFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
378	[BUG]  [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFA  [CE]  ')'  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFA  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(source  ==  null)  {  pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1);  }  else  {  NumberFormat  nf  =  new  NumberFormat(DEFAULT_IMAGINARY_CHARACTER,  DEFA	          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()    -    1);    }    else    {    NumberFormat    nf    =    new    NumberFormat(DEFAULT_IMAGINARY_CHARACTER,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  ')'  expected	45	None	replace
379	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        parseNextCharacter(source,    pos);    pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(pos.getIndex());  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  +  1);  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	add
380	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setPosition(pos.getPosition()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setPosition(pos.getPosition()  -  1);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setPosition(pos.getPosition()  -  1);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
381	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1,  pos);  pos.setIndex(pos.getIndex()  -  1);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1);  pos.setIndex(pos.getIndex()  -  1,  pos);  pos.setIndex(pos.getIndex()  -  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex()        -        1);        pos.setIndex(pos.getIndex()    -    1);    pos.setIndex(pos.getIndex()  -  1,  pos);  pos.setIndex(pos.getIndex()  -  1);	  	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	39	None	add
382	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
383	[BUG]  [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]  if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	if(pos.getIndex()  >  0)  {  parseNextCharacter(source,  pos);  parseAndIgnoreWhitespace(source,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parseNextCharacter(source,    pos);    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
384	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setPosition(pos.getPosition());  pos.setIndex(pos.getIndex());  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex());  pos.setPosition(pos.getPosition());  pos.setIndex(pos.getIndex());  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex());    pos.setPosition(pos.getPosition());  pos.setIndex(pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	24	None	add
385	[BUG]  [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(null);  pos.setIndex(pos.getIndex()  +  1);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  parseAndIgnoreWhitespace(String  source,  ParsePosition  pos)  {  parseNextCharacter(source,  pos);  pos.setIndex(pos.getIndex()  -  1);      [BUGGY]          pos.setIndex(pos.getIndex());    pos.setIndex(pos.getIndex()  +  1);  pos.setIndex(null);  pos.setIndex(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ComplexFormat  [METHOD]  parseAndIgnoreWhitespace  [RETURN_TYPE]  void  String  source  ParsePosition  pos  [VARIABLES]  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  boolean  long  serialVersionUID  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	                pos.setIndex(pos.getIndex());        pos.setIndex(pos.getIndex()    +    1);    pos.setIndex(null);  pos.setIndex(pos.getIndex()  +  1);	  	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	55	None	add
