bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat());	  Number    im    =    parseNextCharacter(source,    getNumberFormat());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
2	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getNumberFormat(),  pos);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getNumberFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getNumberFormat(),  pos);	  Number    im    =    parseNextCharacter(source,    getNumberFormat());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
3	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  startIndex);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  startIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  startIndex);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    initialIndex);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  endIndex);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  endIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  endIndex);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    initialIndex);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  if(re  ==  null  ||  re.getType()  ==  Token.NUMBER)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.getType()  ==  Token.NUMBER)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.getType()  ==  Token.NUMBER)  {	  if(re!=    null    ||    re.getType()    ==    Token.NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
6	[BUG]  [BUGGY]  if(re!=  null  ||  im.getType()  ==  Token.NUMBER)  {  [CE]  cannot  find  symbol  im  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  im.getType()  ==  Token.NUMBER)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  im.getType()  ==  Token.NUMBER)  {	  if(re!=    null    ||    re.getType()    ==    Token.NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  im	20	None	replace
7	[BUG]  [BUGGY]  if(re!=  null  &&  re.getType()  ==  Token.NUMBER)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  re.getType()  ==  Token.NUMBER)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  re.getType()  ==  Token.NUMBER)  {	  if(re!=    null    ||    re.getType()    ==    Token.NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
8	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re.initialIndex);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re.initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re.initialIndex);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re  +  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re  +  1);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  c  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  c  =  parseAndIgnoreWhitespace(source,  pos);	  int    sign    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
11	[BUG]  [BUGGY]  char  sign  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  sign  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  sign  =  parseAndIgnoreWhitespace(source,  pos);	  int    sign    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
12	[BUG]  [BUGGY]  int  sign  =  parseAndIgnoreWhitespace(source,  pos,  re);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  parseAndIgnoreWhitespace(source,  pos,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseAndIgnoreWhitespace(source,  pos,  re);	  int    sign    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
13	[BUG]  [BUGGY]  if(re  ==  null  ||  initialIndex.length()  ==  0)  {  [CE]  int  cannot  be  dereferenced  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  initialIndex.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  initialIndex.length()  ==  0)  {	  if(re    ==    null    ||    im.length()    ==    0)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
14	[BUG]  [BUGGY]  if(re  ==  null  ||  pos.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  pos.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  pos.length()  ==  0)  {	  if(re    ==    null    ||    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
15	[BUG]  [BUGGY]  im.setIndex(initialIndex  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  im.setIndex(initialIndex  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	im.setIndex(initialIndex  +  1);	  im.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  im.setIndex(startIndex);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  im.setIndex(startIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	im.setIndex(startIndex);	  im.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  im.setIndex(initialIndex  -  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  im.setIndex(initialIndex  -  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	im.setIndex(initialIndex  -  1);	  im.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
18	[BUG]  [BUGGY]  char  re  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  re  =  parseNextCharacter(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  re  =  parseNextCharacter(source,  pos);	  int    sign    =    parseNextCharacter(source,    re);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
19	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(re,  source);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  parseNextCharacter(re,  source);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseNextCharacter(re,  source);	  int    sign    =    parseNextCharacter(source,    re);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
20	[BUG]  [BUGGY]  if(re!=  null  &&  im.length()  >  0)  {  [CE]  cannot  find  symbol  im  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  im.length()  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  im.length()  >  0)  {	  if(re!=    null    &&    re.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  im	75	None	replace
21	[BUG]  [BUGGY]  if(re!=  null  ||  re.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.length()  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.length()  >  0)  {	  if(re!=    null    &&    re.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
22	[BUG]  [BUGGY]  if(re!=  null  &&  initialIndex.length()  >  0)  {  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  initialIndex.length()  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  initialIndex.length()  >  0)  {	  if(re!=    null    &&    re.length()    >    0)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
23	[BUG]  [BUGGY]  char  n  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  n  =  parseNextCharacter(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  n  =  parseNextCharacter(source,  pos);	  int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
24	[BUG]  [BUGGY]  int  n  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  n  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  n  =  parseAndIgnoreWhitespace(source,  pos);	  int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
25	[BUG]  [BUGGY]  int  n  =  parseNumber(source,  pos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  n  =  parseNumber(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  n  =  parseNumber(source,  pos);	  int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
26	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  re);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  n  =  parseNextCharacter(source,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  n  =  parseNextCharacter(source,  re);	  int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
27	[BUG]  [BUGGY]  if(re!=  null  ||  initialIndex.length()  ==  0)  {  [CE]  int  cannot  be  dereferenced  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  initialIndex.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  initialIndex.length()  ==  0)  {	  if(re!=    null    ||    im.length()    ==    0)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	28	None	replace
28	[BUG]  [BUGGY]  if(re!=  null  ||  pos.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  pos.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  pos.length()  ==  0)  {	  if(re!=    null    ||    im.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
29	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  re);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getIndex(),  re);	  Number    im    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re.initialIndex);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re.initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  pos,  re.initialIndex);	  Number    im    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re  ==  null  ||  re.equals(re.toString()))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re  ==  null  ||  re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re.toString()))    {    if(re  ==  null  ||  re.equals(re.toString()))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
32	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re!=  null  ||  re.equals(re.toString()))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re!=  null  ||  re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re.toString()))    {    if(re!=  null  ||  re.equals(re.toString()))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
33	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  If(re  ==  null  ||  re.equals(re.toString()))  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  If(re  ==  null  ||  re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re.toString()))    {    If(re  ==  null  ||  re.equals(re.toString()))  {	  	non-compiled	[CE]  ';'  expected	38	None	add
34	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re  >=  null  ||  re.equals(re.toString()))  {  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re  >=  null  ||  re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re.toString()))    {    if(re  >=  null  ||  re.equals(re.toString()))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
35	[BUG]  [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    }    else    if(c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
36	[BUG]  [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null)  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    }    else    if(c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
37	[BUG]  [BUGGY]  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null)  {  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    }    else    if(c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(initialIndex);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
38	[BUG]  [BUGGY]  if(re!=  null  &&  im.length()  ==  0)  {  [CE]  cannot  find  symbol  im  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  im.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  im.length()  ==  0)  {	  if(re!=    null    &&    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  im	72	None	replace
39	[BUG]  [BUGGY]  if(re  ==  null  &&  re.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  &&  re.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  &&  re.length()  ==  0)  {	  if(re!=    null    &&    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
40	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(   "   "))  {  if(re  ==  null  ||  re.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(   "   "))  {  if(re  ==  null  ||  re.equals(   "   "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(   "   "))    {    if(re  ==  null  ||  re.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
41	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(   "   "))  {  if(re  ==  null  ||  re.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(   "   "))  {  if(re  ==  null  ||  re.equals( ".   "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(   "   "))    {    if(re  ==  null  ||  re.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
42	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(   "   "))  {  if(re!=  null  ||  re.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(   "   "))  {  if(re!=  null  ||  re.equals(   "   "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(   "   "))    {    if(re!=  null  ||  re.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
43	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(c))  {  [CE]  cannot  find  symbol  c  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(c))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.equals(c))  {	  if(re    ==    null    ||    re.equals(re))    {    if(re    >=    null    ||    re.equals(re))    {    	non-compiled	[CE]  cannot  find  symbol  c	12	None	replace
44	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(c))  {  [CE]  cannot  find  symbol  c  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(c))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(c))  {	  if(re    ==    null    ||    re.equals(re))    {    if(re    >=    null    ||    re.equals(re))    {    	non-compiled	[CE]  cannot  find  symbol  c	12	None	replace
45	[BUG]  [BUGGY]  Number  im  =  parseNumber(re,  getRealFormat(),  pos,  initialIndex);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(re,  getRealFormat(),  pos,  initialIndex);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(re,  getRealFormat(),  pos,  initialIndex);	  Number    im    =    parseNumber(re,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
46	[BUG]  [BUGGY]  Number  im  =  parseNumber(re,  getIndex(),  pos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(re,  getIndex(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(re,  getIndex(),  pos);	  Number    im    =    parseNumber(re,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
47	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(InitialIndex);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(InitialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(startIndex);  pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
48	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(re);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex);  pos.setIndex(re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(initialIndex);  pos.setIndex(re);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
49	[BUG]  [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(startIndex);  pos.setIndex(initialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
50	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  1,  re);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  1,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  1,  re);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
51	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  2);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  2);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  2);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
52	[BUG]  [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  parseNextInt(source,  pos);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  parseNextInt(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(startIndex);  int  initialIndex  =  parseNextInt(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextInt(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
53	[BUG]  [BUGGY]  int  initialIndex  =  parseNextInt(source,  pos);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  initialIndex  =  parseNextInt(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  initialIndex  =  parseNextInt(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextInt(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
54	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  parseNextInt(source,  pos);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  parseNextInt(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(initialIndex);  int  startIndex  =  parseNextInt(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextInt(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
55	[BUG]  [BUGGY]  re  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re  =  parseAndIgnoreWhitespace(source,  pos);	  re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
56	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re  =  parseNextCharacter(source,  getRealFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re  =  parseNextCharacter(source,  getRealFormat(),  pos);	  re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
57	[BUG]  [BUGGY]  re  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re  =  parseNumber(source,  getRealFormat(),  pos);	  re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
58	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  getIndex());  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re  =  parseNextCharacter(source,  getIndex());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re  =  parseNextCharacter(source,  getIndex());	  re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
59	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getIndex(),  pos);	  Number    im    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
60	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex()  -  1);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex()  -  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getIndex()  -  1);	  Number    im    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
61	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getInitialIndex(),  pos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getInitialIndex(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getInitialIndex(),  pos);	  Number    im    =    parseNextCharacter(source,    getInitialIndex());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||!re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re!=  null  ||!re.equals(re))  {	  if(re    ==    null    ||!re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	83	26	replace
63	[BUG]  [BUGGY]  if(re!=  null  ||!re.equals(re))  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||!re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||!re.equals(re))  {	  if(re    ==    null    ||!re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	83	26	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||!re.equals(re.toString()))  {	  if(re    ==    null    ||!re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	83	26	replace
65	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals(re.toString()))  {  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||!re.equals(re.toString()))  {	  if(re    ==    null    ||!re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	83	26	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re.getClass()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||!re.equals(re.getClass()))  {	  if(re    ==    null    ||!re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	83	26	replace
67	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals(re.getClass()))  {  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re.getClass()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||!re.equals(re.getClass()))  {	  if(re    ==    null    ||!re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	83	26	replace
68	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re.initialIndex);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re.initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re.initialIndex);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
69	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  c);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  c);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  c);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
70	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	2	add
71	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	2	add
72	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	2	add
73	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	2	add
74	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	2	add
75	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	2	add
76	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	2	add
77	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  else  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	2	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	29	26	add
79	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	29	26	add
80	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]      AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);  pos.setIndex(initialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	29	None	add
81	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]        AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	29	None	add
82	[BUG]  [BUGGY]  int  initialIndex  =  pos.getIndex();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  initialIndex  =  pos.getIndex();  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  initialIndex  =  pos.getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
83	[BUG]  [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  pos.getIndex();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex);  int  initialIndex  =  pos.getIndex();  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(startIndex);  int  initialIndex  =  pos.getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
84	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex();  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(initialIndex);  int  startIndex  =  pos.getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
85	[BUG]  [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  initialIndex  =  pos.getIndex();  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Integer  initialIndex  =  pos.getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
86	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.nextCharacter))  {  [CE]  cannot  find  symbol  nextCharacter  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.nextCharacter))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.nextCharacter))  {	  if(re    ==    null    ||    re.equals(re.initialIndex))    {    	non-compiled	[CE]  cannot  find  symbol  nextCharacter	37	None	replace
87	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.nextInt()))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.nextInt()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.nextInt()))  {	  if(re    ==    null    ||    re.equals(re.initialIndex))    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
88	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.nextIndex))  {  [CE]  cannot  find  symbol  nextIndex  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.nextIndex))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.nextIndex))  {	  if(re    ==    null    ||    re.equals(re.initialIndex))    {    	non-compiled	[CE]  cannot  find  symbol  nextIndex	37	None	replace
89	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  re);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER,  re);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
90	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getIndex(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
91	[BUG]  [BUGGY]  if(re  ==  null  ||  re.length()  <  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.length()  <  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.length()  <  0)  {	  if(re    ==    null    ||    re.length()    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
92	[BUG]  [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    }    else    if(c    ==    DEFAULT_IMAGINARY_CHARACTER    ||    c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
93	[BUG]  [BUGGY]  if(re  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    }    else    if(c    ==    DEFAULT_IMAGINARY_CHARACTER    ||    c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
94	[BUG]  [BUGGY]  if(re  ==  null  ||  im.isEmpty())  {  [CE]  cannot  find  symbol  im  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  im.isEmpty())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  im.isEmpty())  {	  if(re    ==    null    ||    re.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  im	44	None	replace
95	[BUG]  [BUGGY]  if(re!=  null  ||  im.isEmpty())  {  [CE]  cannot  find  symbol  im  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  im.isEmpty())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  im.isEmpty())  {	  if(re    ==    null    ||    re.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  im	44	None	replace
96	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  return  im;  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex);  return  im;  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(initialIndex);  return  im;	  pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
97	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  return  null;  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex  +  1);  return  null;  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(initialIndex  +  1);  return  null;	  pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
98	[BUG]  [BUGGY]  String  sign  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  String  sign  =  parseNextCharacter(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	String  sign  =  parseNextCharacter(source,  pos);	  char    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
99	[BUG]  [BUGGY]  char  sign  =  parseNextCharacter(source,  re);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  sign  =  parseNextCharacter(source,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  sign  =  parseNextCharacter(source,  re);	  char    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
100	[BUG]  [BUGGY]  Character  sign  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Character  sign  =  parseNextCharacter(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Character  sign  =  parseNextCharacter(source,  pos);	  char    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
101	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  startIndex);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  startIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  startIndex);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    initialIndex);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
102	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  endIndex);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  endIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  endIndex);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    initialIndex);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
103	[BUG]  [BUGGY]  if(re  ==  null  ||  re.size()  ==  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.size()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.size()  ==  0)  {	  if(re!=    null    ||    re.size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
104	[BUG]  [BUGGY]  if(re!=  null  ||  im.size()  ==  0)  {  [CE]  cannot  find  symbol  im  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  im.size()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  im.size()  ==  0)  {	  if(re!=    null    ||    re.size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  im	73	None	replace
105	[BUG]  [BUGGY]  if(re!=  null  &&  re.size()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  re.size()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  re.size()  ==  0)  {	  if(re!=    null    ||    re.size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
106	[BUG]  [BUGGY]  pos.setIndex(Integer.MAX_VALUE,  re);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(Integer.MAX_VALUE,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(Integer.MAX_VALUE,  re);	  pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
107	[BUG]  [BUGGY]  pos.setIndex(Integer.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(Integer.MIN_VALUE);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(Integer.MIN_VALUE);	  pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
108	[BUG]  [BUGGY]  re.setIndex(endIndex);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re.setIndex(endIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re.setIndex(endIndex);	  re.setIndex(startIndex);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
109	[BUG]  [BUGGY]  char  re  =  parseNextCharacter(source,  pos,  re);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  re  =  parseNextCharacter(source,  pos,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  re  =  parseNextCharacter(source,  pos,  re);	  int    sign    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
110	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  re);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  c  =  parseNextCharacter(source,  pos,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  c  =  parseNextCharacter(source,  pos,  re);	  int    sign    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
111	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  pos,  re.initialIndex);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  parseNextCharacter(source,  pos,  re.initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseNextCharacter(source,  pos,  re.initialIndex);	  int    sign    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
112	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  re);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  re);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos,  re);	  Number    im    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
113	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos  +  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos  +  1);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos  +  1);	  Number    im    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
114	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getIndex(),  pos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getIndex(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  getIndex(),  pos);	  Number    im    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
115	[BUG]  [BUGGY]  if(re!=  null  &&  re.isEmpty())  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  re.isEmpty())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  re.isEmpty())  {	  if(re!=    null    ||    re.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
116	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "null "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||  re.equals( "null "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
117	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals( "null "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "null "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals( "null "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
118	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "_ "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||  re.equals( "_ "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
119	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals( "_ "))  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "_ "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals( "_ "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
120	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "- "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||  re.equals( "- "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
121	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals( "- "))  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "- "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals( "- "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
122	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(c))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(c))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(c))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  }	  if(re    ==    null    ||    re.equals(re))    {    Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
123	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(c))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  cannot  find  symbol  c  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(c))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(c))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);	  if(re    ==    null    ||    re.equals(re))    {    Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  cannot  find  symbol  c	65	None	replace
124	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(c))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(c))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.equals(c))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  }	  if(re    ==    null    ||    re.equals(re))    {    Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
125	[BUG]  [BUGGY]  pos.setIndex(re.initialIndex  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(re.initialIndex  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(re.initialIndex  +  1);	  pos.setIndex(re.initialIndex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
126	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos  +  1);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos  +  1);	  Number    im    =    parseNextCharacter(source,    getNumberFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
127	[BUG]  [BUGGY]  if(re!=  null  ||  re.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.length()!=  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.length()!=  0)  {	  if(re!=    null    ||    re.length()    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
128	[BUG]  [BUGGY]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  re  =  parseNumber(source,  getRealFormat(),  pos);	          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    Number    re    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
129	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  if(initialIndex  ==  0)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  cannot  find  symbol  c  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  if(initialIndex  ==  0)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  if(initialIndex  ==  0)  {  pos.setIndex(initialIndex);  return  null;  }	          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    Number    re    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  cannot  find  symbol  c	69	None	replace
130	[BUG]  [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  if(initialIndex  ==  -1)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  cannot  find  symbol  c  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  if(initialIndex  ==  -1)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  if(initialIndex  ==  -1)  {  pos.setIndex(initialIndex);  return  null;  }	          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    Number    re    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  cannot  find  symbol  c	69	None	replace
131	[BUG]  [BUGGY]  pos.setIndex(startIndex  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(startIndex  +  1);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
132	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  2);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(initialIndex  +  2);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(initialIndex  +  2);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
133	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  getRealFormat(),  pos);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  getRealFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  pos,  getRealFormat(),  pos);	  Number    im    =    parseNextCharacter(source,    pos,    getRealFormat());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
134	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  getRealFormat());  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  getRealFormat());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getIndex(),  getRealFormat());	  Number    im    =    parseNextCharacter(source,    pos,    getRealFormat());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
135	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  getRealFormat(),  re);  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  getRealFormat(),  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  pos,  getRealFormat(),  re);	  Number    im    =    parseNextCharacter(source,    pos,    getRealFormat());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
136	[BUG]  [BUGGY]  String  c  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  String  c  =  parseNextCharacter(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	String  c  =  parseNextCharacter(source,  pos);	  char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
137	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  re);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  c  =  parseNextCharacter(source,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  c  =  parseNextCharacter(source,  re);	  char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
138	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(re,  pos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  c  =  parseNextCharacter(re,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  c  =  parseNextCharacter(re,  pos);	  char    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
139	[BUG]  [BUGGY]  pos.setIndex(re);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(re);	  pos.setIndex(startIndex);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re!=  null  ||  re.equals(re.toString()))  {	  if(re    ==    null    ||    re.equals(re.toString()))    {    	compilable	  [FE]  AssertionFailedError  	39	26	replace
141	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re.toString()))  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.equals(re.toString()))  {	  if(re    ==    null    ||    re.equals(re.toString()))    {    	compilable	  [FE]  AssertionFailedError  	39	26	replace
142	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re!=  null  &&  re.equals(re.toString()))  {	  if(re    ==    null    ||    re.equals(re.toString()))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	2	replace
143	[BUG]  [BUGGY]  if(re!=  null  &&  re.equals(re.toString()))  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  re.equals(re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  re.equals(re.toString()))  {	  if(re    ==    null    ||    re.equals(re.toString()))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	2	replace
144	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.getValue()))  {  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.getValue()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.getValue()))  {	  if(re    ==    null    ||    re.equals(re.toString()))    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
145	[BUG]  [BUGGY]  n  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  n  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	n  =  parseAndIgnoreWhitespace(source,  pos);	  n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
146	[BUG]  [BUGGY]  n  =  parseNextCharacter(source,  re);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  n  =  parseNextCharacter(source,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	n  =  parseNextCharacter(source,  re);	  n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
147	[BUG]  [BUGGY]  n  =  parseNextCharacter(re,  pos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  n  =  parseNextCharacter(re,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	n  =  parseNextCharacter(re,  pos);	  n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
148	[BUG]  [BUGGY]  n  =  parseNumber(source,  pos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  n  =  parseNumber(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	n  =  parseNumber(source,  pos);	  n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
149	[BUG]  [BUGGY]  If(re  ==  null  ||  re.equals(re))  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  If(re  ==  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	If(re  ==  null  ||  re.equals(re))  {	  if(re    ==    null    ||    re.equals(re))    {    If(re    ==    null    ||    re.equals(re))    {    	non-compiled	[CE]  ';'  expected	11	None	replace
150	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(c))  {  If(re  ==  null  ||  re.equals(re))  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(c))  {  If(re  ==  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(c))  {  If(re  ==  null  ||  re.equals(re))  {	  if(re    ==    null    ||    re.equals(re))    {    If(re    ==    null    ||    re.equals(re))    {    	non-compiled	[CE]  ';'  expected	11	None	replace
151	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re))  {  If(re  ==  null  ||  re.equals(re))  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re))  {  If(re  ==  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.equals(re))  {  If(re  ==  null  ||  re.equals(re))  {	  if(re    ==    null    ||    re.equals(re))    {    If(re    ==    null    ||    re.equals(re))    {    	non-compiled	[CE]  ';'  expected	11	None	replace
152	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re))  {  if(re!=  null  ||  re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re))  {  if(re!=  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=    null    ||    re.equals(re))    {    if(re!=  null  ||  re.equals(re))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
153	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re))  {  if(re  ==  null  ||  re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re))  {  if(re  ==  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=    null    ||    re.equals(re))    {    if(re  ==  null  ||  re.equals(re))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
154	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re))  {  If(re!=  null  ||  re.equals(re))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re))  {  If(re!=  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=    null    ||    re.equals(re))    {    If(re!=  null  ||  re.equals(re))  {	  	non-compiled	[CE]  ';'  expected	35	None	add
155	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re))  {  if(re  >=  null  ||  re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re))  {  if(re  >=  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=    null    ||    re.equals(re))    {    if(re  >=  null  ||  re.equals(re))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
156	[BUG]  [BUGGY]  int  c  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  c  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  c  =  parseAndIgnoreWhitespace(source,  pos);	  int    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
157	[BUG]  [BUGGY]  int  c  =  parseNextCharacter(re,  pos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  c  =  parseNextCharacter(re,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  c  =  parseNextCharacter(re,  pos);	  int    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
158	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateParentPosition(),  pos);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateParentPosition(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getImmediateParentPosition(),  pos);	  Number    im    =    parseNextCharacter(source,    getImmediateParentPosition());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
159	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediatePosition(),  pos);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediatePosition(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getImmediatePosition(),  pos);	  Number    im    =    parseNextCharacter(source,    getImmediateParentPosition());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
160	[BUG]  [BUGGY]  if(re  ==  null  ||  re.isEmpty()  ||  re.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.isEmpty()  ||  re.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.isEmpty()  ||  re.length()  ==  0)  {	  if(re!=    null    ||    re.isEmpty()    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
161	[BUG]  [BUGGY]  if(re!=  null  ||  re.isEmpty()  ||  pos.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.isEmpty()  ||  pos.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.isEmpty()  ||  pos.length()  ==  0)  {	  if(re!=    null    ||    re.isEmpty()    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
162	[BUG]  [BUGGY]  if(re!=  null  ||  im.isEmpty()  ||  re.length()  ==  0)  {  [CE]  cannot  find  symbol  im  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  im.isEmpty()  ||  re.length()  ==  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  im.isEmpty()  ||  re.length()  ==  0)  {	  if(re!=    null    ||    re.isEmpty()    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  im	27	None	replace
163	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  re);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getNumberFormat(),  re);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    re);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
164	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(re,  getRealFormat(),  source);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(re,  getRealFormat(),  source);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(re,  getRealFormat(),  source);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    re);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
165	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  if(re  ==  null  ||!re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  if(re  ==  null  ||!re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||!re.equals(re))    {    if(re  ==  null  ||!re.equals(re))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
166	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  if(re!=  null  ||!re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  if(re!=  null  ||!re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||!re.equals(re))    {    if(re!=  null  ||!re.equals(re))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
167	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  If(re  ==  null  ||!re.equals(re))  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  If(re  ==  null  ||!re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||!re.equals(re))    {    If(re  ==  null  ||!re.equals(re))  {	  	non-compiled	[CE]  ';'  expected	82	None	add
168	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
169	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
171	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
173	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
175	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
177	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re!=    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	52	26	add
178	[BUG]  [BUGGY]  if(re!=  null)  {  if(re  ==  null  ||  re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null)  {  if(re  ==  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null)  {  if(re  ==  null  ||  re.equals(re))  {	  if(re    ==    null    ||    re.equals(re))    {    if(re    {    null    ||    re.equals(re))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
179	[BUG]  [BUGGY]  re.setIndex(startIndex  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re.setIndex(startIndex  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re.setIndex(startIndex  +  1);	  re.setIndex(initialIndex    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
180	[BUG]  [BUGGY]  re.setIndex(initialIndex  +  2);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re.setIndex(initialIndex  +  2);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re.setIndex(initialIndex  +  2);	  re.setIndex(initialIndex    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
181	[BUG]  [BUGGY]  if(re!=  null)  {  If(re  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null)  {  If(re  ==  null)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null)  {  If(re  ==  null)  {	  if(re!=    null)    {    If(re!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
182	[BUG]  [BUGGY]  if(re  ==  null)  {  If(re!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null)  {  If(re!=  null)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null)  {  If(re!=  null)  {	  if(re!=    null)    {    If(re!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
183	[BUG]  [BUGGY]  if(re  ==  null)  {  If(re  ==  null)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null)  {  If(re  ==  null)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null)  {  If(re  ==  null)  {	  if(re!=    null)    {    If(re!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
184	[BUG]  [BUGGY]  if(re  ==  null  ||  im.length()!=  0)  {  [CE]  cannot  find  symbol  im  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  im.length()!=  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  im.length()!=  0)  {	  if(re    ==    null    ||    re.length()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  im	1	None	replace
185	[BUG]  [BUGGY]  if(re  ==  null  &&!re.isEmpty())  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  &&!re.isEmpty())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  &&!re.isEmpty())  {	  if(re!=    null    &&!re.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
186	[BUG]  [BUGGY]  int  sign  =  parseAndIgnoreWhitespace(re,  pos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  parseAndIgnoreWhitespace(re,  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseAndIgnoreWhitespace(re,  pos);	  int    sign    =    parseNextCharacter(re,    pos);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
187	[BUG]  [BUGGY]  char  re  =  parseNextCharacter(re,  pos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  re  =  parseNextCharacter(re,  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  re  =  parseNextCharacter(re,  pos);	  int    sign    =    parseNextCharacter(re,    pos);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re!=  null  &&  re.equals(re))  {	  if(re!=    null    ||    re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	36	26	replace
189	[BUG]  [BUGGY]  if(re!=  null  &&  re.equals(re))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  re.equals(re))  {	  if(re!=    null    ||    re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	36	26	replace
190	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re.initialIndex))  {  [CE]  cannot  find  symbol  initialIndex  [FE]      AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re.initialIndex))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.equals(re.initialIndex))  {	  if(re!=    null    ||    re.equals(re))    {    	non-compiled	[CE]  cannot  find  symbol  initialIndex	36	None	replace
191	[BUG]  [BUGGY]  if(re  ==  null  &&  re.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  &&  re.length()  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  &&  re.length()  >  0)  {	  if(re!=    null    &&    re.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
192	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateFormat());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateFormat());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getImmediateFormat());	  Number    im    =    parseNextCharacter(source,    getImmediateParentPosition());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
193	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateWhitespace());  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateWhitespace());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getImmediateWhitespace());	  Number    im    =    parseNextCharacter(source,    getImmediateParentPosition());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
194	[BUG]  [BUGGY]  n  =  parseNextCharacter(source,  getNumberFormat());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  n  =  parseNextCharacter(source,  getNumberFormat());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	n  =  parseNextCharacter(source,  getNumberFormat());	  n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
195	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re  ==  null  ||  re.equals(RealFormat.toString()))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re  ==  null  ||  re.equals(RealFormat.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re.toString()))    {    if(re  ==  null  ||  re.equals(RealFormat.toString()))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
196	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(   "   "))  {  If(re  ==  null  ||  re.equals(   "   "))  {  [CE]  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(   "   "))  {  If(re  ==  null  ||  re.equals(   "   "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(   "   "))    {    If(re  ==  null  ||  re.equals(   "   "))  {	  	non-compiled	[CE]  	63	None	add
197	[BUG]  [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
198	[BUG]  [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  n.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	n.setIndex(initialIndex);  pos.setIndex(InitialIndex);	          pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
199	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(initialIndex  >=  pos.getIndex())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(initialIndex  >=  pos.getIndex())  {	  if(re!=    null)    {    if(re    >=    null)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	2	replace
200	[BUG]  [BUGGY]  if(initialIndex  >=  pos.getIndex())  {  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(initialIndex  >=  pos.getIndex())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(initialIndex  >=  pos.getIndex())  {	  if(re!=    null)    {    if(re    >=    null)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	2	replace
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(initialIndex!=  pos.getIndex())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(initialIndex!=  pos.getIndex())  {	  if(re!=    null)    {    if(re    >=    null)    {    	compilable	  [FE]  AssertionFailedError  	48	26	replace
202	[BUG]  [BUGGY]  if(initialIndex!=  pos.getIndex())  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(initialIndex!=  pos.getIndex())  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(initialIndex!=  pos.getIndex())  {	  if(re!=    null)    {    if(re    >=    null)    {    	compilable	  [FE]  AssertionFailedError  	48	26	replace
203	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  re,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  re,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  re,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
204	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    DEFAULT_IMAGINARY_CHARACTER);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
205	[BUG]  [BUGGY]  pos.setIndex(re);  int  initialIndex  =  pos.getIndex();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(re);  int  initialIndex  =  pos.getIndex();  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(re);  int  initialIndex  =  pos.getIndex();	          pos.setIndex(initialIndex);    int    initialIndex    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
206	[BUG]  [BUGGY]  pos.setIndex(startIndex);  return  null;  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(startIndex);  return  null;  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(startIndex);  return  null;	  pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
207	[BUG]  [BUGGY]  im.setIndex(re.initialIndex);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  im.setIndex(re.initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	im.setIndex(re.initialIndex);	  im.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
208	[BUG]  [BUGGY]  if(re!=  null  ||  re.isEmpty())  {  if(re  ==  null  ||  re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.isEmpty())  {  if(re  ==  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.isEmpty())  {  if(re  ==  null  ||  re.equals(re))  {	  if(re    ==    null    ||    re.equals(re))    {    if(re    {    null    ||    re.equals(re))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
209	[BUG]  [BUGGY]  pos.setIndex(re.initialIndex  +  startIndex);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(re.initialIndex  +  startIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(re.initialIndex  +  startIndex);	  pos.setIndex(re.initialIndex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
210	[BUG]  [BUGGY]  pos.setIndex(re.startIndex);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(re.startIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(re.startIndex);	  pos.setIndex(re.initialIndex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
211	[BUG]  [BUGGY]  char  sign  =  parseNextCharacter(source,  pos,  re);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  sign  =  parseNextCharacter(source,  pos,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  sign  =  parseNextCharacter(source,  pos,  re);	  int    sign    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
212	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  getIndex(),  re);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  parseNextCharacter(source,  getIndex(),  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseNextCharacter(source,  getIndex(),  re);	  int    sign    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
213	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re.getString()))  {  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re.getString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.equals(re.getString()))  {	  if(re    ==    null    ||    re.equals(re.toString()))    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
214	[BUG]  [BUGGY]  re.setIndex(endIndex  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re.setIndex(endIndex  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re.setIndex(endIndex  +  1);	  re.setIndex(initialIndex    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
215	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re  +  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re  +  1);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
216	[BUG]  [BUGGY]  int  sign  =  parseWhitespace(source,  pos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  parseWhitespace(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseWhitespace(source,  pos);	  int    sign    =    parseAndIgnoreWhitespace(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
217	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getInitialIndex(),  re);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getInitialIndex(),  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getInitialIndex(),  re);	  Number    im    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
218	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals(re.getString()))  {  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re.getString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||!re.equals(re.getString()))  {	  if(re    ==    null    ||!re.equals(re))    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
219	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getIndex(),  pos  +  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getIndex(),  pos  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getIndex(),  pos  +  1);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
220	[BUG]  [BUGGY]  Null  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Null  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Null  im  =  parseNumber(source,  getRealFormat(),  pos);	          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    Number    re    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals( " "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re!=  null  ||  re.equals( " "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	64	26	replace
222	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals( " "))  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals( " "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.equals( " "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	64	26	replace
223	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "* "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||  re.equals( "* "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
224	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals( "* "))  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "* "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals( "* "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
225	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  Number  im  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  Number  im  =  parseNextCharacter(source,  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||!re.equals(re))    {    Number  im  =  parseNextCharacter(source,  pos);	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
226	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  pos);	  Number    im    =    parseNextCharacter(source,    re);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
227	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getNumberFormat(),  pos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getNumberFormat(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  getNumberFormat(),  pos);	  Number    im    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
228	[BUG]  [BUGGY]  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null)  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null)  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    }    else    if(c    ==    DEFAULT_IMAGINARY_CHARACTER    ||    c    ==    DEFAULT_IMAGINARY_CHARACTER)    {    pos.setIndex(initialIndex);    return    null;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
229	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    Number  im  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	29	None	add
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	29	26	add
231	[BUG]  [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                pos.setIndex(initialIndex);        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	29	26	add
232	[BUG]  [BUGGY]  pos.setIndex(endIndex  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(endIndex  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(endIndex  +  1);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
233	[BUG]  [BUGGY]  if(initialIndex!=  pos.getIndex())  {  If(re!=  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(initialIndex!=  pos.getIndex())  {  If(re!=  null)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(initialIndex!=  pos.getIndex())  {  If(re!=  null)  {	  if(re!=    null)    {    If(re!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
234	[BUG]  [BUGGY]  if(re!=  null  ||  re.size()  >=  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.size()  >=  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.size()  >=  0)  {	  if(re!=    null    ||    re.size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
235	[BUG]  [BUGGY]  if(re  ==  null  ||  re.initialIndex.equals(re.initialIndex))  {  [CE]  cannot  find  symbol  initialIndex  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.initialIndex.equals(re.initialIndex))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.initialIndex.equals(re.initialIndex))  {	  if(re    ==    null    ||    re.equals(re.initialIndex))    {    	non-compiled	[CE]  cannot  find  symbol  initialIndex	37	None	replace
236	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.name))  {  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.name))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.name))  {	  if(re    ==    null    ||    re.equals(re.initialIndex))    {    	non-compiled	[CE]  cannot  find  symbol  name	37	None	replace
237	[BUG]  [BUGGY]  if(re  ==  null  ||  re.initialIndex!=  pos.initialIndex)  {  [CE]  cannot  find  symbol  initialIndex  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.initialIndex!=  pos.initialIndex)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.initialIndex!=  pos.initialIndex)  {	  if(re    ==    null    ||    re.equals(re.initialIndex))    {    	non-compiled	[CE]  cannot  find  symbol  initialIndex	37	None	replace
238	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  sign);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  sign);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  sign);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    initialIndex);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
239	[BUG]  [BUGGY]  pos.setIndex(re.intValue);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(re.intValue);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(re.intValue);	  pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
240	[BUG]  [BUGGY]  pos.setIndex(Integer.MAX_VALUE  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(Integer.MAX_VALUE  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(Integer.MAX_VALUE  +  1);	  pos.setIndex(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
241	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.equals(re))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=    null    ||    re.equals(re))    {    Number  im  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
242	[BUG]  [BUGGY]  double  c  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  double  c  =  parseNextCharacter(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	double  c  =  parseNextCharacter(source,  pos);	  int    c    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
243	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  pos,  getRealFormat());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  pos,  getRealFormat());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  pos,  getRealFormat());	  Number    im    =    parseNextCharacter(source,    pos,    getRealFormat());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
244	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  getNumberFormat());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  n  =  parseNextCharacter(source,  getNumberFormat());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  n  =  parseNextCharacter(source,  getNumberFormat());	  int    n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
245	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getIndex(),  pos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getIndex(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getIndex(),  pos);	  Number    im    =    parseNextCharacter(source,    getIndex());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
246	[BUG]  [BUGGY]  char  sign  =  parseNextCharacter(re,  pos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  char  sign  =  parseNextCharacter(re,  pos);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  sign  =  parseNextCharacter(re,  pos);	  int    sign    =    parseNextCharacter(re,    pos);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
247	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  sign);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  sign);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  sign);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    initialIndex);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
248	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos,  initialIndex);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos,  initialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getIndex(),  pos,  initialIndex);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    initialIndex);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
249	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos,  re);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex(),  pos,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getIndex(),  pos,  re);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
250	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    Number  re  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	50	None	add
251	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    Number  im  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  variable  im  is  already  defined  in  method  parse(String,ParsePosition)	50	None	add
252	[BUG]  [BUGGY]  if(re!=  null  ||  re.isEmpty())  {  If(re  ==  null  ||  re.equals(re))  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.isEmpty())  {  If(re  ==  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.isEmpty())  {  If(re  ==  null  ||  re.equals(re))  {	  if(re    ==    null    ||    re.equals(re))    {    If(re    ==    null    ||    re.equals(re))    {    	non-compiled	[CE]  ';'  expected	11	None	replace
253	[BUG]  [BUGGY]  re  =  parseRealCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re  =  parseRealCharacter(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re  =  parseRealCharacter(source,  pos);	  re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
254	[BUG]  [BUGGY]  Number  im  =  parseNumber(re,  getRealFormat(),  pos  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(re,  getRealFormat(),  pos  +  1);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(re,  getRealFormat(),  pos  +  1);	  Number    im    =    parseNumber(re,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
255	[BUG]  [BUGGY]  Number  im  =  parseNumber(re,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(re,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(re,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	  Number    im    =    parseNumber(re,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
256	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealIndex(),  re);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealIndex(),  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealIndex(),  re);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    re);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
257	[BUG]  [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(ini  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(ini  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	                if(re        ==        null)        {        pos.setIndex(initialIndex);        return        null;        }        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(ini	  	non-compiled	[CE]  ')'  expected	50	None	add
258	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||  re.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(re    ==    null    ||    re.equals(re))    {    if(re    {    null    ||    re.equals(re))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	79	2	replace
259	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(DEFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(DEFAULT_IMAGINARY_CHARACTER))  {	  if(re    ==    null    ||    re.equals(re))    {    if(re    {    null    ||    re.equals(re))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	79	2	replace
260	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(deFAULT_IMAGINARY_CHARACTER))  {  [CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(deFAULT_IMAGINARY_CHARACTER))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(deFAULT_IMAGINARY_CHARACTER))  {	  if(re    ==    null    ||    re.equals(re))    {    if(re    {    null    ||    re.equals(re))    {    	non-compiled	[CE]  cannot  find  symbol  deFAULT_IMAGINARY_CHARACTER	79	None	replace
261	[BUG]  [BUGGY]  if(re!=  null  ||  re.isEmpty()  ||  re.charAt(0)  ==  '-')  {  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  ||  re.isEmpty()  ||  re.charAt(0)  ==  '-')  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.isEmpty()  ||  re.charAt(0)  ==  '-')  {	  if(re!=    null    ||    re.isEmpty()    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
262	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  re,  pos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  re,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  re,  pos);	  Number    im    =    parseNextCharacter(source,    re);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
263	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re.length);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re.length);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re.length);	  Number    im    =    parseNumber(source,    getRealFormat(),    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
264	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  pos,  re,  im);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  int  sign  =  parseNextCharacter(source,  pos,  re,  im);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseNextCharacter(source,  pos,  re,  im);	  int    sign    =    parseNextCharacter(source,    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
265	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getInitialIndex(),  getRealFormat());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getInitialIndex(),  getRealFormat());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getInitialIndex(),  getRealFormat());	  Number    im    =    parseNextCharacter(source,    pos,    getRealFormat());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
266	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re.length);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re.length);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re.length);	  Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos,    re);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
267	[BUG]  [BUGGY]  re  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);	  re    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
268	[BUG]  [BUGGY]  if(re  ==  null  ||  re.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.length()  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.length()  >  0)  {	  if(re    ==    null    ||    re.length()    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
269	[BUG]  [BUGGY]  pos.setIndex(InitialIndex  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  pos.setIndex(InitialIndex  +  1);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(InitialIndex  +  1);	  pos.setIndex(initialIndex    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
270	[BUG]  [BUGGY]  if(re!=  null  &&  re.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  re.length()  >=  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  re.length()  >=  0)  {	  if(re!=    null    &&    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
271	[BUG]  [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(initialIndex  >=  -1)  {  pos.setIndex(initialIndex);  return  null;  }	          if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    Number    re    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
272	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos.getIndex());  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos.getIndex());  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos.getIndex());	  Number    im    =    parseAndIgnoreWhitespace(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
273	[BUG]  [BUGGY]  if(re!=  null  &&  re.initialIndex  >  0)  {  [CE]  cannot  find  symbol  initialIndex  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null  &&  re.initialIndex  >  0)  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  re.initialIndex  >  0)  {	  if(re!=    null    &&    re.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  initialIndex	75	None	replace
274	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.type))  {  [CE]  cannot  find  symbol  type  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.type))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.type))  {	  if(re    ==    null    ||    re.equals(re.initialIndex))    {    	non-compiled	[CE]  cannot  find  symbol  type	37	None	replace
275	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.x))  {  [CE]  cannot  find  symbol  x  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.x))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.x))  {	  if(re    ==    null    ||    re.equals(re.initialIndex))    {    	non-compiled	[CE]  cannot  find  symbol  x	37	None	replace
276	[BUG]  [BUGGY]  Char  sign  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Char  sign  =  parseNextCharacter(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Char  sign  =  parseNextCharacter(source,  pos);	  char    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
277	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.getLongValue()))  {  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.getLongValue()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.getLongValue()))  {	  if(re    ==    null    ||    re.equals(re.toString()))    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
278	[BUG]  [BUGGY]  if(re  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null)  {  pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  {  pos.setIndex(initialIndex);  }	          pos.setIndex(initialIndex);    pos.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
279	[BUG]  [BUGGY]  if(re!=  null)  {  If(re  ==  null  ||  re.equals(re))  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re!=  null)  {  If(re  ==  null  ||  re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null)  {  If(re  ==  null  ||  re.equals(re))  {	  if(re    ==    null    ||    re.equals(re))    {    If(re    ==    null    ||    re.equals(re))    {    	non-compiled	[CE]  ';'  expected	11	None	replace
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals( " "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||!re.equals( " "))  {	  if(re    ==    null    ||!re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	83	26	replace
281	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals( " "))  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals( " "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||!re.equals( " "))  {	  if(re    ==    null    ||!re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	83	26	replace
282	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getImaginaryFormat());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getImaginaryFormat());  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getImaginaryFormat());	  Number    im    =    parseNextCharacter(source,    getNumberFormat());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
283	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals( " "))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( " "))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  }  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals( " "))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  }	  if(re    ==    null    ||    re.equals(re))    {    Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
284	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateParentPosition(),  re);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateParentPosition(),  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getImmediateParentPosition(),  re);	  Number    im    =    parseNextCharacter(source,    getImmediateParentPosition());    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
285	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "n "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||  re.equals( "n "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
286	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals( "n "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals( "n "))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals( "n "))  {	  if(re    ==    null    ||    re.equals(   "   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	2	replace
287	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  if(re  ==  null  ||! "re.equals(re))  {  [CE]  unclosed  string  literal  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  if(re  ==  null  ||! "re.equals(re))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||!re.equals(re))    {    if(re  ==  null  ||! "re.equals(re))  {	  	non-compiled	[CE]  unclosed  string  literal	82	None	add
288	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos,  re);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos,  re);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos,  re);	  Number    im    =    parseNextCharacter(source,    getNumberFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
289	[BUG]  [BUGGY]  re.setIndex(InitialIndex);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  re.setIndex(InitialIndex);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re.setIndex(InitialIndex);	  re.setIndex(startIndex);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
290	[BUG]  [BUGGY]  Integer  initialIndex  =  parseNextInt(source,  pos);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  Integer  initialIndex  =  parseNextInt(source,  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Integer  initialIndex  =  parseNextInt(source,  pos);	          pos.setIndex(initialIndex);    int    initialIndex    =    parseNextInt(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
291	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re  ==  null  ||  re.equals(Re.toString()))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  if(re  ==  null  ||  re.equals(Re.toString()))  {  [BUGGY]          pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re.toString()))    {    if(re  ==  null  ||  re.equals(Re.toString()))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
292	[BUG]  [BUGGY]  n  =  parseNextCharacter(source,  getNumberFormat(),  pos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);      [BUGGY]  n  =  parseNextCharacter(source,  getNumberFormat(),  pos);  [BUGGY]      if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	n  =  parseNextCharacter(source,  getNumberFormat(),  pos);	  n    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
