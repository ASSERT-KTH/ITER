bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(re  ==  null  ||  re.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.length()!=  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.length()!=  0)  {	  if(re    ==    null    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
2	[BUG]  [BUGGY]  if(re  ==  null  ||  im.length()  ==  0)  {  [CE]  cannot  find  symbol  im  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  im.length()  ==  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  im.length()  ==  0)  {	  if(re    ==    null    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  im	13	None	replace
3	[BUG]  [BUGGY]  pos.setIndex(initialIndex  +  1);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(initialIndex  +  1);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(initialIndex  +  1);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  pos.setIndex(startIndex);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(startIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(startIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  pos.setIndex(re.initialIndex);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(re.initialIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(re.initialIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  re);	      Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  initialIndex);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  initialIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  initialIndex);	      Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  getRealFormat());  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  getRealFormat());  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  pos,  getRealFormat());	      Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  if(re  ==  null  ||  re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  if(re  ==  null  ||  re.equals(re))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re))    {    if(re  ==  null  ||  re.equals(re))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
10	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  if(re!=  null  ||  re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  if(re!=  null  ||  re.equals(re))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re))    {    if(re!=  null  ||  re.equals(re))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
11	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  If(re  ==  null  ||  re.equals(re))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  If(re  ==  null  ||  re.equals(re))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re))    {    If(re  ==  null  ||  re.equals(re))  {	  	non-compiled	[CE]  ';'  expected	14	None	add
12	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  if(re  >=  null  ||  re.equals(re))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  if(re  >=  null  ||  re.equals(re))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re))    {    if(re  >=  null  ||  re.equals(re))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
13	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  re);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  re);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  re);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  pos,  re);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  pos,  re);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getNumberFormat(),  pos);	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  im.setIndex(initialIndex);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  im.setIndex(initialIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	im.setIndex(initialIndex);	      re.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  re.setIndex(startIndex);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  re.setIndex(startIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re.setIndex(startIndex);	      re.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  re.setIndex(initialIndex  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  re.setIndex(initialIndex  +  1);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re.setIndex(initialIndex  +  1);	      re.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  if(re!=  null  ||!re.isEmpty())  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  ||!re.isEmpty())  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||!re.isEmpty())  {	  if(re!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
20	[BUG]  [BUGGY]  if(re!=  null  ||  re.getType()  ==  Token.NUMBER)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  ||  re.getType()  ==  Token.NUMBER)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.getType()  ==  Token.NUMBER)  {	  if(re!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
21	[BUG]  [BUGGY]  pos.setIndex(initialIndex);  return  null;  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(initialIndex);  return  null;  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(initialIndex);  return  null;	      if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  type  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	      if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
23	[BUG]  [BUGGY]  n  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  n  =  parseNextCharacter(source,  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	n  =  parseNextCharacter(source,  pos);	      if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
24	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  1);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos  +  1);	      Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  initialIndex);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  initialIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  initialIndex);	      Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(source,  getRealFormat(),  pos,  re);	      Number    im    =    parseNumber(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  if(re!=  null  ||  re.isEmpty()  ||  re.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  ||  re.isEmpty()  ||  re.length()  ==  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.isEmpty()  ||  re.length()  ==  0)  {	  if(re!=    null    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
28	[BUG]  [BUGGY]  if(re!=  null  ||  im.length()  ==  0)  {  [CE]  cannot  find  symbol  im  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  ||  im.length()  ==  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  im.length()  ==  0)  {	  if(re!=    null    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  im	10	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	4	26	add
30	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);	  	compilable	  [FE]  AssertionFailedError  	4	26	add
31	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  illegal  start  of  type	4	None	add
32	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;	  	non-compiled	[CE]  illegal  start  of  type	4	None	add
33	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  }	  	non-compiled	[CE]  illegal  start  of  type	4	None	add
34	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(initialIndex);  }  else  if(c  ==  DEFAULT_IMAGINARY_CHARACTER  ||  c  ==  DEFAULT_IMAGINARY_CHARACTER)  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  illegal  start  of  type	4	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  ||  re.equals(re))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re!=  null  ||  re.equals(re))  {	  if(re    ==    null    ||    re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	15	26	replace
36	[BUG]  [BUGGY]  if(re!=  null  ||  re.equals(re))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  ||  re.equals(re))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.equals(re))  {	  if(re    ==    null    ||    re.equals(re))    {    	compilable	  [FE]  AssertionFailedError  	15	26	replace
37	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.initialIndex))  {  [CE]  cannot  find  symbol  initialIndex  [FE]      AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals(re.initialIndex))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.initialIndex))  {	  if(re    ==    null    ||    re.equals(re))    {    	non-compiled	[CE]  cannot  find  symbol  initialIndex	15	None	replace
38	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||  re.equals(re.toString()))  {	  if(re    ==    null    ||    re.equals(re))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	replace
39	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals(re.toString()))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals(re.toString()))  {	  if(re    ==    null    ||    re.equals(re))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	replace
40	[BUG]  [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  char  c  =  parseNextCharacter(source,  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  c  =  parseNextCharacter(source,  pos);	      int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  re);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  parseNextCharacter(source,  re);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseNextCharacter(source,  re);	      int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(source,  pos,  re);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  parseNextCharacter(source,  pos,  re);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseNextCharacter(source,  pos,  re);	      int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
43	[BUG]  [BUGGY]  int  c  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  c  =  parseNextCharacter(source,  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  c  =  parseNextCharacter(source,  pos);	      int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
44	[BUG]  [BUGGY]  if(re  ==  null  ||  re.isEmpty())  {  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.isEmpty())  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.isEmpty())  {	  if(re    ==    null    ||!re.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
45	[BUG]  [BUGGY]  if(re!=  null  ||  re.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  ||  re.isEmpty())  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.isEmpty())  {	  if(re    ==    null    ||!re.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
46	[BUG]  [BUGGY]  if(re!=  null)  {  if(re!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null)  {  if(re!=  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=    null)    {    if(re!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
47	[BUG]  [BUGGY]  if(re!=  null)  {  if(re  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null)  {  if(re  ==  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=    null)    {    if(re  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
48	[BUG]  [BUGGY]  if(re!=  null)  {  if(re  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null)  {  if(re  >=  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=    null)    {    if(re  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
49	[BUG]  [BUGGY]  if(re!=  null)  {  If(re!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null)  {  If(re!=  null)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=    null)    {    If(re!=  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
50	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	2	add
51	[BUG]  [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	2	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	16	26	add
53	[BUG]  [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re!=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	compilable	  [FE]  AssertionFailedError  	16	26	add
54	[BUG]  [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  If(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  If(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    If(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  ';'  expected	16	None	add
55	[BUG]  [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  >=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  if(re  >=  null)  {  pos.setIndex(initialIndex);  return  null;  }  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    if(re  >=  null)  {  pos.setIndex(initialIndex);  return  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	16	None	add
56	[BUG]  [BUGGY]  Number  im  =  parseNumber(re,  getRealFormat(),  pos);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNumber(re,  getRealFormat(),  pos);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNumber(re,  getRealFormat(),  pos);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  getIndex());  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getIndex());	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat());  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  getNumberFormat());  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getNumberFormat());	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  pos.getIndex();  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  pos.getIndex();  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  pos.getIndex();	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	add
60	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextInt(source,  pos);  [CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  int  initialIndex  =  parseNextInt(source,  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        pos.setIndex(initialIndex);    int  initialIndex  =  parseNextInt(source,  pos);	  	non-compiled	[CE]  variable  initialIndex  is  already  defined  in  method  parse(String,ParsePosition)	4	None	add
61	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  re);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  re);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  re);	      Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getRealFormat(),  pos,  DEFAULT_IMAGINARY_CHARACTER);	      Number    im    =    parseNextCharacter(source,    getRealFormat(),    pos);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals( " "))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||  re.equals( " "))  {	  if(re    ==    null    ||    re.equals(re))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	replace
64	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals( " "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals( " "))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.equals( " "))  {	  if(re    ==    null    ||    re.equals(re))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	replace
65	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  Number  im  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re))    {    Number  im  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
66	[BUG]  [BUGGY]  pos.setIndex(endIndex);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(endIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(endIndex);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  int  sign  =  parseAndIgnoreWhitespace(source,  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  parseAndIgnoreWhitespace(source,  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseAndIgnoreWhitespace(source,  pos);	      int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  char  sign  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  char  sign  =  parseNextCharacter(source,  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	char  sign  =  parseNextCharacter(source,  pos);	      int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  [CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      if(re  ==  null)  {  pos.setIndex(initialIndex);  return  null;  }  Number  re  =  parseNumber(source,  getRealFormat(),  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    Number  re  =  parseNumber(source,  getRealFormat(),  pos);	  	non-compiled	[CE]  variable  re  is  already  defined  in  method  parse(String,ParsePosition)	16	None	add
70	[BUG]  [BUGGY]  if(re!=  null  ||  re.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  ||  re.length()  >=  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.length()  >=  0)  {	  if(re!=    null    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
71	[BUG]  [BUGGY]  re  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  re  =  parseNextCharacter(source,  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	re  =  parseNextCharacter(source,  pos);	      if(re    ==    null)    {    pos.setIndex(initialIndex);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
72	[BUG]  [BUGGY]  if(re!=  null  &&  re.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  &&  re.length()  ==  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  re.length()  ==  0)  {	  if(re!=    null    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
73	[BUG]  [BUGGY]  if(re!=  null  ||  re.size()  ==  0)  {  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  ||  re.size()  ==  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  ||  re.size()  ==  0)  {	  if(re!=    null    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
74	[BUG]  [BUGGY]  if(re!=  null  &&!re.isEmpty())  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  &&!re.isEmpty())  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&!re.isEmpty())  {	  if(re!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
75	[BUG]  [BUGGY]  if(re!=  null  &&  re.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re!=  null  &&  re.length()  >  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re!=  null  &&  re.length()  >  0)  {	  if(re!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
76	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getInitialIndex());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  getInitialIndex());  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getInitialIndex());	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateParentPosition());  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseNextCharacter(source,  getImmediateParentPosition());  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseNextCharacter(source,  getImmediateParentPosition());	      Number    im    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  int  n  =  parseNextCharacter(source,  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  n  =  parseNextCharacter(source,  pos);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  n  =  parseNextCharacter(source,  pos);	      int    sign    =    parseNextCharacter(source,    pos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  if(re  {  null  ||  re.equals(re))  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.equals(re))  {  if(re  {  null  ||  re.equals(re))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re    ==    null    ||    re.equals(re))    {    if(re  {  null  ||  re.equals(re))  {	  	non-compiled	[CE]  ')'  expected	14	None	add
80	[BUG]  [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [CE]  cannot  find  symbol  InitialIndex  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]      pos.setIndex(initialIndex);  pos.setIndex(InitialIndex);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	        pos.setIndex(initialIndex);    pos.setIndex(InitialIndex);	  	non-compiled	[CE]  cannot  find  symbol  InitialIndex	4	None	add
81	[BUG]  [BUGGY]  pos.setIndex(Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  pos.setIndex(Integer.MAX_VALUE);  [BUGGY]    if  (re  ==  null)  {    pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	pos.setIndex(Integer.MAX_VALUE);	      pos.setIndex(initialIndex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
82	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	if(re  ==  null  ||!re.equals(re))  {	  if(re    ==    null    ||!re.isEmpty())    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	2	replace
83	[BUG]  [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||!re.equals(re))  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||!re.equals(re))  {	  if(re    ==    null    ||!re.isEmpty())    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	2	replace
84	[BUG]  [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	Number  im  =  parseAndIgnoreWhitespace(source,  getRealFormat(),  pos);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
85	[BUG]  [BUGGY]  int  sign  =  parseNextCharacter(re,  pos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  int  sign  =  parseNextCharacter(re,  pos);  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	int  sign  =  parseNextCharacter(re,  pos);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
86	[BUG]  [BUGGY]  if(re  ==  null  ||  re.length()  >=  0)  {  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  Complex  parse(String  source,  ParsePosition  pos)  {  int  initialIndex  =  pos.getIndex();  parseAndIgnoreWhitespace(source,  pos);  Number  re  =  parseNumber(source,  getRealFormat(),  pos);    [BUGGY]  if(re  ==  null  ||  re.length()  >=  0)  {  [BUGGY]        pos.setIndex(initialIndex);  return  null;  }  int  startIndex  =  pos.getIndex();  char  c  =  parseNextCharacter(source,  pos);  [CLASS]  ComplexFormat  [METHOD]  parse  [RETURN_TYPE]  Complex  String  source  ParsePosition  pos  [VARIABLES]  boolean  Number  im  re  char  c  String  DEFAULT_IMAGINARY_CHARACTER  imaginaryCharacter  source  long  serialVersionUID  int  endIndex  initialIndex  n  sign  startIndex  NumberFormat  f  format  imaginaryFormat  nf  realFormat  ParsePosition  pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	if(re  ==  null  ||  re.length()  >=  0)  {	  if(re    ==    null    ||    re.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
