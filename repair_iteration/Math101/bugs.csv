bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] sign = 1; [FE] StringIndexOutOfBoundsException [CONTEXT] int sign = 0; switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : [BUGGY] sign = 1; [BUGGY] break; default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	replace	
2	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] int sign = 0; switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : [BUGGY] [BUGGY] sign = 1; break; default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	349	349	2	add	
3	[BUG] [BUGGY] break; [FE] StringIndexOutOfBoundsException [CONTEXT] switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : sign = 1; [BUGGY] break; [BUGGY] default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }   [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	replace	
4	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : sign = 1; [BUGGY] [BUGGY] break; default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }   [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.3779644730092272	350	350	2	add	
5	[BUG] [BUGGY] this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); [FE] StringIndexOutOfBoundsException [CONTEXT] public ComplexFormat() { [BUGGY] this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); [BUGGY] } [CLASS] ComplexFormat [METHOD] <init> [RETURN_TYPE] ComplexFormat()  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	replace	
6	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public ComplexFormat() { [BUGGY] [BUGGY] this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); } [CLASS] ComplexFormat [METHOD] <init> [RETURN_TYPE] ComplexFormat()  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	58	58	2	add	
7	[BUG] [BUGGY] } [FE] StringIndexOutOfBoundsException [CONTEXT] public ComplexFormat() { this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); [BUGGY] } [BUGGY]  [CLASS] ComplexFormat [METHOD] <init> [RETURN_TYPE] ComplexFormat()  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	replace	
8	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public ComplexFormat() { this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat()); [BUGGY] [BUGGY] } [CLASS] ComplexFormat [METHOD] <init> [RETURN_TYPE] ComplexFormat()  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	59	59	2	add	
9	[BUG] [BUGGY] return getDefaultNumberFormat(Locale.getDefault()); [FE] StringIndexOutOfBoundsException [CONTEXT] private static NumberFormat getDefaultNumberFormat() { [BUGGY] return getDefaultNumberFormat(Locale.getDefault()); [BUGGY] } [CLASS] ComplexFormat [METHOD] getDefaultNumberFormat [RETURN_TYPE] NumberFormat  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat format imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	replace	
10	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] private static NumberFormat getDefaultNumberFormat() { [BUGGY] [BUGGY] return getDefaultNumberFormat(Locale.getDefault()); } [CLASS] ComplexFormat [METHOD] getDefaultNumberFormat [RETURN_TYPE] NumberFormat  [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter boolean long serialVersionUID NumberFormat format imaginaryFormat realFormat  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.35355339059327373	237	237	2	add	
11	[BUG] [BUGGY] parseAndIgnoreWhitespace(source, pos); [FE] StringIndexOutOfBoundsException [CONTEXT] default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  [BUGGY] parseAndIgnoreWhitespace(source, pos); [BUGGY]   Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	replace	
12	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] default :    pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  [BUGGY] [BUGGY] parseAndIgnoreWhitespace(source, pos);  Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	361	361	2	add	
13	[BUG] [BUGGY] Number im = parseNumber(source, getRealFormat(), pos); [FE] StringIndexOutOfBoundsException [CONTEXT]  pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  parseAndIgnoreWhitespace(source, pos);  [BUGGY] Number im = parseNumber(source, getRealFormat(), pos); [BUGGY] if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	replace	
14	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT]  pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  parseAndIgnoreWhitespace(source, pos);  [BUGGY] [BUGGY] Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	364	364	2	add	
15	[BUG] [BUGGY] if (im == null) { [FE] StringIndexOutOfBoundsException [CONTEXT] pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  parseAndIgnoreWhitespace(source, pos);  Number im = parseNumber(source, getRealFormat(), pos); [BUGGY] if (im == null) { [BUGGY]    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	replace	
16	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; }  parseAndIgnoreWhitespace(source, pos);  Number im = parseNumber(source, getRealFormat(), pos); [BUGGY] [BUGGY] if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	365	365	2	add	
17	[BUG] [BUGGY] int n = getImaginaryCharacter().length(); [FE] StringIndexOutOfBoundsException [CONTEXT] Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; }  [BUGGY] int n = getImaginaryCharacter().length(); [BUGGY] startIndex = pos.getIndex(); int endIndex = startIndex + n; if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	replace	
18	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] Number im = parseNumber(source, getRealFormat(), pos); if (im == null) {    pos.setIndex(initialIndex); return null; }  [BUGGY] [BUGGY] int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); int endIndex = startIndex + n; if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	374	374	2	add	
19	[BUG] [BUGGY] startIndex = pos.getIndex(); [FE] StringIndexOutOfBoundsException [CONTEXT] if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); [BUGGY] startIndex = pos.getIndex(); [BUGGY] int endIndex = startIndex + n; if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	replace	
20	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] if (im == null) {    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); [BUGGY] [BUGGY] startIndex = pos.getIndex(); int endIndex = startIndex + n; if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	375	375	2	add	
21	[BUG] [BUGGY] int endIndex = startIndex + n; [FE] StringIndexOutOfBoundsException [CONTEXT]    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); [BUGGY] int endIndex = startIndex + n; [BUGGY] if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; } pos.setIndex(endIndex); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	376	376	2	replace	
22	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT]    pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); [BUGGY] [BUGGY] int endIndex = startIndex + n; if ( source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; } pos.setIndex(endIndex); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	376	376	2	add	
23	[BUG] [BUGGY] if ( source.substring(startIndex, endIndex).compareTo(  getImaginaryCharacter()) != 0) { [FE] StringIndexOutOfBoundsException [CONTEXT]   pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); int endIndex = startIndex + n; [BUGGY] if (   source.substring(startIndex, endIndex).compareTo(      getImaginaryCharacter()) != 0) { [BUGGY] source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; } pos.setIndex(endIndex);  [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	replace	
24	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT]   pos.setIndex(initialIndex); return null; }  int n = getImaginaryCharacter().length(); startIndex = pos.getIndex(); int endIndex = startIndex + n; [BUGGY] [BUGGY] if (   source.substring(startIndex, endIndex).compareTo(      getImaginaryCharacter()) != 0) { source.substring(startIndex, endIndex).compareTo( getImaginaryCharacter()) != 0) {   pos.setIndex(initialIndex); pos.setErrorIndex(startIndex); return null; } pos.setIndex(endIndex);  [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2886751345948129	377	379	2	add	
25	[BUG] [BUGGY] int initialIndex = pos.getIndex(); [FE] StringIndexOutOfBoundsException [CONTEXT] public Complex parse(String source, ParsePosition pos) { [BUGGY] int initialIndex = pos.getIndex(); [BUGGY]   parseAndIgnoreWhitespace(source, pos);  Number re = parseNumber(source, getRealFormat(), pos); if (re == null) {    [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	321	321	2	replace	
26	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public Complex parse(String source, ParsePosition pos) { [BUGGY] [BUGGY] int initialIndex = pos.getIndex();  parseAndIgnoreWhitespace(source, pos);  Number re = parseNumber(source, getRealFormat(), pos); if (re == null) {    [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	321	321	2	add	
27	[BUG] [BUGGY] parseAndIgnoreWhitespace(source, pos); [FE] StringIndexOutOfBoundsException [CONTEXT] public Complex parse(String source, ParsePosition pos) { int initialIndex = pos.getIndex();  [BUGGY] parseAndIgnoreWhitespace(source, pos); [BUGGY]   Number re = parseNumber(source, getRealFormat(), pos); if (re == null) {    pos.setIndex(initialIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	replace	
28	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public Complex parse(String source, ParsePosition pos) { int initialIndex = pos.getIndex();  [BUGGY] [BUGGY] parseAndIgnoreWhitespace(source, pos);  Number re = parseNumber(source, getRealFormat(), pos); if (re == null) {    pos.setIndex(initialIndex); return null; } [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	324	324	2	add	
29	[BUG] [BUGGY] Number re = parseNumber(source, getRealFormat(), pos); [FE] StringIndexOutOfBoundsException [CONTEXT] public Complex parse(String source, ParsePosition pos) { int initialIndex = pos.getIndex();  parseAndIgnoreWhitespace(source, pos);  [BUGGY] Number re = parseNumber(source, getRealFormat(), pos); [BUGGY] if (re == null) {    pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	327	327	2	replace	
30	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public Complex parse(String source, ParsePosition pos) { int initialIndex = pos.getIndex();  parseAndIgnoreWhitespace(source, pos);  [BUGGY] [BUGGY] Number re = parseNumber(source, getRealFormat(), pos); if (re == null) {    pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	327	327	2	add	
31	[BUG] [BUGGY] if (re == null) { [FE] StringIndexOutOfBoundsException [CONTEXT] public Complex parse(String source, ParsePosition pos) { int initialIndex = pos.getIndex();  parseAndIgnoreWhitespace(source, pos);  Number re = parseNumber(source, getRealFormat(), pos); [BUGGY] if (re == null) { [BUGGY]    pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); char c = parseNextCharacter(source, pos); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	replace	
32	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public Complex parse(String source, ParsePosition pos) { int initialIndex = pos.getIndex();  parseAndIgnoreWhitespace(source, pos);  Number re = parseNumber(source, getRealFormat(), pos); [BUGGY] [BUGGY] if (re == null) {    pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); char c = parseNextCharacter(source, pos); [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	328	328	2	add	
33	[BUG] [BUGGY] int startIndex = pos.getIndex(); [FE] StringIndexOutOfBoundsException [CONTEXT] Number re = parseNumber(source, getRealFormat(), pos); if (re == null) {    pos.setIndex(initialIndex); return null; }  [BUGGY] int startIndex = pos.getIndex(); [BUGGY] char c = parseNextCharacter(source, pos); int sign = 0; switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	replace	
34	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] Number re = parseNumber(source, getRealFormat(), pos); if (re == null) {    pos.setIndex(initialIndex); return null; }  [BUGGY] [BUGGY] int startIndex = pos.getIndex(); char c = parseNextCharacter(source, pos); int sign = 0; switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	337	337	2	add	
35	[BUG] [BUGGY] char c = parseNextCharacter(source, pos); [FE] StringIndexOutOfBoundsException [CONTEXT] if (re == null) {    pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); [BUGGY] char c = parseNextCharacter(source, pos); [BUGGY] int sign = 0; switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	replace	
36	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] if (re == null) {    pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); [BUGGY] [BUGGY] char c = parseNextCharacter(source, pos); int sign = 0; switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	338	338	2	add	
37	[BUG] [BUGGY] int sign = 0; [FE] StringIndexOutOfBoundsException [CONTEXT]    pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); char c = parseNextCharacter(source, pos); [BUGGY] int sign = 0; [BUGGY] switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : sign = 1; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	replace	
38	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT]    pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); char c = parseNextCharacter(source, pos); [BUGGY] [BUGGY] int sign = 0; switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : sign = 1; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	339	339	2	add	
39	[BUG] [BUGGY] switch (c) { [FE] StringIndexOutOfBoundsException [CONTEXT]   pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); char c = parseNextCharacter(source, pos); int sign = 0; [BUGGY] switch (c) { [BUGGY] case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : sign = 1; break; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	340	340	2	replace	
40	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT]   pos.setIndex(initialIndex); return null; }  int startIndex = pos.getIndex(); char c = parseNextCharacter(source, pos); int sign = 0; [BUGGY] [BUGGY] switch (c) { case 0 :   return new Complex(re.doubleValue(), 0.0); case '-' : sign = -1; break; case '+' : sign = 1; break; [CLASS] ComplexFormat [METHOD] parse [RETURN_TYPE] Complex  String source ParsePosition pos [VARIABLES] boolean Number im re char c String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int endIndex initialIndex n sign startIndex NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	340	340	2	add	
41	[BUG] [BUGGY] parseNextCharacter(source, pos); [FE] StringIndexOutOfBoundsException [CONTEXT] private void parseAndIgnoreWhitespace(String source, ParsePosition pos) { [BUGGY] parseNextCharacter(source, pos); [BUGGY] pos.setIndex(pos.getIndex() - 1); } [CLASS] ComplexFormat [METHOD] parseAndIgnoreWhitespace [RETURN_TYPE] void  String source ParsePosition pos [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source boolean long serialVersionUID NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	replace	
42	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] private void parseAndIgnoreWhitespace(String source, ParsePosition pos) { [BUGGY] [BUGGY] parseNextCharacter(source, pos); pos.setIndex(pos.getIndex() - 1); } [CLASS] ComplexFormat [METHOD] parseAndIgnoreWhitespace [RETURN_TYPE] void  String source ParsePosition pos [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source boolean long serialVersionUID NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	399	399	2	add	
43	[BUG] [BUGGY] pos.setIndex(pos.getIndex() - 1); [FE] StringIndexOutOfBoundsException [CONTEXT] private void parseAndIgnoreWhitespace(String source, ParsePosition pos) { parseNextCharacter(source, pos); [BUGGY] pos.setIndex(pos.getIndex() - 1); [BUGGY] } [CLASS] ComplexFormat [METHOD] parseAndIgnoreWhitespace [RETURN_TYPE] void  String source ParsePosition pos [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source boolean long serialVersionUID NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	replace	
44	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] private void parseAndIgnoreWhitespace(String source, ParsePosition pos) { parseNextCharacter(source, pos); [BUGGY] [BUGGY] pos.setIndex(pos.getIndex() - 1); } [CLASS] ComplexFormat [METHOD] parseAndIgnoreWhitespace [RETURN_TYPE] void  String source ParsePosition pos [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source boolean long serialVersionUID NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	400	400	2	add	
45	[BUG] [BUGGY] } [FE] StringIndexOutOfBoundsException [CONTEXT] private void parseAndIgnoreWhitespace(String source, ParsePosition pos) { parseNextCharacter(source, pos); pos.setIndex(pos.getIndex() - 1); [BUGGY] } [BUGGY]  [CLASS] ComplexFormat [METHOD] parseAndIgnoreWhitespace [RETURN_TYPE] void  String source ParsePosition pos [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source boolean long serialVersionUID NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	replace	
46	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] private void parseAndIgnoreWhitespace(String source, ParsePosition pos) { parseNextCharacter(source, pos); pos.setIndex(pos.getIndex() - 1); [BUGGY] [BUGGY] } [CLASS] ComplexFormat [METHOD] parseAndIgnoreWhitespace [RETURN_TYPE] void  String source ParsePosition pos [VARIABLES] String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source boolean long serialVersionUID NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	401	401	2	add	
47	[BUG] [BUGGY] int index = pos.getIndex(); [FE] StringIndexOutOfBoundsException [CONTEXT] private char parseNextCharacter(String source, ParsePosition pos) { [BUGGY] int index = pos.getIndex(); [BUGGY] int n = source.length(); char ret = 0; if (index < n) { char c; do { c = source.charAt(index++); } while (Character.isWhitespace(c) && index < n); pos.setIndex(index);  [CLASS] ComplexFormat [METHOD] parseNextCharacter [RETURN_TYPE] char  String source ParsePosition pos [VARIABLES] boolean char c ret String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int index n NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	replace	
48	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] private char parseNextCharacter(String source, ParsePosition pos) { [BUGGY] [BUGGY] int index = pos.getIndex(); int n = source.length(); char ret = 0; if (index < n) { char c; do { c = source.charAt(index++); } while (Character.isWhitespace(c) && index < n); pos.setIndex(index);  [CLASS] ComplexFormat [METHOD] parseNextCharacter [RETURN_TYPE] char  String source ParsePosition pos [VARIABLES] boolean char c ret String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int index n NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	411	411	2	add	
49	[BUG] [BUGGY] int n = source.length(); [FE] StringIndexOutOfBoundsException [CONTEXT] private char parseNextCharacter(String source, ParsePosition pos) { int index = pos.getIndex(); [BUGGY] int n = source.length(); [BUGGY] char ret = 0; if (index < n) { char c; do { c = source.charAt(index++); } while (Character.isWhitespace(c) && index < n); pos.setIndex(index); if (index < n) { [CLASS] ComplexFormat [METHOD] parseNextCharacter [RETURN_TYPE] char  String source ParsePosition pos [VARIABLES] boolean char c ret String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int index n NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	replace	
50	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] private char parseNextCharacter(String source, ParsePosition pos) { int index = pos.getIndex(); [BUGGY] [BUGGY] int n = source.length(); char ret = 0; if (index < n) { char c; do { c = source.charAt(index++); } while (Character.isWhitespace(c) && index < n); pos.setIndex(index); if (index < n) { [CLASS] ComplexFormat [METHOD] parseNextCharacter [RETURN_TYPE] char  String source ParsePosition pos [VARIABLES] boolean char c ret String DEFAULT_IMAGINARY_CHARACTER imaginaryCharacter source long serialVersionUID int index n NumberFormat f format imaginaryFormat nf realFormat ParsePosition pos  	projects/Math101/src/java/org/apache/commons/math/complex/ComplexFormat.java	0.2773500981126146	412	412	2	add	
