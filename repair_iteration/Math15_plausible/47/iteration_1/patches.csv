bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tmp  =  aa  *  TWO_POWER_52  +(xb  &  0x000ffc0000000000L);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;      [BUGGY]  tmp  =  aa  *  TWO_POWER_52  +(xb  &  0x000ffc0000000000L);  [BUGGY]    final  double[]  lnCoef_last  =  LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1];  double  ya  =  lnCoef_last[0];  double  yb  =  lnCoef_last[1];  for  (int  i  =  LN_HI_PREC_COEF.length  -  2;  i  >=  0;  i--)  {  aa  =  ya  *  xa;  ab  =  ya  *  xb  +  yb  *  xa  +  yb  *  xb;  tmp  =  aa  *  HEX_40000000;  ya  =  aa  +  tmp  -  tmp;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1258	1258	1	replace	tmp  =  aa  *  TWO_POWER_52  +(xb  &  0x000ffc0000000000L);	      tmp    =    aa    *    TWO_POWER_52    +(bits    &    0x000ffc0000000000L);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  xb  +=  aa  /  denom;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;      [BUGGY]  xb  +=  aa  /  denom;  [BUGGY]    final  double[]  lnCoef_last  =  LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1];  double  ya  =  lnCoef_last[0];  double  yb  =  lnCoef_last[1];  for  (int  i  =  LN_HI_PREC_COEF.length  -  2;  i  >=  0;  i--)  {  aa  =  ya  *  xa;  ab  =  ya  *  xb  +  yb  *  xa  +  yb  *  xb;  tmp  =  aa  *  HEX_40000000;  ya  =  aa  +  tmp  -  tmp;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1258	1258	1	replace	xb  +=  aa  /  denom;	      aa    =    numer    -    xa*denom    -    xb    *    denom;    xb    +=    aa    /    denom;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  xb  +=  numer  /  denom;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;      [BUGGY]  xb  +=  numer  /  denom;  [BUGGY]    final  double[]  lnCoef_last  =  LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1];  double  ya  =  lnCoef_last[0];  double  yb  =  lnCoef_last[1];  for  (int  i  =  LN_HI_PREC_COEF.length  -  2;  i  >=  0;  i--)  {  aa  =  ya  *  xa;  ab  =  ya  *  xb  +  yb  *  xa  +  yb  *  xb;  tmp  =  aa  *  HEX_40000000;  ya  =  aa  +  tmp  -  tmp;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1258	1258	1	replace	xb  +=  numer  /  denom;	      aa    =    numer    -    xa*denom    -    xb    *    denom;    xb    +=    aa    /    denom;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  final  double[]  lnPrec  =  LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-2];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;      [BUGGY]  final  double[]  lnPrec  =  LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-2];  [BUGGY]    final  double[]  lnCoef_last  =  LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1];  double  ya  =  lnCoef_last[0];  double  yb  =  lnCoef_last[1];  for  (int  i  =  LN_HI_PREC_COEF.length  -  2;  i  >=  0;  i--)  {  aa  =  ya  *  xa;  ab  =  ya  *  xb  +  yb  *  xa  +  yb  *  xb;  tmp  =  aa  *  HEX_40000000;  ya  =  aa  +  tmp  -  tmp;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1258	1258	1	replace	final  double[]  lnPrec  =  LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-2];	      final    double[]    lnPrec    =    LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  double  lnCoef_last[0]  =  lnCoef_last[1];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;      [BUGGY]  double  lnCoef_last[0]  =  lnCoef_last[1];  [BUGGY]    double  ya  =  lnCoef_last[0];  double  yb  =  lnCoef_last[1];  for  (int  i  =  LN_HI_PREC_COEF.length  -  2;  i  >=  0;  i--)  {  aa  =  ya  *  xa;  ab  =  ya  *  xb  +  yb  *  xa  +  yb  *  xb;  tmp  =  aa  *  HEX_40000000;  ya  =  aa  +  tmp  -  tmp;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1258	1258	1	replace	double  lnCoef_last[0]  =  lnCoef_last[1];	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  lnCoef_last[0]  =  lnCoef_last[1];  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;      [BUGGY]  lnCoef_last[0]  =  lnCoef_last[1];  [BUGGY]    double  ya  =  lnCoef_last[0];  double  yb  =  lnCoef_last[1];  for  (int  i  =  LN_HI_PREC_COEF.length  -  2;  i  >=  0;  i--)  {  aa  =  ya  *  xa;  ab  =  ya  *  xb  +  yb  *  xa  +  yb  *  xb;  tmp  =  aa  *  HEX_40000000;  ya  =  aa  +  tmp  -  tmp;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1258	1258	1	replace	lnCoef_last[0]  =  lnCoef_last[1];	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  aa  =  xb  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;      [BUGGY]  aa  =  xb  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [BUGGY]    final  double[]  lnCoef_last  =  LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1];  double  ya  =  lnCoef_last[0];  double  yb  =  lnCoef_last[1];  for  (int  i  =  LN_HI_PREC_COEF.length  -  2;  i  >=  0;  i--)  {  aa  =  ya  *  xa;  ab  =  ya  *  xb  +  yb  *  xa  +  yb  *  xb;  tmp  =  aa  *  HEX_40000000;  ya  =  aa  +  tmp  -  tmp;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1258	1258	1	replace	aa  =  xb  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;	      aa    =    numer    -    xa*denom    -    xb    *    denom;    xb    +=    aa    /    denom;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  double  lnCoef_last[0];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;      [BUGGY]  double  lnCoef_last[0];  [BUGGY]    double  ya  =  lnCoef_last[0];  double  yb  =  lnCoef_last[1];  for  (int  i  =  LN_HI_PREC_COEF.length  -  2;  i  >=  0;  i--)  {  aa  =  ya  *  xa;  ab  =  ya  *  xb  +  yb  *  xa  +  yb  *  xb;  tmp  =  aa  *  HEX_40000000;  ya  =  aa  +  tmp  -  tmp;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1258	1258	1	replace	double  lnCoef_last[0];	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
9	[BUG]  [BUGGY]  if(xb  <  0)  {  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;      [BUGGY]  if(xb  <  0)  {  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  }  [BUGGY]    final  double[]  lnCoef_last  =  LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1];  double  ya  =  lnCoef_last[0];  double  yb  =  lnCoef_last[1];  for  (int  i  =  LN_HI_PREC_COEF.length  -  2;  i  >=  0;  i--)  {  aa  =  ya  *  xa;  ab  =  ya  *  xb  +  yb  *  xa  +  yb  *  xb;  tmp  =  aa  *  HEX_40000000;  ya  =  aa  +  tmp  -  tmp;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1258	1258	1	replace	if(xb  <  0)  {  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  }	      aa    =    numer    -    xa*denom    -    xb    *    denom;    xb    +=    aa    /    denom;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
