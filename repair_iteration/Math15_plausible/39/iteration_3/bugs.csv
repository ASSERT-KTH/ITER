bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3ffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3ffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(hiPrec  &  0x3ffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));	  final    double    epsilon    =(bits    &    0x3fffffffL)/    (TWO_POWER_52    +(hiPrec    &    0x000ffc0000000L));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3fffffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));	  final    double    epsilon    =(bits    &    0x3fffffffL)/    (TWO_POWER_52    +(hiPrec    &    0x000ffc0000000L));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  final  double  epsilon  =(tmp  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(tmp  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(tmp  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));	  final    double    epsilon    =(hiPrec    &    0x3fffffffffL)/    (TWO_POWER_52    +(bits    *    HEX_40000000L));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc000000L));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(hiPrec  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc000000L));	  final    double    epsilon    =(hiPrec    &    0x3fffffffffL)/    (TWO_POWER_52    +(bits    *    HEX_40000000L));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  double  tmp  =  hiPrecOut  *  HEX_40000000L;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  tmp  =  hiPrecOut  *  HEX_40000000L;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  tmp  =  hiPrecOut  *  HEX_40000000L;	  double    tmp    =    hiPrec    *    HEX_40000000L;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
6	[BUG]  [BUGGY]  double  aa  =  hiPrecOut  +  tmp  /  epsilon;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrecOut  +  tmp  /  epsilon;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrecOut  +  tmp  /  epsilon;	  double    aa    =    hiPrecOut    +    tmp    -    epsilon;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  double  aa  =  hiPrecOut  +  tmp  *  epsilon;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrecOut  +  tmp  *  epsilon;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrecOut  +  tmp  *  epsilon;	  double    aa    =    hiPrecOut    +    tmp    -    epsilon;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  tmp  =  lnzb  *  HEX_40000000L;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  tmp  =  lnzb  *  HEX_40000000L;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	tmp  =  lnzb  *  HEX_40000000L;	  tmp    =    lnzb    *    HEX_40000000;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  double  aa  =  hiPrec  +  tmp  *  HEX_40000000;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  +  tmp  *  HEX_40000000;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  +  tmp  *  HEX_40000000;	  double    aa    =    hiPrec    +    tmp    *    epsilon;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  double  aa  =  hiPrec  *  epsilon  -  tmp;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  *  epsilon  -  tmp;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  *  epsilon  -  tmp;	  double    aa    =    tmp    *    epsilon    -    tmp;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
11	[BUG]  [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3fffffffffffL)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3fffffffffffL)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(hiPrec  &  0x3fffffffffffL)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));	  final    double    epsilon    =(bits    &    0x3ffffffffffL)/    (TWO_POWER_52    +(hiPrec    *    HEX_40000000L));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3ffffffffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));	  final    double    epsilon    =(bits    &    0x3ffffffffffL)/    (TWO_POWER_52    +(hiPrec    *    HEX_40000000L));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  double  aa  =  tmp  +  epsilon  *  HEX_40000000;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  tmp  +  epsilon  *  HEX_40000000;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  tmp  +  epsilon  *  HEX_40000000;	  double    aa    =    tmp    +    epsilon    *    tmp;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  double  aa  =  tmp  +  lnzb  *  tmp;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  tmp  +  lnzb  *  tmp;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  tmp  +  lnzb  *  tmp;	  double    aa    =    tmp    +    epsilon    *    tmp;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3ffffffffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));	  final    double    epsilon    =(bits    &    0x3ffffffffffL)/    (TWO_POWER_52    +(hiPrec    &    0x000ffc0000000L));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3fffffffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));	  final    double    epsilon    =(bits    &    0x3ffffffffffL)/    (TWO_POWER_52    +(hiPrec    &    0x000ffc0000000L));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(hiPrec  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));	  final    double    epsilon    =(hiPrec    &    0x3fffffffffL)/    (TWO_POWER_52    +(bits    &    0x000ffc0000000L));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  final  double  tmp  =  hiPrecOut  *  2;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  tmp  =  hiPrecOut  *  2;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  tmp  =  hiPrecOut  *  2;	  final    double    tmp    =    hiPrecOut    *    4;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
19	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3fffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));	  final    double    epsilon    =(hiPrec    &    0x3ffffffL)/    (TWO_POWER_52    +(bits    *    HEX_40000000L));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
20	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3fffffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));	  final    double    epsilon    =(hiPrec    &    0x3fffffffL)/    (TWO_POWER_52    +(bits    *    HEX_40000000L));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
21	[BUG]  [BUGGY]  double  aa  =  hiPrecOut  +  epsilon  -  tmp;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrecOut  +  epsilon  -  tmp;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrecOut  +  epsilon  -  tmp;	  double    aa    =    hiPrec    +    epsilon    -    tmp;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
22	[BUG]  [BUGGY]  double  aa  =  hiPrec  +  epsilon  *  tmp;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  +  epsilon  *  tmp;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  +  epsilon  *  tmp;	  double    aa    =    hiPrec    +    epsilon    -    tmp;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  final  double  tmp  =  lnzb  *  HEX_40000000;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  tmp  =  lnzb  *  HEX_40000000;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  tmp  =  lnzb  *  HEX_40000000;	  final    double    tmp    =    epsilon    *    HEX_40000000;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
24	[BUG]  [BUGGY]  double  tmp  =  hiPrecOut  *  lnza;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  tmp  =  hiPrecOut  *  lnza;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  tmp  =  hiPrecOut  *  lnza;	  double    tmp    =    hiPrecOut    *    HEX_40000000;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
25	[BUG]  [BUGGY]  double  tmp  =  hiPrecOut  *  lnzb;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  tmp  =  hiPrecOut  *  lnzb;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  tmp  =  hiPrecOut  *  lnzb;	  double    tmp    =    hiPrecOut    *    HEX_40000000;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
26	[BUG]  [BUGGY]  double  aa  =  tmp  *  HEX_40000000;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  tmp  *  HEX_40000000;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  tmp  *  HEX_40000000;	  double    aa    =    epsilon    *    HEX_40000000;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  double  aa  =  hiPrec  *  HEX_40000000;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  *  HEX_40000000;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  *  HEX_40000000;	  double    aa    =    epsilon    *    HEX_40000000;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  double  aa  =  hiPrec  +  tmp;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  +  tmp;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  +  tmp;	  double    aa    =    tmp    +    hiPrec    -    tmp;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
29	[BUG]  [BUGGY]  double  aa  =  hiPrec  +  tmp  -  tmp;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  +  tmp  -  tmp;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  +  tmp  -  tmp;	  double    aa    =    tmp    +    hiPrec    -    tmp;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
30	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3ffffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));	  final    double    epsilon    =(bits    &    0x3ffffffffL)/    (TWO_POWER_52    +(bits    &    0x000ffc0000000L));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
31	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3fffffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));	  final    double    epsilon    =(bits    &    0x3ffffffffL)/    (TWO_POWER_52    +(bits    &    0x000ffc0000000L));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
32	[BUG]  [BUGGY]  final  double  epsilon  =(hiPrec  *  HEX_40000000L)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(hiPrec  *  HEX_40000000L)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(hiPrec  *  HEX_40000000L)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));	  final    double    epsilon    =(hiPrec    &    0x3fffffL)/    (TWO_POWER_52    +(bits    *    HEX_40000000L));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
33	[BUG]  [BUGGY]  final  double  tmp  =  hiPrecOut  *  HEX_40000000L  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  tmp  =  hiPrecOut  *  HEX_40000000L  +  1;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  tmp  =  hiPrecOut  *  HEX_40000000L  +  1;	  final    double    tmp    =    hiPrecOut    *    HEX_40000000L;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
34	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3ffffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));	  final    double    epsilon    =(hiPrec    &    0x3ffffffL)/    (TWO_POWER_52    +(bits    *    HEX_40000000L));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
35	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3fffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));	  final    double    epsilon    =(bits    &    0x3ffffffffL)/    (TWO_POWER_52    +(bits    &    0x000ffc0000000L));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
36	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3ffffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));	  final    double    epsilon    =(bits    &    0x3ffffffffL)/    (TWO_POWER_52    +(bits    &    0x000ffc0000000L));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
37	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3ffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3ffffffL)/  (TWO_POWER_52  +(hiPrec  &  0x000ffc0000000L));	  final    double    epsilon    =(hiPrec    &    0x3ffffffL)/    (TWO_POWER_52    +(bits    &    0x000ffc0000000L));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
38	[BUG]  [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3fffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3fffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(hiPrec  &  0x3fffffL)/  (TWO_POWER_52  +(bits  &  0x000ffc0000000L));	  final    double    epsilon    =(hiPrec    &    0x3ffffffL)/    (TWO_POWER_52    +(bits    &    0x000ffc0000000L));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
39	[BUG]  [BUGGY]  final  double  tmp  =  hiPrecOut  *  lnzb  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  tmp  =  hiPrecOut  *  lnzb  +  1;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  tmp  =  hiPrecOut  *  lnzb  +  1;	  final    double    tmp    =    hiPrecOut    *    lnzb;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
40	[BUG]  [BUGGY]  double  tmp  =  epsilon  *  HEX_40000000;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  tmp  =  epsilon  *  HEX_40000000;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  tmp  =  epsilon  *  HEX_40000000;	  double    tmp    =    hiPrecOut    *    HEX_40000000;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  final  double  tmp  =  hiPrec  *  lnzb;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  tmp  =  hiPrec  *  lnzb;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  tmp  =  hiPrec  *  lnzb;	  final    double    tmp    =    hiPrecOut    *    lnza;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  tmp  =  lnzb  *  hiPrec;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  tmp  =  lnzb  *  hiPrec;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	tmp  =  lnzb  *  hiPrec;	  tmp    =    lnzb    *    HEX_40000000;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
43	[BUG]  [BUGGY]  double  aa  =  hiPrec  +  tmp  /  HEX_40000000;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  +  tmp  /  HEX_40000000;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  +  tmp  /  HEX_40000000;	  double    aa    =    hiPrec    +    tmp    /    epsilon;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
44	[BUG]  [BUGGY]  double  aa  =  hiPrec  +  tmp  *  HEX_50000000;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  +  tmp  *  HEX_50000000;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  +  tmp  *  HEX_50000000;	  double    aa    =    hiPrec    +    tmp    *    epsilon;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
45	[BUG]  [BUGGY]  double  aa  =  hiPrec  *  tmp;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  *  tmp;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  *  tmp;	  double    aa    =    tmp    +    hiPrec    -    tmp;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
46	[BUG]  [BUGGY]  double  aa  =  tmp  *  epsilon  *  HEX_40000000;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  tmp  *  epsilon  *  HEX_40000000;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  tmp  *  epsilon  *  HEX_40000000;	  double    aa    =    tmp    +    epsilon    *    tmp;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
47	[BUG]  [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(bits  &  0x3fffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(bits  &  0x3fffffL)/  (TWO_POWER_52  +(hiPrec  *  HEX_40000000L));	  final    double    epsilon    =(hiPrec    &    0x3fffffL)/    (TWO_POWER_52    +(bits    *    HEX_40000000L));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
48	[BUG]  [BUGGY]  double  aa  =  tmp  *  hiPrec  -  tmp;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  tmp  *  hiPrec  -  tmp;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  tmp  *  hiPrec  -  tmp;	  double    aa    =    tmp    *    epsilon    -    tmp;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
49	[BUG]  [BUGGY]  tmp  =  epsilon  *  HEX_40000000L;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  tmp  =  epsilon  *  HEX_40000000L;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	tmp  =  epsilon  *  HEX_40000000L;	  tmp    =    epsilon    *    HEX_40000000;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
50	[BUG]  [BUGGY]  final  double  tmp  =  epsilon  *  hiPrec;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  tmp  =  epsilon  *  hiPrec;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  tmp  =  epsilon  *  hiPrec;	  final    double    tmp    =    epsilon    *    HEX_40000000;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
51	[BUG]  [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3ffffffffL)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  epsilon  =(hiPrec  &  0x3ffffffffL)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  epsilon  =(hiPrec  &  0x3ffffffffL)/  (TWO_POWER_52  +(bits  *  HEX_40000000L));	  final    double    epsilon    =(bits    &    0x3ffffffffffL)/    (TWO_POWER_52    +(hiPrec    *    HEX_40000000L));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  final  double  tmp  =  lnzb  *  hiPrecOut;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  tmp  =  lnzb  *  hiPrecOut;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  tmp  =  lnzb  *  hiPrecOut;	  final    double    tmp    =    hiPrecOut    *    lnzb;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  final  double  tmp  =  lnza  *  hiPrecOut;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  final  double  tmp  =  lnza  *  hiPrecOut;  [BUGGY]      double  aa  =  epsilon  +  tmp  -  tmp;  double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	final  double  tmp  =  lnza  *  hiPrecOut;	  final    double    tmp    =    hiPrecOut    *    lnza;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  double  aa  =  hiPrec  *  tmp  *  epsilon;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double  epsilon  =  (bits  &  0x3ffffffffffL)  /  (TWO_POWER_52  +  (bits  &  0x000ffc0000000000L));  double  lnza  =  0.0;  double  lnzb  =  0.0;  if  (hiPrec  !=  null)  {  double  tmp  =  epsilon  *  HEX_40000000;      [BUGGY]  double  aa  =  hiPrec  *  tmp  *  epsilon;  [BUGGY]      double  ab  =  epsilon  -  aa;  double  xa  =  aa;  double  xb  =  ab;  final  double  numer  =  bits  &  0x3ffffffffffL;  final  double  denom  =  TWO_POWER_52  +  (bits  &  0x000ffc0000000000L);  aa  =  numer  -  xa*denom  -  xb  *  denom;  xb  +=  aa  /  denom;  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  log  [RETURN_TYPE]  double  final  double  x  final  double[]  hiPrec  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  intPartA  intPartB  lnza  lnzb  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  t  temp  tempA  tempB  tempC  tmp  x  xa  xb  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	1246	1246	1	replace	double  aa  =  hiPrec  *  tmp  *  epsilon;	  double    aa    =    hiPrec    +    tmp    *    epsilon;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
