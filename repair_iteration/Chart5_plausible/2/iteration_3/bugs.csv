bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.getAutoSort());  [CE]  cannot  find  symbol  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.getAutoSort());  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.getAutoSort());	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.getAutoSort());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
2	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.autoSort.getAutoSort());  [CE]  boolean  cannot  be  dereferenced  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.autoSort.getAutoSort());  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.autoSort.getAutoSort());	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.getAutoSort());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	27	None	replace
3	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.autoSort);  [CE]  cannot  find  symbol  autoSort  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.autoSort);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.autoSort);	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.autoSort);    	non-compiled	[CE]  cannot  find  symbol  autoSort	1	None	replace
4	[BUG]  [BUGGY]  this.data.add(new  XYAutoSort(x,  y),  existing);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(new  XYAutoSort(x,  y),  existing);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(new  XYAutoSort(x,  y),  existing);	          this.data.add(new    XYAutoSort(x,    y));    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
5	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  this.data.remove(new  XYDataItem(x,  y));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.remove(new    XYDataItem(x,    y));    this.data.remove(new  XYDataItem(x,  y));	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	8	1	add
6	[BUG]  [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  this.data.remove(new  XYDataItem(x,  y));  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  this.data.remove(new  XYDataItem(x,  y));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(new    XYDataItem(x,    y));    this.data.remove(new  XYDataItem(x,  y));	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	8	1	add
7	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]      java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.remove(new  XYDataItem(x,  y));  }  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.remove(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.remove(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	8	1	add
8	[BUG]  [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.remove(new  XYDataItem(x,  y));  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]      java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.remove(new  XYDataItem(x,  y));  }  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.remove(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	8	1	add
9	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]        java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.remove(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	8	1	add
10	[BUG]  [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]        java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.remove(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	8	1	add
11	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    XYDataItem  existing  =(XYDataItem)this.data.get(index);  this.data.add(new  XYDataItem(x,  y));  XYDataItem  existing  =(XYDataItem)this.data.get(index);  [CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    XYDataItem  existing  =(XYDataItem)this.data.get(index);  this.data.add(new  XYDataItem(x,  y));  XYDataItem  existing  =(XYDataItem)this.data.get(index);  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        XYDataItem    existing    =(XYDataItem)this.data.get(index);    this.data.add(new  XYDataItem(x,  y));  XYDataItem  existing  =(XYDataItem)this.data.get(index);	  	non-compiled	[CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)	28	None	add
12	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    XYDataItem  existing  =(XYDataItem)this.data.get(index);  XYDataItem  existing  =(XYDataItem)this.data.get(index);  [CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    XYDataItem  existing  =(XYDataItem)this.data.get(index);  XYDataItem  existing  =(XYDataItem)this.data.get(index);  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        XYDataItem    existing    =(XYDataItem)this.data.get(index);    XYDataItem  existing  =(XYDataItem)this.data.get(index);	  	non-compiled	[CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)	28	None	add
13	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y,  existing.getIndex()));  [CE]  cannot  find  symbol  existing  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y,  existing.getIndex()));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y,  existing.getIndex()));	  this.data.add(-index    -    1,    new    XYDataItem(x,    y,    this.autoSort));    	non-compiled	[CE]  cannot  find  symbol  existing	18	None	replace
14	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y,  existing.getMaximumItemCount()));  [CE]  cannot  find  symbol  existing  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y,  existing.getMaximumItemCount()));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y,  existing.getMaximumItemCount()));	  this.data.add(-index    -    1,    new    XYDataItem(x,    y,    this.autoSort));    	non-compiled	[CE]  cannot  find  symbol  existing	18	None	replace
15	[BUG]  [BUGGY]  this.data.add(new  XYDataItem(x,  y),  existing.getAutoSort());  [CE]  cannot  find  symbol  existing  [FE]        java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(new  XYDataItem(x,  y),  existing.getAutoSort());  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(new  XYDataItem(x,  y),  existing.getAutoSort());	  this.data.add(new    XYDataItem(x,    y),    this.autoSort);    	non-compiled	[CE]  cannot  find  symbol  existing	7	None	replace
16	[BUG]  [BUGGY]  this.data.add(new  XYDataItem(x,  y),  this.autoSort,  index);  [CE]  no  suitable  method  found  for  add(XYDataItem,boolean,int)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(new  XYDataItem(x,  y),  this.autoSort,  index);  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(new  XYDataItem(x,  y),  this.autoSort,  index);	  this.data.add(new    XYDataItem(x,    y),    this.autoSort);    	non-compiled	[CE]  no  suitable  method  found  for  add(XYDataItem,boolean,int)	7	None	replace
17	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);  [CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	XYDataItem    existing    =(XYDataItem)this.data.get(index    -    1);    XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);	  	non-compiled	[CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)	3	None	add
18	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1));  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1);  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	XYDataItem    existing    =(XYDataItem)this.data.get(index    -    1);    XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1));	  	non-compiled	[CE]  ';'  expected	3	None	add
19	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -2  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(index  -  1,  new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	this.data.add(index  -  1,  new  XYDataItem(x,  y));	          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -2  	37	2	replace
20	[BUG]  [BUGGY]  this.data.add(index  -  1,  new  XYDataItem(x,  y));  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -2  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(index  -  1,  new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(index  -  1,  new  XYDataItem(x,  y));	          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -2  	37	2	replace
21	[BUG]  [BUGGY]  this.data.add(new  XYAutoSortItem(x,  y),  existing);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(new  XYAutoSortItem(x,  y),  existing);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(new  XYAutoSortItem(x,  y),  existing);	          this.data.add(new    XYAutoSortItem(x,    y));    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
22	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(x);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	this.data.add(x);	          this.data.remove(x);    	compilable	  [FE]  ClassCastException  	11	2	replace
23	[BUG]  [BUGGY]  this.data.add(x);  [FE]  ClassCastException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(x);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(x);	          this.data.remove(x);    	compilable	  [FE]  ClassCastException  	11	2	replace
24	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(0);  this.data.remove(0);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.remove(0);    this.data.remove(0);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	2	add
25	[BUG]  [BUGGY]          this.data.remove(0);  this.data.remove(0);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(0);  this.data.remove(0);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(0);    this.data.remove(0);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	2	add
26	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(0);  this.data.remove(1);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.remove(0);    this.data.remove(1);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	2	add
27	[BUG]  [BUGGY]          this.data.remove(0);  this.data.remove(1);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(0);  this.data.remove(1);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(0);    this.data.remove(1);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	2	add
28	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index,  new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	this.data.add(-index,  new  XYDataItem(x,  y));	          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  	39	2	replace
29	[BUG]  [BUGGY]  this.data.add(-index,  new  XYDataItem(x,  y));  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index,  new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index,  new  XYDataItem(x,  y));	          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  	39	2	replace
30	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(x);  this.data.remove(x);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.remove(x);    this.data.remove(x);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	10	1	add
31	[BUG]  [BUGGY]          this.data.remove(x);  this.data.remove(x);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(x);  this.data.remove(x);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(x);    this.data.remove(x);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	10	1	add
32	[BUG]  [BUGGY]          this.data.remove(x);  XYDataItem  x  =(XYDataItem)this.data.get(x);  [CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]      java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(x);  XYDataItem  x  =(XYDataItem)this.data.get(x);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(x);    XYDataItem  x  =(XYDataItem)this.data.get(x);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)	10	None	add
33	[BUG]  [BUGGY]          this.data.remove(x);  XYDataItem  existing  =(XYDataItem)this.data.get(x);  [CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;  [FE]        java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(x);  XYDataItem  existing  =(XYDataItem)this.data.get(x);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(x);    XYDataItem  existing  =(XYDataItem)this.data.get(x);	  	non-compiled	[CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;	10	None	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
35	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	38	2	add
36	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -3  [FE]      AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -3  	38	2	add
37	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -3  [FE]      AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -3  	38	2	add
38	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.	  	non-compiled	[CE]  <identifier>  expected	38	None	add
39	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -3  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -3  	19	2	add
40	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -3  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -3  	19	2	add
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  this.data.remove(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        this.data.add(new    XYDataItem(x,    y));    this.data.remove(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	19	2	add
42	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  this.data.remove(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  this.data.remove(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        this.data.add(new    XYDataItem(x,    y));    this.data.remove(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	19	2	add
43	[BUG]  [BUGGY]  this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  IndexOutOfBoundsException:  Index:  -1  }  [CE]  not  a  statement  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  IndexOutOfBoundsException:  Index:  -1  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  IndexOutOfBoundsException:  Index:  -1  }	          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)    {    IndexOutOfBoundsException:    Index:    -1    }    	non-compiled	[CE]  not  a  statement	22	None	replace
44	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1  +  1);  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1  +  1);	  XYDataItem    existing    =(XYDataItem)this.data.get(index    -    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
45	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1  +  1);  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	XYDataItem  existing  =(XYDataItem)this.data.get(index  -  1  +  1);	  XYDataItem    existing    =(XYDataItem)this.data.get(index    -    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
46	[BUG]  [BUGGY]  XYDataItem  x  =(XYDataItem)this.data.get(index  -  1);  [CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  XYDataItem  x  =(XYDataItem)this.data.get(index  -  1);  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	XYDataItem  x  =(XYDataItem)this.data.get(index  -  1);	  XYDataItem    x    =(XYDataItem)this.data.get(index);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)	25	None	replace
47	[BUG]  [BUGGY]  XYDataItem  x  =(XYDataItem)this.data.get(index  +  1);  [CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]                java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  XYDataItem  x  =(XYDataItem)this.data.get(index  +  1);  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	XYDataItem  x  =(XYDataItem)this.data.get(index  +  1);	  XYDataItem    x    =(XYDataItem)this.data.get(index);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)	25	None	replace
48	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.autoSort.setY(y));  [CE]  boolean  cannot  be  dereferenced  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.autoSort.setY(y));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.autoSort.setY(y));	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.setY(y));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	34	None	replace
49	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.setY(y));  [CE]  'void'  type  not  allowed  here  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.setY(y));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.setY(y));	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.setY(y));    	non-compiled	[CE]  'void'  type  not  allowed  here	34	None	replace
50	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setIndex(this.autoSort);  [CE]  ')'  expected  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setIndex(this.autoSort);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setIndex(this.autoSort);	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.setY(y);    	non-compiled	[CE]  ')'  expected	35	None	replace
51	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);  [CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	XYDataItem    existing    =(XYDataItem)this.data.get(index    +    1);    XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);	  	non-compiled	[CE]  variable  existing  is  already  defined  in  method  addOrUpdate(Number,Number)	5	None	add
52	[BUG]  [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1));  [CE]  ';'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1);  XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	XYDataItem    existing    =(XYDataItem)this.data.get(index    +    1);    XYDataItem  existing  =(XYDataItem)this.data.get(index  +  1));	  	non-compiled	[CE]  ';'  expected	5	None	add
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
54	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
56	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
58	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.remove(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	36	2	add
59	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.autoSort.getIndex());  [CE]  boolean  cannot  be  dereferenced  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.autoSort.getIndex());  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.autoSort.getIndex());	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.getIndex());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	2	None	replace
60	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.getIndex());  [CE]  cannot  find  symbol  [FE]                java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.getIndex());  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten.getIndex());	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.getIndex());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(-index  -  1,  new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	38	2	add
62	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(-index  -  1,  new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	38	2	add
63	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(0);  XYDataItem  existing  =(XYDataItem)this.data.get(index);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.remove(0);    XYDataItem  existing  =(XYDataItem)this.data.get(index);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	2	add
64	[BUG]  [BUGGY]          this.data.remove(0);  XYDataItem  existing  =(XYDataItem)this.data.get(index);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(0);  XYDataItem  existing  =(XYDataItem)this.data.get(index);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(0);    XYDataItem  existing  =(XYDataItem)this.data.get(index);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	2	add
65	[BUG]  [BUGGY]          this.data.remove(0);  XYDataItem  existing  =(XYDataItem)this.data.get(i);  [CE]  cannot  find  symbol  i  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(0);  XYDataItem  existing  =(XYDataItem)this.data.get(i);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(0);    XYDataItem  existing  =(XYDataItem)this.data.get(i);	  	non-compiled	[CE]  cannot  find  symbol  i	31	None	add
66	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.data.getAutoSort());  [CE]  cannot  find  symbol  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.data.getAutoSort());  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.data.getAutoSort());	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.getAutoSort());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
67	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.data.setY(y));  [CE]  cannot  find  symbol  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.data.setY(y));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.data.setY(y));	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.setY(y));    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
68	[BUG]  [BUGGY]  XYDataItem  x  =(XYDataItem)existing.getX();  [CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  XYDataItem  x  =(XYDataItem)existing.getX();  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	XYDataItem  x  =(XYDataItem)existing.getX();	  XYDataItem    x    =(XYDataItem)existing.autoSort();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)	12	None	replace
69	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setOverwritten(y);  [CE]  ')'  expected  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setOverwritten(y);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setOverwritten(y);	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.setY(y);    	non-compiled	[CE]  ')'  expected	35	None	replace
70	[BUG]  [BUGGY]          this.data.remove(x);  XYDataItem  existing  =(XYDataItem)super.clone();  [CE]  unreported  exception  CloneNotSupportedException;  must  be  caught  or  declared  to  be  thrown  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(x);  XYDataItem  existing  =(XYDataItem)super.clone();  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(x);    XYDataItem  existing  =(XYDataItem)super.clone();	  	non-compiled	[CE]  unreported  exception  CloneNotSupportedException;  must  be  caught  or  declared  to  be  thrown	10	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
72	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
73	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten);  [CE]  no  suitable  method  found  for  add(int,XYDataItem,XYDataItem)  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  overwritten);	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.autoSort);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,XYDataItem,XYDataItem)	1	None	replace
74	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.data.getIndex());  [CE]  cannot  find  symbol  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.data.getIndex());  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  this.data.getIndex());	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.getIndex());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
75	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
76	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(index,  new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	this.data.add(index,  new  XYDataItem(x,  y));	          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	39	2	replace
77	[BUG]  [BUGGY]  this.data.add(index,  new  XYDataItem(x,  y));  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(index,  new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(index,  new  XYDataItem(x,  y));	          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -1  	39	2	replace
78	[BUG]  [BUGGY]          this.data.remove(x);  XYDataItem  x  =(XYDataItem)this.autoSort.clone();  [CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(x);  XYDataItem  x  =(XYDataItem)this.autoSort.clone();  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(x);    XYDataItem  x  =(XYDataItem)this.autoSort.clone();	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addOrUpdate(Number,Number)	10	None	add
79	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.remove(new  XYDataItem(x,  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.remove(new  XYDataItem(x,  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.remove(new  XYDataItem(x,	  	non-compiled	[CE]  ')'  expected	38	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	38	2	add
81	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	38	2	add
82	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -2  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(index  -  1,  new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(index  -  1,  new  XYDataItem(x,  y));  }	          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -2  	37	1	replace
83	[BUG]  [BUGGY]  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(index  -  1,  new  XYDataItem(x,  y));  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -2  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(index  -  1,  new  XYDataItem(x,  y));  }  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	if(this.allowDuplicateXValues)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(index  -  1,  new  XYDataItem(x,  y));  }	          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  -2  	37	1	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	36	2	add
85	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	36	2	add
86	[BUG]  [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.add(new    XYDataItem(x,    y));    if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  [BUGGY]      this.data.add(-index  -  1,  new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.add(new        XYDataItem(x,        y));        if(this.autoSort)    {    this.data.add(new    XYDataItem(x,    y));    }    else    {    this.data.add(-index    -    1,    new    XYDataItem(x,    y));    }    this.data.add(new  XYDataItem(x,  y));  if(this.autoSort)  {  this.data.add(new  XYDataItem(x,  y));  }  else  {  this.data.add(new  XYDataItem(x,	  	non-compiled	[CE]  ')'  expected	36	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	add	                this.data.remove(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	8	2	add
88	[BUG]  [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [FE]  AssertionFailedError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  -1    [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]          this.data.remove(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	                this.data.remove(new    XYDataItem(x,    y));    this.data.add(new  XYDataItem(x,  y));	  	compilable	  [FE]  AssertionFailedError  	8	2	add
89	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setX(y));  [CE]  cannot  find  symbol  existing  [FE]            java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setX(y));  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setX(y));	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.setY(y));    	non-compiled	[CE]  cannot  find  symbol  existing	34	None	replace
90	[BUG]  [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setX(y);  [CE]  ')'  expected  [FE]              java.lang.IndexOutOfBoundsException:  Index:  -1      [CONTEXT]      throw  new  SeriesException(     "Couldn't  clone  XYDataItem!     ");  }  existing.setY(y);  }  else  {      if  (this.autoSort)  {      [BUGGY]  this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setX(y);  [BUGGY]      }  else  {  this.data.add(new  XYDataItem(x,  y));  }  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  }  [CLASS]  XYSeries  [METHOD]  addOrUpdate  [RETURN_TYPE]  XYDataItem  Number  x  Number  y  [VARIABLES]  boolean  allowDuplicateXValues  autoSort  dataRemoved  notify  Number  x  y  List  data  long  serialVersionUID  int  end  i  index  maximum  maximumItemCount  size  start  XYDataItem  existing  overwritten  CloneNotSupportedException  e  	projects/Chart5/source/org/jfree/data/xy/XYSeries.java	0.7071067811865475	564	564	1	replace	this.data.add(-index  -  1,  new  XYDataItem(x,  y),  existing.setX(y);	  this.data.add(-index    -    1,    new    XYDataItem(x,    y),    existing.setY(y);    	non-compiled	[CE]  ')'  expected	35	None	replace
