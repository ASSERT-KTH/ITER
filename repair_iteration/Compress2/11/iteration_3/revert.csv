projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){if(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){If(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){if(read>=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){when(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){if(read>=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){if(read!=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){if(read>>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){if(read==expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){If(read>=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){if(read[Delete]expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){if(read[BUGGY]expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){if(read==expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){if(read>=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){if(read!=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){if(read>>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){If(read==expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){if(read[BUGGY]expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<realized.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("Failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("Failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("f
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67when(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<realized.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length&&read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>=realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read==realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read<realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read!=realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length||filemode!=null){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(expected);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(expected,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(refigured);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(realized,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length&&read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read==0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||realized.length>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read!=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>=0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||realized>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(expected);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(expected,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(read,realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(refigured);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67If(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getInputStream(read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getInputStream(),read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getOutputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getInputStream(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getInputStream()+read;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getInputStream(),read;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){if(read
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||realized.length>read.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(refigured);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(read,realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(realized,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read<read.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(expected,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(expected);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(refigured);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(read,realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(read,realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(expected);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(expected,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(refigured);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(realized,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){if(read
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length){if(read<expected.length||read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length){If(read<expected.length||read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length){if(read>=expected.length||read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length){if(read<required.length||read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length){when(read<expected.length||read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>0){if(read<expected.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>0){If(read<expected.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>0){if(read>=expected.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>0){if(read<required.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>0){if(read>expected.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>0){while(read<expected.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){(read>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){(read+expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){if(read>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){If(read>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){if(read>anticipated.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){while(read>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){(read>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("Failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("f
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(expected);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(realized,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(expected,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(refigured);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(expected,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(read,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(expected.length,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(expected);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(needed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(expected,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(read,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length||read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length-1){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("Failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(refigured));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(realized));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(refigured));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getNextArEntry();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getArInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length||filemode==null){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>saved.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(needed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(expected.length,read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(read,expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read==expected.length){If(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){If(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>=expected.length){If(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>0){for(read<expected.length||read>0){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(read,expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(needed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(read,expected.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(needed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){intread=read(expected.length);if(read>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){if(read>expected.length)thrownewIOException("failedtoreadheader");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){((read>expected.length)||(read>expected.length)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length){while(read<expected.length||read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length){for(read<expected.length||read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(read,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67byteexpected=read(read);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(expected,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(read,realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintsaved=read(read,realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(realized));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(realized));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67InputStreaminput=getInputStream().readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<realized.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(refigured));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length||offset>expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length||isEnabled(Feature.FLUSH_PASSED_ARRAY)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length||isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>realized.length){if(read>expected.length||read>realized.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<realized.length;i++){if(expected[i]==realized[i]){thrownewIOException("invalidheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){if(read>expected.length)<thrownewIOException("failedtoreadheader");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){if(read>expected.length){thrownewIOException("failedtoreadheader");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67intexpected=read(read,realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(read,realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintoffset=read(read,realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){for(inti=0;i<realized.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<read;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(read,realized.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintread=read(read,realized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67while(read<expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(refigured));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]==realized[i]){thrownewIOException("failedtoreadheader"+newString(refigured));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected.length=read(actualized);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length){(read>=expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read>expected.length){(read<expected.length){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67finalintexpected=read(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read<expected.length||read>MAX_ARRAY){
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(realized));}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java67if(read!=expected.length){for(inti=0;i<expected.length;i++){if(expected[i]!=realized[i]){thrownewIOException("failedtoreadheader"+newString(read));}}
