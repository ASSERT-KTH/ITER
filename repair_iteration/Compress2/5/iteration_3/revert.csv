projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){input=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){closed=true;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){closed=true;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.clone();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=pInput;closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=newAssertionFailedError();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=newArArchiveInputStream(input);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.open=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){input=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){input=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofAssertionFailedError){input=(ArErrorFailedError)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){input=(arArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofARArchiveInputStream){input=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ArArchiveInputStream)input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.next();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofARArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49loop=Loop.NEGATIVE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49loop=Loop.NEGATIVE_STRING;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(startOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_RCURLY,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_REQUEST,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=(ArArchiveInputStream)input.read();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=(ArArchiveInputStream)input.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=newJsonArchiveInputStream(input);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=newJsonArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){input=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pIn
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}else{input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofARRArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49shutting=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49close=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wrapped=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine(),input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=pInput.getOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=pInput.getLowerBound();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=pInput.getLength();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=pInput.getStartOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=pInput.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=pInput.getLowerBounds();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset!=0){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.open=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.open=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;this.open=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.open=true;}else{thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;this.open=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.open=true;}else{System.arraycopy(input,offset,this.offset,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.open=true;}else{input=pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;output=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchive
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=input;closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=null;closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=output;closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(pInput);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.pInput=pInput;closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49finalArArchiveInputStreampInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=pInput.getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).input=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=pInput.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).writeEndObject();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.pInput=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEndOfFile(endOfFile);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchive
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInput
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream()
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArch
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;this.closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;this.closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_RCURLY,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,InputStream.DEFAULT_RCURLY);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_RCURLY,input,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_RCURLY,input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_RCURLY,input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(pInput,InputStream.DEFAULT_RCURLY);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_RCURLY,input,open);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);output=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=pInput.readInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEndOffset(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;pInput=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;pInput=(ArArchiveInputStream)pInput.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=(ArArchiveInputStream)pInput.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=(ArArchiveInputStream)pInput.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49nullclosed=false;pInput=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrort=newAssertionFailedError("CannotinitializeArArchiveInputStream:"+pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrort=newAssertionFailedError("CannotinitializeArArchiveInputStreamforinput:"+pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrort=newAssertionFailedError("CannotinitializeArArchiveInputStream:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrort=newAssertionFailedError("CannotinitializeArArchiveInputStream:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInput==null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInput==null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInput!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||input!=null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInput!=null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||input==null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(input==null)?null:input.getClass().getName();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(input==null)?null:input.getValue();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(input==null)?null:input.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setOffsetToSubtract(offsetToSubtract(pInput));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=Loop.NEGATIVE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=Loop.NEGATIVE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Loop.NEGATIVE=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.loop=Loop.NEGATIVE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49init=Loop.NEGATIVE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Loop.NEGATIVE=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input,offset,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInput!=null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=pInput.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.readLine()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)this.arArchiveInputStream.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.readLine(),pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newARRAYInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,pInput,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49setInput(pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(0);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(){};
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){input=(arArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){input=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){input=(ArArchiveInputStream)null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setEndOfLinks(startOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setEndOfLinks(ENDOFLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput.readLine());input=newArArchiveInputStream(pInput.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(inputinstanceofArArchiveInputStream)?((ArArchiveInputStream)pInput).close():null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(inputinstanceofArArchiveInputStream)?((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(inputinstanceofArArchiveInputStream)?((ArArchiveInputStream)pInput).close():newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input,pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(pInput.readLine()+offset,pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,in.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine()+offset);input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.read
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){input=(RawArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);output=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchive
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEncoding(encoding);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchive
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInput
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArch
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.input=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.input=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(pInput,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49close=false;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;input=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.offset=offset;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;this.offset=0;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.offset=offset;}else{System.arraycopy(input,0,this.input,0,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.offset=offset;}else{System.arraycopy(input,0,this.offset,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){for(ARArchiveInputStreaminput:(ARArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream||inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();System.arraycopy(pInput,0,input,0,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){finalArArchiveInputStreaminput=(ArArchiveInputStream)input;input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput){closed=true;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(pInput));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;output=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput>=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput>=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input;pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pInput;pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pInput;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;pInput=newArArchiveInputStream(input,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput.clone();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.getRawClass();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.copy();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.getRaw();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);output=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){input=(ArArchiveOutputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input>=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){if(closed){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getLength();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getLength();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;longoffset=pInput.getLength();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;offset=pInput.getLength();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;offset=pInput.getLength();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;offset=pInput.getLength();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ARArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).flush();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput>=null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input);pInput.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input);closed.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input);pInput.flush();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input;input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||pInput!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;longoffset=pInput.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getOffset();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getOffset();}else{System.arraycopy(pInput,0,input,0,pInput.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getOffset();}else{thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;longoffset=pInput.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input,pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input,pInput+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input,pInput,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEndOfLinks(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setStartOfLinks(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setLinks(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEndOfLinks(input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed="";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed|=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49This.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}else{input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);}else{input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newArInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveError){input=(ArArchiveError)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArErrorFailedError){input=(ArErrorFailedError)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofAssertionFailedError){input=(ArErrorFailedError)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveFailedError){input=(ArArchiveFailedError)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArErrorFailedError){input=(ARErrorFailedError)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArErrorFailedError){input=(arErrorFailedError)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).close();input=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).close();input=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).close();output=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).close();input=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_REQUEST,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,InputStream.DEFAULT_REQUEST);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(pInput,InputStream.DEFAULT_REQUEST);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_REQUEST,input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_REQUEST,input,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_REQUEST,input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newAssertionFailedError();this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newAssertionFailedErrorImpl(input);this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;super(pInput);this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newAssertionFailedErrorImpl(input,this.closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newArArchiveInputStream(input,this.closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newAssertionFailedErrorImpl(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(pInput+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofARArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49close=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.close=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49init=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}if(pInput!=null){closed=true;}elseif(pInput==null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}if(pInput!=null){closed=false;}elseif(pInput!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}if(pInput!=null){closed=true;}elseif(pInput>=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}If(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;}if(pInput>=null){closed=true;}elseif(pInput!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newARRAYInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newARRAYInputStream(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);input=(ArArchiveInputStream)pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);input=(ArArchiveInputStream)input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).encode(pInput);input=(ArArchiveInputStream)pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).encode(pInput);input=(ArArchiveInputStream)input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);output=(ArArchiveInputStream)pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49shutting=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.open=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=this.arArchiveInputStream;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveOutputStream){((ARArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){(ARArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(in
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(ArArchiveInputStream)input.read();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=(ArArchiveInputStream)input.read();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=(ArArchiveInputStream)pInput.read();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(ArArchiveInputStream)input.read();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=(ArArchiveInputStream)input.read();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(ArgumentArchiveInputStream)input.read();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedError(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newARArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;pInput=newAssertionFailedError();this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;pInput=newAssertionFailedErrorImpl(input);this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;super(pInput);this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;pInput=newAssertionFailedErrorImpl();this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;pInput=newAssertionFailedErrorImpl(input,this.closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;pInput=newAssertionFailedErrorImpl(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(ArArchiveInputStream)input.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=(ArArchiveInputStream)pInput.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(ArArchiveInputStream)pInput.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=(ArArchiveInputStream)pInput.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;pInput=(ArArchiveInputStream)pInput.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=(ArArchiveInputStream)input.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(pInput);input.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(pInput);pInput.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(inputinstanceofArchiveInputStream)?((ArchiveInputStream)pInput).close():null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){finalArchiveInputStreampInput=(ArchiveInputStream)pInput;pInput.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArchiveInputStream)pInput).close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput.getAr(),input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){closed=true;}elseif(input!=null){closed=false;output=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){closed=true;}elseif(input!=null){closed=false;returnnewArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.closed=true;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.open=true;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.closed=true;this.open=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.input=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.open=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input==null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newARArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput==null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input>=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(in
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInput
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEndOfFile();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEndOfLinks(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(input==null)?null:input.getClass().getName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){input=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)this.arArchiveInputStream.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.readObject();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.read()+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getStartOffset();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getStartOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;longoffset=pInput.getStartOffset();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;offset=pInput.getStartOffset();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getStartOffset();closed=true;}else{thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;offset=pInput.getStartOffset();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||pInput!=null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,null,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,null,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(null,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,null,pInput.getVersion());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset+1,pInput.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,offset,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input,offset+1,pInput.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pIn).setAnswer(newArArchiveInputStream(input));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input,offset));
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input),pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(inputinstanceofArArchiveInputStream){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchive
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchive
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArgArchiveInputStream)pInput;input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){if(!closed){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){if(!closed){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getLowerBounds();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getLowerBounds();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;longoffset=pInput.getLowerBounds();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;offset=pInput.getLowerBounds();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getLowerBounds();closed=true;}else{thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput.getLowerBounds()!=null){closed=true;offset=pInput.getLowerBounds();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAY
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newARArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput,input.length);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);in.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,InputStream.DEFAULT);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(pInput,InputStream.DEFAULT);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT,input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,Integer.DEFAULT);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(pInput.DEFAULT,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT,input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){closed=false;input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput){closed=true;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);}else{input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getOffset();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;longoffset=pInput.getOffset();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;offset=pInput.getOffset();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;offset=pInput.getOffset();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getOffset();closed=true;}else{thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(startOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(startOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(enabled);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49||!closed){input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=pInput.getInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input>=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();output=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=pInput;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){input=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkNotNull(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkNotNull(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(pInput,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)input;input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(pOutput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){this.closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){this.closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){this.closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){this.closed=true;}else{((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wrapped=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wrapped=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wrapped=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(startOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wrapped=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(ENDOFLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wrapped=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){if(input!=null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){if(input!=null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){if(input==null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofARArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveOutputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).setEndOfLinks(startOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pInput;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=Loop.NEGATIVE_STRING;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=Loop.NEGATIVE_STRING;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Loop.NEGATIVE_STRING=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=Loop.NEGATIVE_STRING;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49init=Loop.NEGATIVE_STRING;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Loop.NEGATIVE_STRING=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=pInput.inputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;output=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;output=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){this.closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInput
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput);this.offset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input);this.offset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input,pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input);this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newAssertionFailedError();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=newAssertionFailedError();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=newAssertionFailedError();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=newAssertionFailedError();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newAssertionFailedError();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){finalArArchiveInputStreampInput=(ArArchiveInputStream)pInput;pInput=pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){finalArArchiveInputStreampInput=(ArArchiveInputStream)pInput;pInput.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){finalArArchiveInputStreampInput=(ArArchiveInputStream)pInput;pInput=pInput.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49This.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream||pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){finalArArchiveInputStreampInput=(ARArchiveInputStream)pInput;pInput.writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).writeEndArray();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){finalArArchiveInputStreampInput=(ARArchiveInputStream)pInput;pInput.writeStartObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(pInput.readLine(),pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(pInput.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input.readLine(),input.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);pInput=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).encode(pInput);output=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){input=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveOutputStream){input=(ARArchiveOutputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){input=(ARArchiveInputStream)pOutput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(startOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setstartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(arArchiveInputStreaminstanceofARArchiveInputStream)?(ARArchiveInputStream)pInput:null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){(ARArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null=input.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null="";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null="ArchiveInputStream";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.offset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.length=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.file=pInput.getFile();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.file=pInput.getPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.open=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.file=pInput.getMethod();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.file=pInput.getRawClass();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}else{input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ArArchiveInputStream)input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ArArchiveInputStream)input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){for(ARArchiveInputStreaminput:(ARArchiveInputStream)input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){For(ArArchiveInputStreaminput:(ArArchiveInputStream)input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ARArchiveInputStream)input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;closed=true;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;InputStreamclosed=true;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;this.open=true;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;open=true;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;pInput=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;pInput=newAssertionFailedError();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;pInput=pInput.getAsIO();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=null;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput>=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){closed=false;output=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=InputStream.parseInput(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=InputStream.toByteArray(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=newArArchiveInputStream(input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newARArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newARRAYInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).append('n');input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).append('n');input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=input<null?null:input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=input<null?null:input.openArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput.next();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.getBytes();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.getData();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).input=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(pInput);output=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){input=newARArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){input=newARRAYInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.input=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.file=pInput.getFile();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.file=pInput.getPath();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.file=pInput.getRawClass();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.open=closed;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((FileArchiveInputStream)pInput).close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){finalFileArchiveInputStreampInput=(FileArchiveInputStream)pInput;pInput.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){finalFileArchiveInputStreampInput=(FileArchiveInputStream)pInput;pInput=pInput.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){finalFileArchiveInputStreampInput=(FileArchiveInputStream)pInput;pInput=pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){(ARArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openRoot=true;pInput=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openRoot=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openInput=true;pInput=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;pInput=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;pInput=newJsonArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newJsonArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newJsonArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newJsonArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=newJsonArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;pInput=newJsonArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49close=false;pInput=newJsonArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(input!=null)?null:input.getClass().getName();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(input!=null)?null:input.getClass().getName();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getLowerBound();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getLowerBound();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;longoffset=pInput.getLowerBound();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;offset=pInput.getLowerBound();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getLowerBound();closed=true;}else{thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getLowerBound();closed=true;}else{input=pInput.getInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input>=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;output=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);output=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=input+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1L;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=pInput+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+2;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset/1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+3;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;this.closed=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;this.open=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;this.input=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;this.input=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;super(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset+1,pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArchiveInputStream){((ArchiveOutputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).flush();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){if(closed){returntrue;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input>=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput,input);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49setInput(input);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=Integer.MAX_VALUE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=input.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=Integer.parseInt(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=0;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input,offset,offset+1);}else{input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input,offset,offset+1,pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input,offset,offset+1);}else{input=newArArchiveInputStream(pInput,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(pInput,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input,offset,offset+1,pInput.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=pInput.getInput();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput>=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){input=(ARArchiveInputStream)pOutput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){input=(ARArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(arArchiveInputStream)pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(arArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input.readLine());closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(pInput.readLine());closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;pInput=newArArchiveInputStream(input);closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;pInput=newArArchiveInputStream(input);closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=newArArchiveInputStream(input);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;pInput=newArArchiveInputStream(input);closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(offset!=0){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(offset>=0){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(pInput.readLine()+offset,pInput.readLine()+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(pInput.readLine()+offset,pInput.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newARRAYInputStream(input);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){finalArArchiveInputStreampInput=(ArArchiveInputStream)pInput;pInput.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){finalArArchiveInputStreampInput=(ArArchiveInputStream)pInput;pInput=pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream,!closed){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream,!closed){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchive
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream,!closed){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInput
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkState(pInputinstanceofArArchiveInputStream,!closed){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArch
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newJsonArchiveInputStream(input);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newJsonArchiveInputStream(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=newJsonArchiveInputStream(input);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=newJsonArchiveInputStream(input);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=newJsonArchiveInputStream(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49ArArchiveInputStreampInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49parser=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;pInput=pInput.getAstRoot();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=pInput.getAstRoot();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input,pInput+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;this.offset=0;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;this.offset=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49close=false;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}else{if(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset+1,pInput);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset+1,pInput);input=newARRAYInputStream(input,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newARRAYInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=pInput.open();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newInputStreamInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){input=(ARArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=true;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError(pInput.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;super(input);this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newAssertionFailedError(input);this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;this.open=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newAssertionFailedError(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newAssertionFailedError();this.offset=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).setEnabled(true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).setEndOfLinks(offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=pInput.readIn();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,Integer.DEFAULT_REQUEST);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){((ARArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){input=newARRAYInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){input=newARArchiveInputStream(pInput);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).setEndOfLinks(startOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine()+offset,input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine()+offset,input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.read
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine()+offset,input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.read
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}else{input=newArArchiveInputStream(input.readLine()+offset,input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input.readLine()+offset,input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;longoffset=pInput.getLowerBounds();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;longoffset=pInput.getLowerBounds();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;longoffset=pInput.getLowerBounds();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;longoffset=pInput.getLowerBounds();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;longoffset=pInput.getLowerBounds();closed=true;}else{System.arraycopy(pInput,0,input,0,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput.getResourceName(),input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;input=newArArchiveInputStream(input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;input=newArArchiveInputStream(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError("CannotinitializeArArchiveInputStream:"+input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError("CannotinitializeArArchiveInputStream:"+pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError("CannotinitializeArArchiveInputStreamforinput:"+pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newFileInputStream(input.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newFileInputStream(input.readLine());closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input.readLine());closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setClosed(closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setEnabled(true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newInputStreamInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pIn;input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError("Inputinputnotfollowedbyadigit");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError("Inputinputnotsupported.");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pOutput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;this.offset=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;this.open=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;pInput=newAssertionFailedError();this.offset=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;super(input);this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;pInput=newAssertionFailedError();this.offset=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){this.closed=true;}else{((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){this.closed=true;}else{((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input);output=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;longoffset=pInput.getLowerBound();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;longoffset=pInput.getLowerBound();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;longoffset=pInput.getLowerBound();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;longoffset=pInput.getLowerBound();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;longoffset=pInput.getLowerBound();closed=true;}else{System.arraycopy(pInput,0,input,0,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setClosed(true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setIsEnabled(true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){input=newARArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){input=newARRAYInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}else{input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){((ARArchiveInputStream)input).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.loop=Loop.NEGATIVE_STRING;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wire=Loop.NEGATIVE_STRING;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true,input=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.get();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.getParent();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input>=null){closed=false;input=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;close=true;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;init(input,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;pInput=input;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;pInput=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;open=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=null;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.read(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.readUTF();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;pInput=(ArArchiveInputStream)input.read();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;pInput=(ArArchiveInputStream)input.read();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=(ArchiveInputStream)input.read();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=InputStream.parse(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(output);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.length=input.length+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.input=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.length=input.length-1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=pInput.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ARArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveOutputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveOutputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;pInput=newJsonArchiveInputStream(input);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;pInput=newJsonArchiveInputStream(pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=newJsonArchiveInputStream(input);closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){input=(arArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARRArchiveInputStream){input=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input,offset+1,pInput);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input,offset);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input,offset+1,pInput);input=newARRAYInputStream(input,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;closed=true;}else{System.arraycopy(input,offset,pInput,0,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;closed=true;}else{input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pOutput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).decode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveOutputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(output);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;this.closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49safeInputStream(pInput){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49safeInputStream(pInput){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input==null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input!=null){input=newARArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input>=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49close=false;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)output.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.readLine()-1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;input=newARRAYInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{closed=false;input=newArArchiveInputStream(input);input=newARArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{closed=false;input=newArArchiveInputStream(input);output=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{closed=false;input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveOutputStream){for(ArArchiveInputStreaminput:(ArArchiveOutputStream)input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofAssertionFailedError){input=(ArErrorFailedError)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;longoffset=pInput.getStartOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;longoffset=pInput.getStartOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;longoffset=pInput.getStartOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;longoffset=pInput.getStartOffset();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;input=pInput.getStartOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){((ARArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;pInput=newAssertionFailedError();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;pInput=newAssertionFailedError();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset!=offset){closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;pInput=(ArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;pInput=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;pInput=(ArgArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49close=false;pInput=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){true;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed=true;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);in.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arRawArchiveInputStream=newArRawArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arRawArchiveInputStream=newArRawArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){true;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;input=newArArchiveInputStream(input,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){for(ArArchiveInputStreaminput:(ArArchiveOutputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ARArchiveInputStreaminput:(ARArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;this.open=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;this.open=true;}else{input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(arArchiveInputStream==null)?null:ArArchiveInputStream.DEFAULT;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(arArchiveInputStream==null)?null:arArchiveInputStream;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(arArchiveInputStream==null)?null:arArchiveInputStream.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=(arArchiveInputStream==null)?null:arArchiveInputStream.get();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newFileInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){input=(ARArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){input=(ARArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){input=(ARArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arRawArchiveInputStream=(ARRawArchiveInputStream)pInput;input=newArRawArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pIn;input=newArArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;pInput=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){this.arArchiveInputStream=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){this.arArchiveInputStream=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,pInput.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput>=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=input.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Context.checkNotNull(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=input.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=pInput.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=null;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError("InputStreamisnotsupported.");
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}elseif(input!=null){closed=false;output=newArArchiveInputStream(input);input.close();}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input.close();}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput);this.offset=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=output+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(offset!=0){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(offset!=0){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(offset!=0){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pIn
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(offset>=0){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(offset!=0){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(offset!=0){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,pInput,DEFAULT_NAME);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,pInput,false);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveOutputStream){((ArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arInputStream=(ArInputStream)pInput;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pIn;pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine()+offset);input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARRArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).writeEndObject();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT,pInput,null);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArchiveInputStream){((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;pInput=newArArchiveInputStream(input);closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;pInput=newArArchiveInputStream(input);closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;pInput=newArArchiveInputStream(input);closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=Loop.NEGATIVE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wire=Loop.NEGATIVE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49finalpInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input.getPath());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.pInput=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pIn
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newARArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);output=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;output=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;pInput=(ArArchiveInputStream)input.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;pInput=(ArArchiveInputStream)input.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;pInput=(ArArchiveInputStream)input.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newArArchiveInputStream(pInput);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}else{if(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newJsonArchiveInputStream(input.readLine());closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newJsonArchiveInputStream(input.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=null;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newFileInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrort=newAssertionFailedError("CannotinitializeArArchiveInputStream:"+getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newARInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arRawArchiveInputStream=(ArRawArchiveInputStream)pInput;input=newArRawArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)input).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)input).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){((ARArchiveInputStream)input).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;pInput=newJsonArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;input=newJsonArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;pInput=newJsonArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null="ArchiveInputStreamisnotsupported";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null="ArchiveInputStreamdoesnotexist.";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wrapped=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wrapped=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pIn
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pIn
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(pIn
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pIn>>')'
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){if(!closed){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=null;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){close=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=InputStream.parseInput(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=InputStream.getInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=newLinkedHashMap<InputStream>();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).writeEndObject();input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAY
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newARArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newARArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;shortoffset=pInput.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;intoffset=pInput.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;longoffset=pInput.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;longoffset=input.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.input=input;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.setInput(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.offset=offset+pInput.length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}else{input=newArArchiveInputStream(input,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input.getName());input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYOutputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;longoffset=pInput.getOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;longoffset=pInput.getOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;longoffset=pInput.getOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;longoffset=pInput.getOffset();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;longoffset=pInput.getOffset();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(output);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofFileArchiveInputStream){((FileArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);output=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;output=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newARArchiveInputStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49file=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input);this.offset=off;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input);this.offset=output;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(input,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){closed=false;input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closing=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Close=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49close=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.length=length;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.open=open;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;super(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=null;}else{input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=false;}else{input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newArArchiveInputStream(input,offset,buffer.length+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,this.offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,this);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,Integer.MAX_VALUE);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput>=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArch
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchive
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInputinstanceofArArchiveInputStream){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){if(pInputinstanceofArArchiveInputStream){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInput
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=true;input=newArArchiveInputStream(input);input.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreamclosed=true;input=newArArchiveInputStream(pInput);input.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input);input.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput!=null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInput==null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)input).setEndOfLinks(endOfLinks);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;InputStreamclosed=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;pInput=input;closed=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;pInput=newAssertionFailedError(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==offset){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==offset){closed=true;}elseif(input!=null){closed=false;output=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==offset){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);output=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==offset){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==offset){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==offset){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(output);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wired){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput,input);input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=(ARArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)input).encode(pInput);input=(ArArchiveOutputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=(ArArchiveInputStream)output;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ARArchiveInputStream)input).encode(pInput);input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=true;longoffset=pInput.getLength();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;longoffset=pInput.getLength();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;longoffset=pInput.getLength();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;longoffset=pInput.getLength();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;longoffset=pInput.getLength();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input,pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newARArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArch
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newARRAInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYOutputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(output);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);in.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(output);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.flush();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input,input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;pInput=newJsonArchiveInputStream(input);closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;pInput=newJsonArchiveInputStream(input);closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;pInput=newJsonArchiveInputStream(input);closed=true;}else{input=newJsonArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;longoffset=pInput.getLength();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;longoffset=pInput.getStartLocation();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;longoffset=pInput.getValue();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.offset=offset;longoffset=pInput.getLocalFilePointer();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;longoffset=pInput.getLength();closed=true;}else{System.arraycopy(pInput,0,input,0,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).append('n');input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofARArchiveInputStream){this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setStartOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;this.open=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.close=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){this.open=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){open=true;this.open=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){if(!closed){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(input!=null){closed=false;input=newARArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(input!=null){closed=false;output=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}else{((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setAlternate(true);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;super(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;super();this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;super(pInput);this.offset=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;super();this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;super(input);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+off);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}else{input=newArArchiveInputStream(input.readLine()+offset);input=newArArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newARArchiveInputStream(input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInput==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newARArchiveInputStream(input);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newARArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newFileInputStream(pInput.getAbsolutePath());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newFileInputStream(pInput.getAbsolutePath()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newFileInputStream(input.getPath());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newFileInputStream(pInput.getPath());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input=newFileInputStream(input.getPath()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49super(pInput,input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofARArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openArchiveInput();pInput=(ArArchiveInputStream)input.next();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openArchiveInput();pInput=(ArArchiveInputStream)input.next();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;pInput=(ArArchiveInputStream)input.next();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(input,input.length);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input.flush();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArArchiveInputStream(input,input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input==null){input=newArInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49finalif(input!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setImplicitReturn();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input,offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.length=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;This.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.offset=off;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset;this.set=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=null;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset){closed=true;}else{input=newArArchiveInputStream(output);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;input=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=false;pInput=(ArArchiveInputStream)input.read();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getUpperBounds();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput.getLowerBounds()!=null){closed=true;}else{System.arraycopy(pInput,0,input,0,pInput.getLowerBounds());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,pInput,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closeArchiveInputStream=pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=newArArchiveInputStream(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getEndOffset();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openInput(pInput,pInput.getStartOffset(),pInput.getEndOffset());closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openInput(pInput,pInput.getEndOffset(),pInput.getStartOffset());closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openInput(pInput,pInput.getStartOffset(),pInput);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getStartOffset();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49finalInputStreaminput=pInput.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;input=newArInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(this.arArchiveInputStream)pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).setOffsetToSubtract(offsetToSubtract(pInput),offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{closed=false;input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{closed=false;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput.getLowerBound()!=null){closed=true;}else{finalintoffset=pInput.getLowerBound();closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput.getLowerBound()!=null){closed=true;}else{System.arraycopy(pInput,0,input,0,pInput.getLowerBound());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT_RCURLY,input,buffer);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input.setEndOfLinks(offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input.flush();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input.start();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input.setCharacterEncoding(encoding);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ARArchiveInputStream)input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed||input!=null){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input,offset,offset+1,input.length);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;super(pInput);this.offset=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;super(pInput);this.offset=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;super();this.offset=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;super();this.offset=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;super(pInput);this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;This.closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).flush();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)pInput).close();returnnull;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=newArArchiveInputStream(input,pInput,open);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset<0){closed=true;}else{input=newArArchiveInputStream(offset);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset<0){closed=true;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset<0){closed=true;}else{input=newArArchiveInputStream(output);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=null;}else{input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}else{((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setAnswer(newArArchiveInputStream(input));}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input==null){closed=false;input=newArArchiveInputStream(input,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=pInput.open();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream(INPUT);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream(input
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream(
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getLength();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==0){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset!=0){closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput==null){input=newArArchiveInputStream(input,offset,offset+1,pInput);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;pInput=newArArchiveInputStream(input);closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=pInput.getInput();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=pInput.openStream();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine());output=newArArchiveInputStream(input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArInputStream(input.readLine());input=newArArchiveInputStream(input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newARArchiveInputStream(input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());output=newArArchiveInputStream(input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input.getBytes());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(input,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();output=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newArArchiveOutputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newarArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=null;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newARRAYInputStream(input,offset,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){input=(RawArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){input=(RawArchiveInputStream)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)input.read()-1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49This.arArchiveInputStream=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofARArchiveInputStream){((ARArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=pInput.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofArArchiveOutputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofArArchiveInputStream){closed=false;}else{((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(null,InputStream.DEFAULT_REQUEST,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=newInputStreamReader(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=newInputStreamReader(pInput.readLine());input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=newFileInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveOutputStream)input).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49This.arArchiveInputStream=(ArArchiveInputStream)input.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:(ARArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);input=newArArchiveInputStream(input
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset==offset){closed=true;}elseif(input==null){input=newArArchiveInputStream(output);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49((ArArchiveInputStream)pInput).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newARRAYInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newARRAYInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newARRAYInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){close=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;input=newArArchiveInputStream(input,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49Closed=true;pInput=pInput.getAstRoot();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarc
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcA
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcing
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longoffset=pInput.getOffset();closed=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openInput(pInput,pInput.getOffset(),false);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openInput(pInput,pInput.getOffset(),null);closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newARAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveOutputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:((ArArchiveInputStream)input).getArArchiveInputStream()){input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:((ArArchiveInputStream)input).asPath()){input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:((ArArchiveInputStream)input).getArArchiveInputStreams()){input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:((ArArchiveInputStream)input).readLine()){input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:((ArArchiveInputStream)input).getAr()){input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=true;}elseif(inputinstanceofArArchiveInputStream){for(ArArchiveInputStreaminput:((ArArchiveInputStream)input).getArArchiveInputs()){input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newARArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(pInput,input.length);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=false;this.offset=null;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49longclosed=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49finalintoffset=pInput.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;this.pInput=newAssertionFailedError();closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49open=false;closed=newAssertionFailedError();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input,offset,offset+2);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{closed=false;input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{closed=false;input=newARArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}else{closed=false;input=newArArchiveInputStream(pInput);output=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}else{input=newArArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream();input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=pInput.readLine();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=pInput.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=input.getOffset();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;longoffset=pInput.toString();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine(),input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine(),input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine(),input.readLine());input=newArArchiveInputStream(input.readLine(),input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine(),input.readLine());input=newArArchiveInputStream(input.readLine(),input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){this.offset=offset;}else{thrownewIllegalStateException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){this.offset=offset;}else{thrownewIllegalArgumentException("");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;input=newArArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset-1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null="null";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null="arArchiveInputStream";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49null="Archiveinputstream";
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{System.err.println("UnabletoaccesstheArArchiveInputStream:"+input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{System.err.println("Unabletoaccessfileinput:"+pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{System.err.println("UnabletoaccesstheArArchiveInputStream.");}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;}else{System.err.println("Unabletoaccessfileinput:"+pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{System.arraycopy(pInput,0,input,offset,buffer,offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input=newARArchiveInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArchiveInputStream){((ArArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input);input.flush();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveInputStream(input,input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newARArchiveInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(input!=null){input=newArArchiveOutputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49This.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arInputStream=newArInputStream(pInput);input=newArArchiveInputStream(input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49This.arArchiveInputStream=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input.readLine()+offset,input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine(),input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine());}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=(ArArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=(ARArchiveInputStream)input;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newARRAYInputStream(input,offset,offset+1);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ArArchiveInputStream)pInput;input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcAs
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInput!=null){input=newArArchiveInputStream(input,offset,offset+1,pInput);input=newARRAYInputStream(input,offset,offset+1);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=input.offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.input=input+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.longoffset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=offset+1;this.set=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput==null){closed=false;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=true;}elseif(input!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input,input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInput!=null){input=newArArchiveInputStream(input);input=newARArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(pInput!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=newArArchiveInputStream(pInput
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input==null){closed=false;input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset){closed=true;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofAssertionFailedError){input=(ArErrorFailedError)pInput;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input==null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newREADInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();input=newARArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArchiveInputStream){((ArArchiveInputStream)input).close();input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError("Anerroroccurred:"+offset);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49AssertionFailedErrore=newAssertionFailedError("InputStreamclosed:"+input.getMessage());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=true;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49wires=false;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(output);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49InputStreaminput=newInputStreamReader(input.readLine());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=null;closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49pInput=null;closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofARArchiveInputStream){((ArArchiveInputStream)input).close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(output);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset){closed=true;}else{input=newArArchiveInputStream(pInput,offset);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(offset){closed=true;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(input,offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.arArchiveInputStream=(ARArchiveInputStream)pInput;input=newArArchiveInputStream(pInput,pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}else{closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;input=newArArchiveInputStream(pInput);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,null,pInput.getMethod());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(input,null,pInput.getRawClass());
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newARRAYInputStream(input,offset);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newARRAYInputStream();input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newARRAYOutputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newARRAYInputStream(pInput);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newARAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;pInput=newJsonArchiveInputStream(pInput);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).flush();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newARRAYInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newARArchiveInputStream(input);input=newARRAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newARAYInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(pInput);}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){input=newArArchiveInputStream(input);}else{input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(pInputinstanceofFileArchiveInputStream){((FileArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInputinstanceofFileArchiveInputStream){closed=false;}else{((FileArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofARArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.offset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.closed=true;this.offset=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.offset=true;this.closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;this.closed=true;this.offset=offset+pInput.length();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(openLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).close();input=null;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;longclosed=true;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;this.offset=offset+1;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;this.offset=offset;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;this.offset=offset+1;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;closed=true;this.offset=offset;closed=true;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(endOfLinks);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(!closed){closed=true;this.closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=true;this.closed=true;}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=true;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveOutputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArArchiveInputStream){((ArArchiveInputStream)input).encode(pInput,input);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArchiveInputStream){((ArArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(inputinstanceofArchiveInputStream){((ArchiveInputStream)input).encode(pInput);input=newArArchiveInputStream();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.closed=false;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49closed=true;}elseif(pInputinstanceofArArchiveInputStream){((ArArchiveInputStream)pInput).setEndOfLinks(input,input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input==null){closed=true;}elseif(input!=null){input=newARArchiveInputStream(input);input=newARRAYInputStream(input);input.close();}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){closed=false;input=newArArchiveInputStream(input);input=newARRAYInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT,input,closed);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this(InputStream.DEFAULT,pInput,input);
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(closed){closed=false;}else{input=newArArchiveInputStream(input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine()+offset,input.readLine());input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}else{input=newArArchiveInputStream(input.readLine()+offset);input=newArArchiveInputStream(input.readLine()+offset,input.readLine()+offset);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input==null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(input!=null){closed=false;}elseif(input!=null){input=newArArchiveInputStream(input);input=newArArchiveInputStream(pInput);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49if(pInput!=null){closed=false;}elseif(pInputinstanceofArArchiveInputStream){this.arArchiveInputStream=newArArchiveInputStream(input);}
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49openArchiveInput();pInput=(ArArchiveInputStream)input.read();
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.offset=Loop.NEGATIVE;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=pInput<null?null:pInput;
projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java49this.openArchiveInputStream=newArArchiveInputStream(pInput,input);
