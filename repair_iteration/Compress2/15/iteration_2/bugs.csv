bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  >=  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
2	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)||(offset  >=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  >=  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
3	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset!=  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
4	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)||(offset!=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset!=  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
5	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
6	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2  ==  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
7	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)||(offset  <  =  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  <  =  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
9	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  [FE]  IOException  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)&&(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
10	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
11	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2  >=  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2  >=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2  >=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
12	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2  ==  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
13	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  If(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2!=    0    ||    input.available()    ==    0)    {    If(offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
14	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2  >>  0  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2  >>  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2  >>  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
15	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2!=  0  ||  input.available()  >=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2!=  0  ||  input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
16	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2  [Delete]  0  ||  input.available()  ==  0)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  if(offset  %  2  [Delete]  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2!=    0    ||    input.available()    ==    0)    {    if(offset  %  2  [Delete]  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ')'  expected	18	None	add
17	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if  ((  offset  %  2  ==  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
18	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2!=  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2!=  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if  ((  offset  %  2!=  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
19	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2  >=  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2  >=  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if  ((  offset  %  2  >=  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
20	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  If  ((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  If  ((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(offset    >    0))    {    If  ((  offset  %  2  ==  0)||(offset  >  0))  {	  	non-compiled	[CE]  ';'  expected	12	None	add
21	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2  >>  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2  >>  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if  ((  offset  %  2  >>  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
22	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2  {  0)||(offset  >  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %  2  {  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if  ((  offset  %  2  {  0)||(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	12	None	add
23	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
24	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if  ((  offset  %  2  >>  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
25	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if  ((  offset  %  2  >=  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
26	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if  ((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
27	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2  [Delete]  0)||(offset  %  2  ==  0))  {  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2  [Delete]  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if  ((  offset  %  2  [Delete]  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  ')'  expected	7	None	add
28	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  >=  0))  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  if  ((  offset  %  2!=  0)||(offset  %  2  >=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    if  ((  offset  %  2!=  0)||(offset  %  2  >=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
29	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  If  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  If  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    If  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {	  	non-compiled	[CE]  ';'  expected	7	None	add
30	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
31	[BUG]  [BUGGY]  if(input.available()  >  0)  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
32	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input!=  null  ||  input.available()  ==  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
33	[BUG]  [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input!=  null  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null  ||  input.available()  ==  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input  ==  null  ||  input.available()  ==  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
35	[BUG]  [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input  ==  null  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null  ||  input.available()  ==  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
36	[BUG]  [BUGGY]  if(input.available()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  <  =  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  <  =  0)  {	  if(input.available()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
37	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()!=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()!=  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
38	[BUG]  [BUGGY]  if(input.available()!=  0)  {  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()!=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()!=  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
39	[BUG]  [BUGGY]  [FE]  IOException  [FE]              AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >=  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
40	[BUG]  [BUGGY]  if(input.available()  >=  0)  {  [FE]  IOException  [FE]              AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
41	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  if  (offset  %  2!=  1)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  1)  {  if  (offset  %  2!=  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    1)    {    if  (offset  %  2!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
42	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  1)  {  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    1)    {    if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
43	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  if  (offset  %  2  >=  1)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  1)  {  if  (offset  %  2  >=  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    1)    {    if  (offset  %  2  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
44	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  if  (offset  %  2  >>  1)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  1)  {  if  (offset  %  2  >>  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    1)    {    if  (offset  %  2  >>  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
45	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    1)    {    int  offset  =  input.available();  if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
46	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  if  (offset  %  2!=  1)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  if  (offset  %  2!=  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    1)    {    int  offset  =  input.available();  if  (offset  %  2!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
47	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  if  (offset  %  2  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  if  (offset  %  2  >=  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    1)    {    int  offset  =  input.available();  if  (offset  %  2  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
48	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  If  (offset  %  2!=  1)  {  [CE]  ';'  expected  [FE]                  IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  1)  {  If  (offset  %  2!=  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    1)    {    If  (offset  %  2!=  1)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
49	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	8	2	replace
50	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	8	2	replace
51	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	8	2	replace
52	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)&&(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	8	2	replace
53	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)||(offset  %  2  ==  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)!=  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
55	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  AssertionFailedError  	15	1	replace
57	[BUG]  [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2!=  0)&&(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  AssertionFailedError  	15	1	replace
58	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
59	[BUG]  [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
60	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
61	[BUG]  [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  %  2  >=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
62	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if  ((  offset  %  2!=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
63	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2  >=  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2  >=  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if  ((  offset  %  2  >=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
64	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2  >>  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2  >>  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if  ((  offset  %  2  >>  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
65	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
66	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  If  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  If  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    If  ((  offset  %  2!=  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ';'  expected	14	None	add
67	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2  [Delete]  0)||(input.available()  >  0))  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  if  ((  offset  %  2  [Delete]  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    if  ((  offset  %  2  [Delete]  0)||(input.available()  >  0))  {	  	non-compiled	[CE]  ')'  expected	14	None	add
68	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  return  null;  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
69	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  null;  }	      	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
70	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  input.length  -  1;  i  >=  0;  i--)  {  return  null;  }	      	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
71	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  null;  }	      	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
72	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  input.length;  i  <  0;  i--)  {  return  null;  }	      	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
73	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [CE]  cannot  find  symbol  length  [FE]                          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0,  length  =  input.length;  i  <  length;  ++i)  {  return  null;  }	      	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
74	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
75	[BUG]  [BUGGY]  if  (read  ||  offset  %  2  ==  0)  {  [CE]  cannot  find  symbol  read  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (read  ||  offset  %  2  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (read  ||  offset  %  2  ==  0)  {	  if    (offset    %    2    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  read	2	None	replace
76	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  %  2  ==  0  ||  input.available()  >  0)  {	  if    (offset    %    2    ==    0)    {    	compilable	  [FE]  IOException  	2	2	replace
77	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0  ||  input.available()  >  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2  ==  0  ||  input.available()  >  0)  {	  if    (offset    %    2    ==    0)    {    	compilable	  [FE]  IOException  	2	2	replace
78	[BUG]  [BUGGY]  if  (offset  %  2  ==  0  ||  input.isEnabled())  {  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0  ||  input.isEnabled())  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2  ==  0  ||  input.isEnabled())  {	  if    (offset    %    2    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
79	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0)    {    if  (offset  %  2  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
80	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  If  (offset  %  2  ==  0)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0)  {  If  (offset  %  2  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0)    {    If  (offset  %  2  ==  0)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
81	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0  ||  offset  %  2  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0  ||  offset  %  2  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0)    {    if  (offset  %  2  ==  0  ||  offset  %  2  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
82	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2!=  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2!=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0)    {    if  (offset  %  2!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
83	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  >=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0)    {    if  (offset  %  2  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
84	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0  ||  offset  +  1  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0  ||  offset  +  1  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0)    {    if  (offset  %  2  ==  0  ||  offset  +  1  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
85	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  2)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  %  2!=  2)  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	6	2	replace
86	[BUG]  [BUGGY]  if  (offset  %  2!=  2)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  2)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2!=  2)  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	6	2	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  2)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  %  2  ==  2)  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
88	[BUG]  [BUGGY]  if  (offset  %  2  ==  2)  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  2)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2  ==  2)  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
89	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  1)||(offset  >  0))  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	6	2	replace
90	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  1)||(offset  >  0))  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	6	2	replace
91	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2!=  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2!=  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    >    0))    {    if  ((  offset  %  2!=  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
92	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  >>  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  >>  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    >    0))    {    if  ((  offset  %  2  >>  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
93	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  >=  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  >=  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    >    0))    {    if  ((  offset  %  2  >=  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
94	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    >    0))    {    if  ((  offset  %  2  ==  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
95	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  [Delete]  0)||(offset  >  0))  {  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  [Delete]  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    >    0))    {    if  ((  offset  %  2  [Delete]  0)||(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	10	None	add
96	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  If  ((  offset  %  2!=  0)||(offset  >  0))  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  If  ((  offset  %  2!=  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    >    0))    {    If  ((  offset  %  2!=  0)||(offset  >  0))  {	  	non-compiled	[CE]  ';'  expected	10	None	add
97	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  [BUGGY]  0)||(offset  >  0))  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  if  ((  offset  %  2  [BUGGY]  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2!=    0)||(offset    >    0))    {    if  ((  offset  %  2  [BUGGY]  0)||(offset  >  0))  {	  	non-compiled	[CE]  ')'  expected	10	None	add
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  ==  1)  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
99	[BUG]  [BUGGY]  if  (offset  ==  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  ==  1)  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
100	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  >=  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  >=  1)  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
101	[BUG]  [BUGGY]  if  (offset  >=  1)  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  >=  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >=  1)  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
102	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
103	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  1)||(input.available()  >  0))  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
104	[BUG]  [BUGGY]  if  (offset  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  <  =  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  =  1)  {	  if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
105	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  1)||(offset  >=  0))  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
106	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  1)||(offset  >=  0))  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
107	[BUG]  [BUGGY]  [FE]  IOException  [FE]              AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  1)||(offset!=  0))  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
108	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  [FE]  IOException  [FE]              AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  1)||(offset!=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  1)||(offset!=  0))  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
109	[BUG]  [BUGGY]  [FE]  IOException  [FE]                AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  1)||(offset  >  0))  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
110	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  [FE]  IOException  [FE]                AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  1)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  1)||(offset  >  0))  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
111	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
112	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  >  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
113	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()!=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
114	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  >=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
115	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  <  =  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  <  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
116	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  <  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
117	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
118	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  {  0)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  {  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  {  0)  {	  	non-compiled	[CE]  ')'  expected	16	None	add
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  0)||(offset  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
120	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  0)||(offset  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)&&(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
122	[BUG]  [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  [FE]  AssertionFailedError  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2!=  0)&&(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)&&(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
123	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2!=  0)||(offset  <  =  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  <  =  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
124	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)||(offset  >=  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	11	2	replace
125	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  [FE]  IOException  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2!=  0)||(offset  >=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >=  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	11	2	replace
126	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2!=  0)||(offset  >  1))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	11	2	replace
127	[BUG]  [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  [FE]  IOException  [FE]            IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2!=  0)||(offset  >  1))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2!=  0)||(offset  >  1))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	11	2	replace
128	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
129	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  int  offset  =  input.available();  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  int  offset  =  input.available();  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    int  offset  =  input.available();  if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
130	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  If  (offset  %  2  ==  1)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  If  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    If  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
131	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  int  offset  =  input.length();  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  int  offset  =  input.length();  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    int  offset  =  input.length();  if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
132	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  if  (offset  %  2  >=  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  if  (offset  %  2  >=  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    if  (offset  %  2  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
134	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
135	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
136	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
137	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
138	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
139	[BUG]  [BUGGY]  [FE]  IOException  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
140	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  offset  %  2  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
141	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
142	[BUG]  [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >=  0  ||  offset  %  2!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
143	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input  ==  null  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input  ==  null  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
144	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  0  ||  input.isEnabled())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  0  ||  input.isEnabled())  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  ==  0  ||  input.isEnabled())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
145	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  0  ||  input!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  0  ||  input!=  null)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  ==  0  ||  input!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
146	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %)  2  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  if  ((  offset  %)  2  ==  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    ((    offset    %    2    ==    0)||(offset    >    0))    {    if  ((  offset  %)  2  ==  0)||(offset  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
147	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input!=  null)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input!=  null)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
148	[BUG]  [BUGGY]  if(input!=  null)  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input!=  null)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input!=  null)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  IOException  	17	2	replace
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input  ==  null)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input  ==  null)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
150	[BUG]  [BUGGY]  if(input  ==  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input  ==  null)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input  ==  null)  {	  if(input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	17	1	replace
151	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  ==  0  ||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
152	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)  ==  0  ||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0  ||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
153	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2!=    0    ||    input.available()    ==    0)    {    InputStream  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
154	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  int  offset  %  2!=  0  ||  input.available()  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  int  offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset    %    2!=    0    ||    input.available()    ==    0)    {    int  offset  %  2!=  0  ||  input.available()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
155	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
156	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
157	[BUG]  [BUGGY]  if  ((  input  *  2!=  0)||(input.available()  >  0))  {  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  input  *  2!=  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  input  *  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	15	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0  ||  offset  %  2!=  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
159	[BUG]  [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0  ||  offset  %  2!=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0  ||  offset  %  2!=  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
160	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  1)||(offset  >=  0))  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	6	2	replace
161	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  1)||(offset  >=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  1)||(offset  >=  0))  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	6	2	replace
162	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  1)||(offset  ==  0))  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	6	2	replace
163	[BUG]  [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  1)||(offset  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  1)||(offset  ==  0))  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  IOException  	6	2	replace
164	[BUG]  [BUGGY]  if  (offset  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  <  =  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  =  0)  {	  if    (offset    %    2    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
165	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  >  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  >  0)  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
166	[BUG]  [BUGGY]  if  (offset  >  0)  {  [FE]  IOException  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  >  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  >  0)  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  IOException  	4	2	replace
167	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  input[i];  }	      	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
168	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [CE]  cannot  find  symbol  length  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  i++)  {  return  input[i];  }	      	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
169	[BUG]  [BUGGY]  if(input.available()  >  0)  {  return  null;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  return  null;  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  return  null;  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
170	[BUG]  [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  return  this;  }	      	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
171	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    AssertionFailedError  <  AssertionFailedError>  offset  %  2  ==  1)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	add
172	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  offset  =  input.read();  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  offset  =  input.read();  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    InputStream  offset  =  input.read();  if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
173	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  offset  =  input.readInput();  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  offset  =  input.readInput();  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    InputStream  offset  =  input.readInput();  if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
174	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    AssertionFailedError  <  AssertionFailedError>  offset  =  input.available();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	add
175	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  offset  =  input.available();  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  offset  =  input.available();  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    InputStream  offset  =  input.available();  if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
176	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0  ||  offset  +  pInput.available()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0  ||  offset  +  pInput.available()  >  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0)    {    if  (offset  %  2  ==  0  ||  offset  +  pInput.available()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
177	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0  ||  offset  *  2  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0)  {  if  (offset  %  2  ==  0  ||  offset  *  2  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0)    {    if  (offset  %  2  ==  0  ||  offset  *  2  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
178	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  >=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
179	[BUG]  [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  >=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  <  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
181	[BUG]  [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  <  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  <  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
183	[BUG]  [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  ==  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  ==  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
184	[BUG]  [BUGGY]  [FE]  IOException  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  >  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
185	[BUG]  [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]          AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  >  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  >  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
186	[BUG]  [BUGGY]  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
187	[BUG]  [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  [FE]  IOException  [FE]            AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset!=  0  ||  input.available()  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset!=  0  ||  input.available()  ==  0)  {	  if(offset    %    2!=    0    ||    input.available()    ==    0)    {    	compilable	  [FE]  IOException  	19	2	replace
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
189	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  [FE]  AssertionFailedError  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  0)||(offset  %  2!=  0))  {	  if    (offset    %    2!=    1)    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
190	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)||(offset  >  0))  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)  ==  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
191	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)!=  0  ||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	11	2	replace
192	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)!=  0  ||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  >  0))  {	  if    ((    offset    %    2!=    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	11	2	replace
193	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	8	2	replace
194	[BUG]  [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0  ||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	8	2	replace
195	[BUG]  [BUGGY]  if((  input.available()  >>  0)||(offset  %  2  ==  0))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  >>  0)||(offset  %  2  ==  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >>  0)||(offset  %  2  ==  0))  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	8	None	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)!=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)!=  0)  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	8	1	replace
197	[BUG]  [BUGGY]  if((  offset  %  2)!=  0)  {  [FE]  AssertionFailedError  [FE]        IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)!=  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)!=  0)  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  AssertionFailedError  	8	1	replace
198	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	8	2	replace
199	[BUG]  [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  [FE]  IOException  [FE]          IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2  ==  0)||(offset  %  2)  ==  0)  {	  if    ((    offset    %    2!=    0)||(offset    %    2    ==    0))    {    	compilable	  [FE]  IOException  	8	2	replace
200	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  int  offset  %  2  ==  0)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  0)  {  int  offset  %  2  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    0)    {    int  offset  %  2  ==  0)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
201	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  input  =  getInput();  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  input  =  getInput();  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    InputStream  input  =  getInput();  if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
202	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  input  =  input.read();  if  (offset  %  2  ==  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2  ==  1)  {  InputStream  input  =  input.read();  if  (offset  %  2  ==  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2    ==    1)    {    InputStream  input  =  input.read();  if  (offset  %  2  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
203	[BUG]  [BUGGY]  InputStream  input  =  input.readInput();  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  InputStream  input  =  input.readInput();  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	InputStream  input  =  input.readInput();	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
204	[BUG]  [BUGGY]  if(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  >  0)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
205	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
206	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {  return  null;  }  else  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
207	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  0  ||  input.isVersion())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(input.available()  ==  0)  {  if(input.available()  ==  0  ||  input.isVersion())  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()    ==    0)    {    if(input.available()  ==  0  ||  input.isVersion())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  <  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  <  1)  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
209	[BUG]  [BUGGY]  if  (offset  <  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  <  1)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  <  1)  {	  if    (offset    %    2    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
210	[BUG]  [BUGGY]  if(offset  %  2  ==  0  ||  input.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if(offset  %  2  ==  0  ||  input.length()  >  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  %  2  ==  0  ||  input.length()  >  0)  {	  if    (offset    %    2    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
211	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  input.available()  >  0)||(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
212	[BUG]  [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.available()  >  0)||(offset  %  2!=  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.available()  >  0)||(offset  %  2!=  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	compilable	  [FE]  IOException  	15	2	replace
213	[BUG]  [BUGGY]  if((  input.length  %  2!=  0)||(input.available()  >  0))  {  [CE]  cannot  find  symbol  length  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.length  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2!=  0)||(input.available()  >  0))  {	  if    ((    offset    %    2!=    0)||(input.available()    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	15	None	replace
214	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if((  offset  %  2)  ==  0)  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
215	[BUG]  [BUGGY]  if((  offset  %  2)  ==  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  offset  %  2)  ==  0)  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  offset  %  2)  ==  0)  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	compilable	  [FE]  IOException  	13	2	replace
216	[BUG]  [BUGGY]  if((  input.length  %  2  ==  0)||(offset  >  0))  {  [CE]  cannot  find  symbol  length  [FE]      IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if((  input.length  %  2  ==  0)||(offset  >  0))  {  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if((  input.length  %  2  ==  0)||(offset  >  0))  {	  if    ((    offset    %    2    ==    0)||(offset    >    0))    {    	non-compiled	[CE]  cannot  find  symbol  length	13	None	replace
217	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  }  }    if  (input.available()  ==  0)  {  return  null;  }    [BUGGY]  if  (offset  %  2!=  1)  {  int  offset  =  input.available();  [BUGGY]    read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if    (offset    %    2!=    1)    {    int  offset  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
