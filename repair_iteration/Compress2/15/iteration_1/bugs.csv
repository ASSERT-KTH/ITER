bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  (offset  %  2  ==  0)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  %  2  ==  0)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
2	[BUG]  [BUGGY]  if  (offset  %  2  ==  0)  {  [FE]  IOException  [FE]    AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  (offset  %  2  ==  0)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2  ==  0)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  (offset  %  2  ==  1)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  %  2  ==  1)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	29	1	replace
4	[BUG]  [BUGGY]  if  (offset  %  2  ==  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  (offset  %  2  ==  1)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2  ==  1)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	29	1	replace
5	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  (offset  %  2!=  1)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  (offset  %  2!=  1)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
6	[BUG]  [BUGGY]  if  (offset  %  2!=  1)  {  [FE]  IOException  [FE]        AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  (offset  %  2!=  1)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  (offset  %  2!=  1)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
7	[BUG]  [BUGGY]  [FE]  IOException  [FE]          AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
8	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [FE]  IOException  [FE]          AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  0)||(offset  %  2  ==  0))  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
9	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]    [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	  	if  (offset  %  2  !=  0)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
10	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  0)||(offset  >  0))  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
11	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  [FE]  IOException  [FE]    AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  ((  offset  %  2!=  0)||(offset  >  0))  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  0)||(offset  >  0))  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
12	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2  ==  0)||(offset  >  0))  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
13	[BUG]  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  [FE]  IOException  [FE]      AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  ((  offset  %  2  ==  0)||(offset  >  0))  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2  ==  0)||(offset  >  0))  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
14	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if  ((  offset  %  2!=  0)||(input.available()  >  0))  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
15	[BUG]  [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [FE]  IOException  [FE]        AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if  ((  offset  %  2!=  0)||(input.available()  >  0))  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if  ((  offset  %  2!=  0)||(input.available()  >  0))  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  IOException  	29	2	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if(input.available()  ==  0)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(input.available()  ==  0)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	29	1	replace
17	[BUG]  [BUGGY]  if(input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if(input.available()  ==  0)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(input.available()  ==  0)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	29	1	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	add	if(offset  %  2!=  0  ||  input.available()  ==  0)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	29	1	replace
19	[BUG]  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  }  }  }    if  (input.available()  ==  0)  {  return  null;  }  [BUGGY]  if(offset  %  2!=  0  ||  input.available()  ==  0)  {  [BUGGY]  read();  }  final  byte[]  name  =  new  byte[16];  final  byte[]  lastmodified  =  new  byte[12];  final  byte[]  userid  =  new  byte[6];  final  byte[]  groupid  =  new  byte[6];  final  byte[]  filemode  =  new  byte[8];  final  byte[]  length  =  new  byte[10];  read(name);  [CLASS]  ArArchiveInputStream  [METHOD]  getNextArEntry  [RETURN_TYPE]  ArArchiveEntry  [VARIABLES]  byte[]  expected  filemode  groupid  lastmodified  length  name  realized  userid  boolean  closed  InputStream  input  pInput  long  offset  int  i  read  	projects/Compress2/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java	0.7071067811865475	83	83	1	replace	if(offset  %  2!=  0  ||  input.available()  ==  0)  {	if  (offset  %  2  !=  0)  {  	compilable	  [FE]  AssertionFailedError  	29	1	replace
